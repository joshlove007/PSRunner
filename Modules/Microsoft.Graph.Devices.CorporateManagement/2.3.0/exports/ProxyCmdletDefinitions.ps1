
# ----------------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.7, generator: @autorest/powershell@3.0.505)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementandroidmanagedappprotectionappcount
#>
function Get-MgDeviceAppManagementAndroidManagedAppProtectionAppCount {
[Alias('Get-MgDeviceAppMgtAndroidManagedAppProtectionAppCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtectionAppCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtectionAppCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementandroidmanagedappprotectionapp
#>
function Get-MgDeviceAppManagementAndroidManagedAppProtectionApp {
[Alias('Get-MgDeviceAppMgtAndroidManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtectionApp_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtectionApp_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtectionApp_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementandroidmanagedappprotectionassignmentcount
#>
function Get-MgDeviceAppManagementAndroidManagedAppProtectionAssignmentCount {
[Alias('Get-MgDeviceAppMgtAndroidManagedAppProtectionAssignmentCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtectionAssignmentCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtectionAssignmentCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
.Description
Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementandroidmanagedappprotectionassignment
#>
function Get-MgDeviceAppManagementAndroidManagedAppProtectionAssignment {
[Alias('Get-MgDeviceAppMgtAndroidManagedAppProtectionAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtectionAssignment_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtectionAssignment_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtectionAssignment_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementandroidmanagedappprotectioncount
#>
function Get-MgDeviceAppManagementAndroidManagedAppProtectionCount {
[Alias('Get-MgDeviceAppMgtAndroidManagedAppProtectionCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtectionCount_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementandroidmanagedappprotectiondeploymentsummary
#>
function Get-MgDeviceAppManagementAndroidManagedAppProtectionDeploymentSummary {
[Alias('Get-MgDeviceAppMgtAndroidManagedAppProtectionDeploymentSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtectionDeploymentSummary_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtectionDeploymentSummary_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the androidManagedAppProtection object.
.Description
Read properties and relationships of the androidManagedAppProtection object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementandroidmanagedappprotection
#>
function Get-MgDeviceAppManagementAndroidManagedAppProtection {
[Alias('Get-MgDeviceAppMgtAndroidManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtection_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtection_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementAndroidManagedAppProtection_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementdefaultmanagedappprotectionappcount
#>
function Get-MgDeviceAppManagementDefaultManagedAppProtectionAppCount {
[Alias('Get-MgDeviceAppMgtDefaultManagedAppProtectionAppCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementDefaultManagedAppProtectionAppCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementDefaultManagedAppProtectionAppCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementdefaultmanagedappprotectionapp
#>
function Get-MgDeviceAppManagementDefaultManagedAppProtectionApp {
[Alias('Get-MgDeviceAppMgtDefaultManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementDefaultManagedAppProtectionApp_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementDefaultManagedAppProtectionApp_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementDefaultManagedAppProtectionApp_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementdefaultmanagedappprotectioncount
#>
function Get-MgDeviceAppManagementDefaultManagedAppProtectionCount {
[Alias('Get-MgDeviceAppMgtDefaultManagedAppProtectionCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementDefaultManagedAppProtectionCount_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementdefaultmanagedappprotectiondeploymentsummary
#>
function Get-MgDeviceAppManagementDefaultManagedAppProtectionDeploymentSummary {
[Alias('Get-MgDeviceAppMgtDefaultManagedAppProtectionDeploymentSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementDefaultManagedAppProtectionDeploymentSummary_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementDefaultManagedAppProtectionDeploymentSummary_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the defaultManagedAppProtection object.
.Description
Read properties and relationships of the defaultManagedAppProtection object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementdefaultmanagedappprotection
#>
function Get-MgDeviceAppManagementDefaultManagedAppProtection {
[Alias('Get-MgDeviceAppMgtDefaultManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementDefaultManagedAppProtection_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementDefaultManagedAppProtection_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementDefaultManagedAppProtection_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementiosmanagedappprotectionappcount
#>
function Get-MgDeviceAppManagementiOSManagedAppProtectionAppCount {
[Alias('Get-MgDeviceAppMgtiOSManagedAppProtectionAppCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtectionAppCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtectionAppCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the managedMobileApp object.
.Description
Read properties and relationships of the managedMobileApp object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementiosmanagedappprotectionapp
#>
function Get-MgDeviceAppManagementiOSManagedAppProtectionApp {
[Alias('Get-MgDeviceAppMgtiOSManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtectionApp_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtectionApp_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtectionApp_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementiosmanagedappprotectionassignmentcount
#>
function Get-MgDeviceAppManagementiOSManagedAppProtectionAssignmentCount {
[Alias('Get-MgDeviceAppMgtiOSManagedAppProtectionAssignmentCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtectionAssignmentCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtectionAssignmentCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
.Description
Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementiosmanagedappprotectionassignment
#>
function Get-MgDeviceAppManagementiOSManagedAppProtectionAssignment {
[Alias('Get-MgDeviceAppMgtiOSManagedAppProtectionAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtectionAssignment_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtectionAssignment_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtectionAssignment_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementiosmanagedappprotectioncount
#>
function Get-MgDeviceAppManagementiOSManagedAppProtectionCount {
[Alias('Get-MgDeviceAppMgtiOSManagedAppProtectionCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtectionCount_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the managedAppPolicyDeploymentSummary object.
.Description
Read properties and relationships of the managedAppPolicyDeploymentSummary object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementiosmanagedappprotectiondeploymentsummary
#>
function Get-MgDeviceAppManagementiOSManagedAppProtectionDeploymentSummary {
[Alias('Get-MgDeviceAppMgtiOSManagedAppProtectionDeploymentSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtectionDeploymentSummary_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtectionDeploymentSummary_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the iosManagedAppProtection object.
.Description
Read properties and relationships of the iosManagedAppProtection object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementiosmanagedappprotection
#>
function Get-MgDeviceAppManagementiOSManagedAppProtection {
[Alias('Get-MgDeviceAppMgtiOSManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtection_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtection_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementiOSManagedAppProtection_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedapppolicycount
#>
function Get-MgDeviceAppManagementManagedAppPolicyCount {
[Alias('Get-MgDeviceAppMgtManagedAppPolicyCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppPolicyCount_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the targetedManagedAppProtection object.
.Description
Read properties and relationships of the targetedManagedAppProtection object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedapppolicy
#>
function Get-MgDeviceAppManagementManagedAppPolicy {
[Alias('Get-MgDeviceAppMgtManagedAppPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppPolicy_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppPolicy_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppPolicy_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedappregistrationappliedpolicycount
#>
function Get-MgDeviceAppManagementManagedAppRegistrationAppliedPolicyCount {
[Alias('Get-MgDeviceAppMgtManagedAppRegistrationAppliedPolicyCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationAppliedPolicyCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationAppliedPolicyCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Zero or more policys already applied on the registered app when it last synchronized with managment service.
.Description
Zero or more policys already applied on the registered app when it last synchronized with managment service.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedappregistrationappliedpolicy
#>
function Get-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy {
[Alias('Get-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedappregistrationcount
#>
function Get-MgDeviceAppManagementManagedAppRegistrationCount {
[Alias('Get-MgDeviceAppMgtManagedAppRegistrationCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationCount_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedappregistrationintendedpolicycount
#>
function Get-MgDeviceAppManagementManagedAppRegistrationIntendedPolicyCount {
[Alias('Get-MgDeviceAppMgtManagedAppRegistrationIntendedPolicyCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationIntendedPolicyCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationIntendedPolicyCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Zero or more policies admin intended for the app as of now.
.Description
Zero or more policies admin intended for the app as of now.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedappregistrationintendedpolicy
#>
function Get-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy {
[Alias('Get-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedappregistrationoperationcount
#>
function Get-MgDeviceAppManagementManagedAppRegistrationOperationCount {
[Alias('Get-MgDeviceAppMgtManagedAppRegistrationOperationCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationOperationCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationOperationCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the managedAppOperation object.
.Description
Read properties and relationships of the managedAppOperation object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedappregistrationoperation
#>
function Get-MgDeviceAppManagementManagedAppRegistrationOperation {
[Alias('Get-MgDeviceAppMgtManagedAppRegistrationOperation')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppOperation
    ${ManagedAppOperationId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationOperation_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationOperation_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationOperation_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Invoke function getUserIdsWithFlaggedAppRegistration
.Description
Invoke function getUserIdsWithFlaggedAppRegistration
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.String
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedappregistrationuseridwithflaggedappregistration
#>
function Get-MgDeviceAppManagementManagedAppRegistrationUserIdWithFlaggedAppRegistration {
[Alias('Get-MgDeviceAppMgtManagedAppRegistrationUserIdGraphWPreFlaggedAppRegistration')]
[OutputType([System.String])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Management.Automation.SwitchParameter]
    # Include count of items
    ${Count},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter()]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistrationUserIdWithFlaggedAppRegistration_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the androidManagedAppRegistration object.
.Description
Read properties and relationships of the androidManagedAppRegistration object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedappregistration
#>
function Get-MgDeviceAppManagementManagedAppRegistration {
[Alias('Get-MgDeviceAppMgtManagedAppRegistration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistration_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistration_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppRegistration_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedappstatuscount
#>
function Get-MgDeviceAppManagementManagedAppStatusCount {
[Alias('Get-MgDeviceAppMgtManagedAppStatusCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppStatusCount_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the managedAppStatusRaw object.
.Description
Read properties and relationships of the managedAppStatusRaw object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedappstatus
#>
function Get-MgDeviceAppManagementManagedAppStatus {
[Alias('Get-MgDeviceAppMgtManagedAppStatus')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppStatus
    ${ManagedAppStatusId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppStatus_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppStatus_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedAppStatus_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedebookassignmentcount
#>
function Get-MgDeviceAppManagementManagedEBookAssignmentCount {
[Alias('Get-MgDeviceAppMgtManagedEBookAssignmentCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookAssignmentCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookAssignmentCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the managedEBookAssignment object.
.Description
Read properties and relationships of the managedEBookAssignment object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedebookassignment
#>
function Get-MgDeviceAppManagementManagedEBookAssignment {
[Alias('Get-MgDeviceAppMgtManagedEBookAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBookAssignment
    ${ManagedEBookAssignmentId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookAssignment_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookAssignment_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookAssignment_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedebookcount
#>
function Get-MgDeviceAppManagementManagedEBookCount {
[Alias('Get-MgDeviceAppMgtManagedEBookCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookCount_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedebookdevicestatecount
#>
function Get-MgDeviceAppManagementManagedEBookDeviceStateCount {
[Alias('Get-MgDeviceAppMgtManagedEBookDeviceStateCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookDeviceStateCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookDeviceStateCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the deviceInstallState object.
.Description
Read properties and relationships of the deviceInstallState object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedebookdevicestate
#>
function Get-MgDeviceAppManagementManagedEBookDeviceState {
[Alias('Get-MgDeviceAppMgtManagedEBookDeviceState')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceInstallState
    ${DeviceInstallStateId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookDeviceState_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookDeviceState_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookDeviceState_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the eBookInstallSummary object.
.Description
Read properties and relationships of the eBookInstallSummary object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEBookInstallSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedebookinstallsummary
#>
function Get-MgDeviceAppManagementManagedEBookInstallSummary {
[Alias('Get-MgDeviceAppMgtManagedEBookInstallSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEBookInstallSummary])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookInstallSummary_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookInstallSummary_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedebookuserstatesummarycount
#>
function Get-MgDeviceAppManagementManagedEBookUserStateSummaryCount {
[Alias('Get-MgDeviceAppMgtManagedEBookUserStateSummaryCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookUserStateSummaryCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookUserStateSummaryCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedebookuserstatesummarydevicestatecount
#>
function Get-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceStateCount {
[Alias('Get-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceStateCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceStateCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceStateCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
The install state of the eBook.
.Description
The install state of the eBook.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedebookuserstatesummarydevicestate
#>
function Get-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState {
[Alias('Get-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceInstallState
    ${DeviceInstallStateId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the userInstallStateSummary object.
.Description
Read properties and relationships of the userInstallStateSummary object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedebookuserstatesummary
#>
function Get-MgDeviceAppManagementManagedEBookUserStateSummary {
[Alias('Get-MgDeviceAppMgtManagedEBookUserStateSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookUserStateSummary_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookUserStateSummary_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBookUserStateSummary_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the managedEBook object.
.Description
Read properties and relationships of the managedEBook object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmanagedebook
#>
function Get-MgDeviceAppManagementManagedEBook {
[Alias('Get-MgDeviceAppMgtManagedEBook')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBook_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBook_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementManagedEBook_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyassignmentcount
#>
function Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignmentCount {
[Alias('Get-MgDeviceAppMgtMdmWindowInformationProtectionPolicyAssignmentCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignmentCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignmentCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Navigation property to list of security groups targeted for policy.
.Description
Navigation property to list of security groups targeted for policy.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyassignment
#>
function Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment {
[Alias('Get-MgDeviceAppMgtMdmWindowInformationProtectionPolicyAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmdmwindowsinformationprotectionpolicycount
#>
function Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyCount {
[Alias('Get-MgDeviceAppMgtMdmWindowInformationProtectionPolicyCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyCount_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyexemptapplockerfilecount
#>
function Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFileCount {
[Alias('Get-MgDeviceAppMgtMdmWindowInformationProtectionPolicyExemptAppLockerFileCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFileCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFileCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Another way to input exempt apps through xml files
.Description
Another way to input exempt apps through xml files
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyexemptapplockerfile
#>
function Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile {
[Alias('Get-MgDeviceAppMgtMdmWindowInformationProtectionPolicyExemptAppLockerFile')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionAppLockerFile
    ${WindowsInformationProtectionAppLockerFileId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyprotectedapplockerfilecount
#>
function Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFileCount {
[Alias('Get-MgDeviceAppMgtMdmWindowInformationProtectionPolicyProtectedAppLockerFileCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFileCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFileCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Another way to input protected apps through xml files
.Description
Another way to input protected apps through xml files
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyprotectedapplockerfile
#>
function Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile {
[Alias('Get-MgDeviceAppMgtMdmWindowInformationProtectionPolicyProtectedAppLockerFile')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionAppLockerFile
    ${WindowsInformationProtectionAppLockerFileId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the mdmWindowsInformationProtectionPolicy object.
.Description
Read properties and relationships of the mdmWindowsInformationProtectionPolicy object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmdmwindowsinformationprotectionpolicy
#>
function Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy {
[Alias('Get-MgDeviceAppMgtMdmWindowInformationProtectionPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the item of type microsoft.graph.mobileApp as microsoft.graph.managedMobileLobApp
.Description
Get the item of type microsoft.graph.mobileApp as microsoft.graph.managedMobileLobApp
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileLobApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappasmanagedmobilelobapp
#>
function Get-MgDeviceAppManagementMobileAppAsManagedMobileLobApp {
[Alias('Get-MgDeviceAppMgtMobileAppAsManagedMobileLobApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileLobApp])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppAsManagedMobileLobApp_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppAsManagedMobileLobApp_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppAsManagedMobileLobApp_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the item of type microsoft.graph.mobileApp as microsoft.graph.mobileLobApp
.Description
Get the item of type microsoft.graph.mobileApp as microsoft.graph.mobileLobApp
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileLobApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappasmobilelobapp
#>
function Get-MgDeviceAppManagementMobileAppAsMobileLobApp {
[Alias('Get-MgDeviceAppMgtMobileAppAsMobileLobApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileLobApp])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppAsMobileLobApp_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppAsMobileLobApp_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppAsMobileLobApp_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappassignmentcount
#>
function Get-MgDeviceAppManagementMobileAppAssignmentCount {
[Alias('Get-MgDeviceAppMgtMobileAppAssignmentCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppAssignmentCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppAssignmentCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the mobileAppAssignment object.
.Description
Read properties and relationships of the mobileAppAssignment object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappassignment
#>
function Get-MgDeviceAppManagementMobileAppAssignment {
[Alias('Get-MgDeviceAppMgtMobileAppAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileAppAssignment
    ${MobileAppAssignmentId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppAssignment_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppAssignment_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppAssignment_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappcategorycount
#>
function Get-MgDeviceAppManagementMobileAppCategoryCount {
[Alias('Get-MgDeviceAppMgtMobileAppCategoryCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppCategoryCount_Get';
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppCategoryCount_Get1';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppCategoryCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the mobileAppCategory object.
.Description
Read properties and relationships of the mobileAppCategory object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappcategory
#>
function Get-MgDeviceAppManagementMobileAppCategory {
[Alias('Get-MgDeviceAppMgtMobileAppCategory')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileAppCategory
    ${MobileAppCategoryId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppCategory_Get';
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppCategory_Get1';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppCategory_GetViaIdentity';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppCategory_GetViaIdentity1';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppCategory_List';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppCategory_List1';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappconfigurationassignmentcount
#>
function Get-MgDeviceAppManagementMobileAppConfigurationAssignmentCount {
[Alias('Get-MgDeviceAppMgtMobileAppConfigurationAssignmentCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationAssignmentCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationAssignmentCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the managedDeviceMobileAppConfigurationAssignment object.
.Description
Read properties and relationships of the managedDeviceMobileAppConfigurationAssignment object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappconfigurationassignment
#>
function Get-MgDeviceAppManagementMobileAppConfigurationAssignment {
[Alias('Get-MgDeviceAppMgtMobileAppConfigurationAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfigurationAssignment
    ${ManagedDeviceMobileAppConfigurationAssignmentId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationAssignment_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationAssignment_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationAssignment_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappconfigurationcount
#>
function Get-MgDeviceAppManagementMobileAppConfigurationCount {
[Alias('Get-MgDeviceAppMgtMobileAppConfigurationCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationCount_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappconfigurationdevicestatuscount
#>
function Get-MgDeviceAppManagementMobileAppConfigurationDeviceStatusCount {
[Alias('Get-MgDeviceAppMgtMobileAppConfigurationDeviceStatusCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationDeviceStatusCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationDeviceStatusCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the managedDeviceMobileAppConfigurationDeviceSummary object.
.Description
Read properties and relationships of the managedDeviceMobileAppConfigurationDeviceSummary object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappconfigurationdevicestatussummary
#>
function Get-MgDeviceAppManagementMobileAppConfigurationDeviceStatusSummary {
[Alias('Get-MgDeviceAppMgtMobileAppConfigurationDeviceStatusSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationDeviceStatusSummary_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationDeviceStatusSummary_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the managedDeviceMobileAppConfigurationDeviceStatus object.
.Description
Read properties and relationships of the managedDeviceMobileAppConfigurationDeviceStatus object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappconfigurationdevicestatus
#>
function Get-MgDeviceAppManagementMobileAppConfigurationDeviceStatus {
[Alias('Get-MgDeviceAppMgtMobileAppConfigurationDeviceStatus')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
    ${ManagedDeviceMobileAppConfigurationDeviceStatusId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationDeviceStatus_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationDeviceStatus_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationDeviceStatus_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappconfigurationuserstatuscount
#>
function Get-MgDeviceAppManagementMobileAppConfigurationUserStatusCount {
[Alias('Get-MgDeviceAppMgtMobileAppConfigurationUserStatusCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationUserStatusCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationUserStatusCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the managedDeviceMobileAppConfigurationUserSummary object.
.Description
Read properties and relationships of the managedDeviceMobileAppConfigurationUserSummary object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappconfigurationuserstatussummary
#>
function Get-MgDeviceAppManagementMobileAppConfigurationUserStatusSummary {
[Alias('Get-MgDeviceAppMgtMobileAppConfigurationUserStatusSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationUserStatusSummary_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationUserStatusSummary_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the managedDeviceMobileAppConfigurationUserStatus object.
.Description
Read properties and relationships of the managedDeviceMobileAppConfigurationUserStatus object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappconfigurationuserstatus
#>
function Get-MgDeviceAppManagementMobileAppConfigurationUserStatus {
[Alias('Get-MgDeviceAppMgtMobileAppConfigurationUserStatus')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfigurationUserStatus
    ${ManagedDeviceMobileAppConfigurationUserStatusId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationUserStatus_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationUserStatus_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfigurationUserStatus_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the managedDeviceMobileAppConfiguration object.
.Description
Read properties and relationships of the managedDeviceMobileAppConfiguration object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappconfiguration
#>
function Get-MgDeviceAppManagementMobileAppConfiguration {
[Alias('Get-MgDeviceAppMgtMobileAppConfiguration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfiguration_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfiguration_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppConfiguration_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappcountasmanagedmobilelobapp
#>
function Get-MgDeviceAppManagementMobileAppCountAsManagedMobileLobApp {
[Alias('Get-MgDeviceAppMgtMobileAppCountAsManagedMobileLobApp')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppCountAsManagedMobileLobApp_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappcountasmobilelobapp
#>
function Get-MgDeviceAppManagementMobileAppCountAsMobileLobApp {
[Alias('Get-MgDeviceAppMgtMobileAppCountAsMobileLobApp')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppCountAsMobileLobApp_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileappcount
#>
function Get-MgDeviceAppManagementMobileAppCount {
[Alias('Get-MgDeviceAppMgtMobileAppCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileAppCount_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the windowsUniversalAppX object.
.Description
Read properties and relationships of the windowsUniversalAppX object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementmobileapp
#>
function Get-MgDeviceAppManagementMobileApp {
[Alias('Get-MgDeviceAppMgtMobileApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileApp_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileApp_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementMobileApp_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementtargetedmanagedappconfigurationappcount
#>
function Get-MgDeviceAppManagementTargetedManagedAppConfigurationAppCount {
[Alias('Get-MgDeviceAppMgtTargetedManagedAppConfigurationAppCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfigurationAppCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfigurationAppCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementtargetedmanagedappconfigurationapp
#>
function Get-MgDeviceAppManagementTargetedManagedAppConfigurationApp {
[Alias('Get-MgDeviceAppMgtTargetedManagedAppConfigurationApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfigurationApp_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfigurationApp_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfigurationApp_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementtargetedmanagedappconfigurationassignmentcount
#>
function Get-MgDeviceAppManagementTargetedManagedAppConfigurationAssignmentCount {
[Alias('Get-MgDeviceAppMgtTargetedManagedAppConfigurationAssignmentCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfigurationAssignmentCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfigurationAssignmentCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
.Description
Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementtargetedmanagedappconfigurationassignment
#>
function Get-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment {
[Alias('Get-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementtargetedmanagedappconfigurationcount
#>
function Get-MgDeviceAppManagementTargetedManagedAppConfigurationCount {
[Alias('Get-MgDeviceAppMgtTargetedManagedAppConfigurationCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfigurationCount_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementtargetedmanagedappconfigurationdeploymentsummary
#>
function Get-MgDeviceAppManagementTargetedManagedAppConfigurationDeploymentSummary {
[Alias('Get-MgDeviceAppMgtTargetedManagedAppConfigurationDeploymentSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfigurationDeploymentSummary_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfigurationDeploymentSummary_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the targetedManagedAppConfiguration object.
.Description
Read properties and relationships of the targetedManagedAppConfiguration object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementtargetedmanagedappconfiguration
#>
function Get-MgDeviceAppManagementTargetedManagedAppConfiguration {
[Alias('Get-MgDeviceAppMgtTargetedManagedAppConfiguration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfiguration_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfiguration_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementTargetedManagedAppConfiguration_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementvpptokencount
#>
function Get-MgDeviceAppManagementVppTokenCount {
[Alias('Get-MgDeviceAppMgtVppTokenCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementVppTokenCount_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the vppToken object.
.Description
Read properties and relationships of the vppToken object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementvpptoken
#>
function Get-MgDeviceAppManagementVppToken {
[Alias('Get-MgDeviceAppMgtVppToken')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of vppToken
    ${VppTokenId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementVppToken_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementVppToken_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementVppToken_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementwindowsinformationprotectionpolicyassignmentcount
#>
function Get-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignmentCount {
[Alias('Get-MgDeviceAppMgtWindowInformationProtectionPolicyAssignmentCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignmentCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignmentCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Navigation property to list of security groups targeted for policy.
.Description
Navigation property to list of security groups targeted for policy.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementwindowsinformationprotectionpolicyassignment
#>
function Get-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment {
[Alias('Get-MgDeviceAppMgtWindowInformationProtectionPolicyAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Int32
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementwindowsinformationprotectionpolicycount
#>
function Get-MgDeviceAppManagementWindowsInformationProtectionPolicyCount {
[Alias('Get-MgDeviceAppMgtWindowInformationProtectionPolicyCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyCount_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementwindowsinformationprotectionpolicyexemptapplockerfilecount
#>
function Get-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFileCount {
[Alias('Get-MgDeviceAppMgtWindowInformationProtectionPolicyExemptAppLockerFileCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFileCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFileCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Another way to input exempt apps through xml files
.Description
Another way to input exempt apps through xml files
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementwindowsinformationprotectionpolicyexemptapplockerfile
#>
function Get-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile {
[Alias('Get-MgDeviceAppMgtWindowInformationProtectionPolicyExemptAppLockerFile')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionAppLockerFile
    ${WindowsInformationProtectionAppLockerFileId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementwindowsinformationprotectionpolicyprotectedapplockerfilecount
#>
function Get-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFileCount {
[Alias('Get-MgDeviceAppMgtWindowInformationProtectionPolicyProtectedAppLockerFileCount')]
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFileCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFileCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Another way to input protected apps through xml files
.Description
Another way to input protected apps through xml files
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementwindowsinformationprotectionpolicyprotectedapplockerfile
#>
function Get-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile {
[Alias('Get-MgDeviceAppMgtWindowInformationProtectionPolicyProtectedAppLockerFile')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionAppLockerFile
    ${WindowsInformationProtectionAppLockerFileId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the windowsInformationProtectionPolicy object.
.Description
Read properties and relationships of the windowsInformationProtectionPolicy object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagementwindowsinformationprotectionpolicy
#>
function Get-MgDeviceAppManagementWindowsInformationProtectionPolicy {
[Alias('Get-MgDeviceAppMgtWindowInformationProtectionPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicy_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicy_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagementWindowsInformationProtectionPolicy_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the deviceAppManagement object.
.Description
Read properties and relationships of the deviceAppManagement object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAppManagement
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmanagement
#>
function Get-MgDeviceAppManagement {
[Alias('Get-MgDeviceAppMgt')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAppManagement])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppManagement_Get';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mguserdevicemanagementtroubleshootingeventcount
#>
function Get-MgUserDeviceManagementTroubleshootingEventCount {
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserDeviceManagementTroubleshootingEventCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserDeviceManagementTroubleshootingEventCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
The list of troubleshooting events for this user.
.Description
The list of troubleshooting events for this user.
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mguserdevicemanagementtroubleshootingevent
#>
function Get-MgUserDeviceManagementTroubleshootingEvent {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceManagementTroubleshootingEvent
    ${DeviceManagementTroubleshootingEventId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserDeviceManagementTroubleshootingEvent_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserDeviceManagementTroubleshootingEvent_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserDeviceManagementTroubleshootingEvent_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanagedappregistrationcount
#>
function Get-MgUserManagedAppRegistrationCount {
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedAppRegistrationCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedAppRegistrationCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Zero or more managed app registrations that belong to the user.
.Description
Zero or more managed app registrations that belong to the user.
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanagedappregistration
#>
function Get-MgUserManagedAppRegistration {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedAppRegistration_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedAppRegistration_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedAppRegistration_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the deviceCategory object.
.Description
Read properties and relationships of the deviceCategory object.
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCategory
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddevicecategory
#>
function Get-MgUserManagedDeviceCategory {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCategory])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceCategory_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceCategory_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddevicecompliancepolicystatecount
#>
function Get-MgUserManagedDeviceCompliancePolicyStateCount {
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceCompliancePolicyStateCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceCompliancePolicyStateCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Device compliance policy states for this device.
.Description
Device compliance policy states for this device.
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddevicecompliancepolicystate
#>
function Get-MgUserManagedDeviceCompliancePolicyState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceCompliancePolicyState
    ${DeviceCompliancePolicyStateId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceCompliancePolicyState_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceCompliancePolicyState_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceCompliancePolicyState_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddeviceconfigurationstatecount
#>
function Get-MgUserManagedDeviceConfigurationStateCount {
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceConfigurationStateCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceConfigurationStateCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Device configuration states for this device.
.Description
Device configuration states for this device.
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddeviceconfigurationstate
#>
function Get-MgUserManagedDeviceConfigurationState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceConfigurationState
    ${DeviceConfigurationStateId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceConfigurationState_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceConfigurationState_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceConfigurationState_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddevicecount
#>
function Get-MgUserManagedDeviceCount {
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddevicelogcollectionrequestcount
#>
function Get-MgUserManagedDeviceLogCollectionRequestCount {
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceLogCollectionRequestCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceLogCollectionRequestCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
List of log collection requests
.Description
List of log collection requests
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceLogCollectionResponse
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddevicelogcollectionresponse
#>
function Get-MgUserManagedDeviceLogCollectionResponse {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceLogCollectionResponse])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceLogCollectionResponse
    ${DeviceLogCollectionResponseId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceLogCollectionResponse_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceLogCollectionResponse_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceLogCollectionResponse_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
List properties and relationships of the user objects.
.Description
List properties and relationships of the user objects.
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUser
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddeviceuser
#>
function Get-MgUserManagedDeviceUser {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUser])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter()]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter()]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter()]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceUser_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Get the number of the resource
.Description
Get the number of the resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Int32
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddevicewindowsprotectionstatedetectedmalwarestatecount
#>
function Get-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareStateCount {
[OutputType([System.Int32])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareStateCount_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareStateCount_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the windowsDeviceMalwareState object.
.Description
Read properties and relationships of the windowsDeviceMalwareState object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsDeviceMalwareState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddevicewindowsprotectionstatedetectedmalwarestate
#>
function Get-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsDeviceMalwareState])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsDeviceMalwareState
    ${WindowsDeviceMalwareStateId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Read properties and relationships of the windowsProtectionState object.
.Description
Read properties and relationships of the windowsProtectionState object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsProtectionState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddevicewindowsprotectionstate
#>
function Get-MgUserManagedDeviceWindowsProtectionState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsProtectionState])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceWindowsProtectionState_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceWindowsProtectionState_GetViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
The managed devices associated with the user.
.Description
The managed devices associated with the user.
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddevice
#>
function Get-MgUserManagedDevice {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDevice_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDevice_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDevice_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Not yet documented
.Description
Not yet documented
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPaths14Nj8OcDeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: .
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IPaths14Nj8OcDeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/invoke-mgtargetdeviceappmanagementmanagedapppolicyapp
#>
function Invoke-MgTargetDeviceAppManagementManagedAppPolicyApp {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='TargetExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Target', Mandatory)]
    [Parameter(ParameterSetName='TargetExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='TargetViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Target', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPaths14Nj8OcDeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # .
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Target = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementManagedAppPolicyApp_Target';
            TargetExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementManagedAppPolicyApp_TargetExpanded';
            TargetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementManagedAppPolicyApp_TargetViaIdentity';
            TargetViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementManagedAppPolicyApp_TargetViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Not yet documented
.Description
Not yet documented
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPathsVf2Dh9DeviceappmanagementManagedappregistrationsManagedappregistrationIdAppliedpoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: .
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IPathsVf2Dh9DeviceappmanagementManagedappregistrationsManagedappregistrationIdAppliedpoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/invoke-mgtargetdeviceappmanagementmanagedappregistrationappliedpolicyapp
#>
function Invoke-MgTargetDeviceAppManagementManagedAppRegistrationAppliedPolicyApp {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='TargetExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Target', Mandatory)]
    [Parameter(ParameterSetName='TargetExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Target', Mandatory)]
    [Parameter(ParameterSetName='TargetExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='TargetViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Target', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPathsVf2Dh9DeviceappmanagementManagedappregistrationsManagedappregistrationIdAppliedpoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # .
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Target = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementManagedAppRegistrationAppliedPolicyApp_Target';
            TargetExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementManagedAppRegistrationAppliedPolicyApp_TargetExpanded';
            TargetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementManagedAppRegistrationAppliedPolicyApp_TargetViaIdentity';
            TargetViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementManagedAppRegistrationAppliedPolicyApp_TargetViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Not yet documented
.Description
Not yet documented
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPaths1Mv9GnvDeviceappmanagementManagedappregistrationsManagedappregistrationIdIntendedpoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: .
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IPaths1Mv9GnvDeviceappmanagementManagedappregistrationsManagedappregistrationIdIntendedpoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/invoke-mgtargetdeviceappmanagementmanagedappregistrationintendedpolicyapp
#>
function Invoke-MgTargetDeviceAppManagementManagedAppRegistrationIntendedPolicyApp {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='TargetExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Target', Mandatory)]
    [Parameter(ParameterSetName='TargetExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Target', Mandatory)]
    [Parameter(ParameterSetName='TargetExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='TargetViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Target', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPaths1Mv9GnvDeviceappmanagementManagedappregistrationsManagedappregistrationIdIntendedpoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # .
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Target = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementManagedAppRegistrationIntendedPolicyApp_Target';
            TargetExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementManagedAppRegistrationIntendedPolicyApp_TargetExpanded';
            TargetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementManagedAppRegistrationIntendedPolicyApp_TargetViaIdentity';
            TargetViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementManagedAppRegistrationIntendedPolicyApp_TargetViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Not yet documented
.Description
Not yet documented
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPathsXzr66BDeviceappmanagementTargetedmanagedappconfigurationsTargetedmanagedappconfigurationIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: .
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IPathsXzr66BDeviceappmanagementTargetedmanagedappconfigurationsTargetedmanagedappconfigurationIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [AppGroupType <TargetedManagedAppGroupType?>]: Indicates a collection of apps to target which can be one of several pre-defined lists of apps or a manually selected list of apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/invoke-mgtargetdeviceappmanagementtargetedmanagedappconfigurationapp
#>
function Invoke-MgTargetDeviceAppManagementTargetedManagedAppConfigurationApp {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='TargetExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Target', Mandatory)]
    [Parameter(ParameterSetName='TargetExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='TargetViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Target', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPathsXzr66BDeviceappmanagementTargetedmanagedappconfigurationsTargetedmanagedappconfigurationIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.TargetedManagedAppGroupType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.TargetedManagedAppGroupType]
    # Indicates a collection of apps to target which can be one of several pre-defined lists of apps or a manually selected list of apps
    ${AppGroupType},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # .
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Target = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementTargetedManagedAppConfigurationApp_Target';
            TargetExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementTargetedManagedAppConfigurationApp_TargetExpanded';
            TargetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementTargetedManagedAppConfigurationApp_TargetViaIdentity';
            TargetViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppManagementTargetedManagedAppConfigurationApp_TargetViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to apps for deviceAppManagement
.Description
Create new navigation property to apps for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementandroidmanagedappprotectionapp
#>
function New-MgDeviceAppManagementAndroidManagedAppProtectionApp {
[Alias('New-MgDeviceAppMgtAndroidManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementAndroidManagedAppProtectionApp_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementAndroidManagedAppProtectionApp_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementAndroidManagedAppProtectionApp_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementAndroidManagedAppProtectionApp_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to assignments for deviceAppManagement
.Description
Create new navigation property to assignments for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppPolicyAssignment>: The type for deployment of groups or apps.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementandroidmanagedappprotectionassignment
#>
function New-MgDeviceAppManagementAndroidManagedAppProtectionAssignment {
[Alias('New-MgDeviceAppMgtAndroidManagedAppProtectionAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment]
    # The type for deployment of groups or apps.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementAndroidManagedAppProtectionAssignment_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementAndroidManagedAppProtectionAssignment_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementAndroidManagedAppProtectionAssignment_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementAndroidManagedAppProtectionAssignment_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new androidManagedAppProtection object.
.Description
Create a new androidManagedAppProtection object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphAndroidManagedAppProtection>: Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an Android device
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [AllowedDataStorageLocations <ManagedAppDataStorageLocation[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <ManagedAppClipboardSharingLevel?>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <ManagedBrowserType?>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <ManagedAppPinCharacterSet?>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomBrowserDisplayName <String>]: Friendly name of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [CustomBrowserPackageId <String>]: Unique identifier of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled
  [EncryptAppData <Boolean?>]: Indicates whether application data for managed apps should be encrypted
  [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app.
  [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app.
  [ScreenCaptureBlocked <Boolean?>]: Indicates whether a managed user can take screen captures of managed apps

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementandroidmanagedappprotection
#>
function New-MgDeviceAppManagementAndroidManagedAppProtection {
[Alias('New-MgDeviceAppMgtAndroidManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection]
    # Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an Android device
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataStorageLocation])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataStorageLocation[]]
    # Data storage locations where a user may store managed data.
    ${AllowedDataStorageLocations},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel]
    # Data can be transferred from/to these classes of apps
    ${AllowedInboundDataTransferSources},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppClipboardSharingLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppClipboardSharingLevel]
    # Represents the level to which the device's clipboard may be shared between apps
    ${AllowedOutboundClipboardSharingLevel},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel]
    # Data can be transferred from/to these classes of apps
    ${AllowedOutboundDataTransferDestinations},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment[]]
    # Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether contacts can be synced to the user's device.
    ${ContactSyncBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Friendly name of the preferred custom browser to open weblink on Android.
    # When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    ${CustomBrowserDisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Unique identifier of the preferred custom browser to open weblink on Android.
    # When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    ${CustomBrowserPackageId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether the backup of a managed app's data is blocked.
    ${DataBackupBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether device compliance is required.
    ${DeviceComplianceRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When this setting is enabled, app level encryption is disabled if device level encryption is enabled
    ${DisableAppEncryptionIfDeviceEncryptionIsEnabled},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the app pin is required if the device pin is set.
    ${DisableAppPinIfDevicePinIsSet},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether application data for managed apps should be encrypted
    ${EncryptAppData},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    ${FingerprintBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedBrowserType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedBrowserType]
    # Type of managed browser
    ${ManagedBrowser},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    ${ManagedBrowserToOpenLinksRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    ${MaximumPinRetries},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Minimum pin length required for an app-level pin if PinRequired is set to True
    ${MinimumPinLength},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredAppVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredOSVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest required Android security patch level a user can have to gain secure access to the app.
    ${MinimumRequiredPatchVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app.
    ${MinimumWarningAppVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app from accessing company data.
    ${MinimumWarningOSVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest recommended Android security patch level a user can have for secure access to the app.
    ${MinimumWarningPatchVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether organizational credentials are required for app use.
    ${OrganizationalCredentialsRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    ${PeriodBeforePinReset},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is not connected to the internet.
    ${PeriodOfflineBeforeAccessCheck},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    ${PeriodOfflineBeforeWipeIsEnforced},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is connected to the internet.
    ${PeriodOnlineBeforeAccessCheck},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppPinCharacterSet])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppPinCharacterSet]
    # Character set which is to be used for a user's app PIN
    ${PinCharacterSet},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether an app-level pin is required.
    ${PinRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether printing is allowed from managed apps.
    ${PrintBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    ${SaveAsBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether a managed user can take screen captures of managed apps
    ${ScreenCaptureBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether simplePin is blocked.
    ${SimplePinBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementAndroidManagedAppProtection_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementAndroidManagedAppProtection_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to apps for deviceAppManagement
.Description
Create new navigation property to apps for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementdefaultmanagedappprotectionapp
#>
function New-MgDeviceAppManagementDefaultManagedAppProtectionApp {
[Alias('New-MgDeviceAppMgtDefaultManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementDefaultManagedAppProtectionApp_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementDefaultManagedAppProtectionApp_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementDefaultManagedAppProtectionApp_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementDefaultManagedAppProtectionApp_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new defaultManagedAppProtection object.
.Description
Create a new defaultManagedAppProtection object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IMicrosoftGraphDefaultManagedAppProtection>: Policy used to configure detailed management settings for a specified set of apps for all users not targeted by a TargetedManagedAppProtection Policy
  [(Any) <Object>]: This indicates any property can be added to this object.
  [AllowedDataStorageLocations <ManagedAppDataStorageLocation[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <ManagedAppClipboardSharingLevel?>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <ManagedBrowserType?>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <ManagedAppPinCharacterSet?>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AppDataEncryptionType <ManagedAppDataEncryptionType?>]: Represents the level to which app data is encrypted for managed apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to the affected users, unalterned by this service
    [Name <String>]: Name for this key-value pair
    [Value <String>]: Value for this key-value pair
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled. (Android only)
  [EncryptAppData <Boolean?>]: Indicates whether managed-app data should be encrypted. (Android only)
  [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True. (iOS Only)
  [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app. (Android only)
  [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data. (iOS Only)
  [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app. (Android only)
  [ScreenCaptureBlocked <Boolean?>]: Indicates whether screen capture is blocked. (Android only)

CUSTOMSETTINGS <IMicrosoftGraphKeyValuePair[]>: A set of string key and string value pairs to be sent to the affected users, unalterned by this service
  [Name <String>]: Name for this key-value pair
  [Value <String>]: Value for this key-value pair

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementdefaultmanagedappprotection
#>
function New-MgDeviceAppManagementDefaultManagedAppProtection {
[Alias('New-MgDeviceAppMgtDefaultManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection]
    # Policy used to configure detailed management settings for a specified set of apps for all users not targeted by a TargetedManagedAppProtection Policy
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataStorageLocation])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataStorageLocation[]]
    # Data storage locations where a user may store managed data.
    ${AllowedDataStorageLocations},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel]
    # Data can be transferred from/to these classes of apps
    ${AllowedInboundDataTransferSources},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppClipboardSharingLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppClipboardSharingLevel]
    # Represents the level to which the device's clipboard may be shared between apps
    ${AllowedOutboundClipboardSharingLevel},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel]
    # Data can be transferred from/to these classes of apps
    ${AllowedOutboundDataTransferDestinations},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataEncryptionType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataEncryptionType]
    # Represents the level to which app data is encrypted for managed apps
    ${AppDataEncryptionType},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether contacts can be synced to the user's device.
    ${ContactSyncBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphKeyValuePair[]]
    # A set of string key and string value pairs to be sent to the affected users, unalterned by this service
    # To construct, see NOTES section for CUSTOMSETTINGS properties and create a hash table.
    ${CustomSettings},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether the backup of a managed app's data is blocked.
    ${DataBackupBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether device compliance is required.
    ${DeviceComplianceRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When this setting is enabled, app level encryption is disabled if device level encryption is enabled.
    # (Android only)
    ${DisableAppEncryptionIfDeviceEncryptionIsEnabled},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the app pin is required if the device pin is set.
    ${DisableAppPinIfDevicePinIsSet},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether managed-app data should be encrypted.
    # (Android only)
    ${EncryptAppData},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
    # (iOS Only)
    ${FaceIdBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    ${FingerprintBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedBrowserType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedBrowserType]
    # Type of managed browser
    ${ManagedBrowser},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    ${ManagedBrowserToOpenLinksRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    ${MaximumPinRetries},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Minimum pin length required for an app-level pin if PinRequired is set to True
    ${MinimumPinLength},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredAppVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredOSVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest required Android security patch level a user can have to gain secure access to the app.
    # (Android only)
    ${MinimumRequiredPatchVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    # (iOS Only)
    ${MinimumRequiredSdkVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app.
    ${MinimumWarningAppVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app from accessing company data.
    ${MinimumWarningOSVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest recommended Android security patch level a user can have for secure access to the app.
    # (Android only)
    ${MinimumWarningPatchVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether organizational credentials are required for app use.
    ${OrganizationalCredentialsRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    ${PeriodBeforePinReset},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is not connected to the internet.
    ${PeriodOfflineBeforeAccessCheck},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    ${PeriodOfflineBeforeWipeIsEnforced},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is connected to the internet.
    ${PeriodOnlineBeforeAccessCheck},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppPinCharacterSet])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppPinCharacterSet]
    # Character set which is to be used for a user's app PIN
    ${PinCharacterSet},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether an app-level pin is required.
    ${PinRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether printing is allowed from managed apps.
    ${PrintBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    ${SaveAsBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether screen capture is blocked.
    # (Android only)
    ${ScreenCaptureBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether simplePin is blocked.
    ${SimplePinBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementDefaultManagedAppProtection_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementDefaultManagedAppProtection_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new managedMobileApp object.
.Description
Create a new managedMobileApp object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementiosmanagedappprotectionapp
#>
function New-MgDeviceAppManagementiOSManagedAppProtectionApp {
[Alias('New-MgDeviceAppMgtiOSManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementiOSManagedAppProtectionApp_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementiOSManagedAppProtectionApp_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementiOSManagedAppProtectionApp_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementiOSManagedAppProtectionApp_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to assignments for deviceAppManagement
.Description
Create new navigation property to assignments for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppPolicyAssignment>: The type for deployment of groups or apps.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementiosmanagedappprotectionassignment
#>
function New-MgDeviceAppManagementiOSManagedAppProtectionAssignment {
[Alias('New-MgDeviceAppMgtiOSManagedAppProtectionAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment]
    # The type for deployment of groups or apps.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementiOSManagedAppProtectionAssignment_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementiOSManagedAppProtectionAssignment_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementiOSManagedAppProtectionAssignment_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementiOSManagedAppProtectionAssignment_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new iosManagedAppProtection object.
.Description
Create a new iosManagedAppProtection object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphIosManagedAppProtection>: Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an iOS device
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [AllowedDataStorageLocations <ManagedAppDataStorageLocation[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <ManagedAppClipboardSharingLevel?>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <ManagedBrowserType?>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <ManagedAppPinCharacterSet?>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AppDataEncryptionType <ManagedAppDataEncryptionType?>]: Represents the level to which app data is encrypted for managed apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomBrowserProtocol <String>]: A custom browser protocol to open weblink on iOS. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
  [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementiosmanagedappprotection
#>
function New-MgDeviceAppManagementiOSManagedAppProtection {
[Alias('New-MgDeviceAppMgtiOSManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection]
    # Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an iOS device
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataStorageLocation])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataStorageLocation[]]
    # Data storage locations where a user may store managed data.
    ${AllowedDataStorageLocations},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel]
    # Data can be transferred from/to these classes of apps
    ${AllowedInboundDataTransferSources},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppClipboardSharingLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppClipboardSharingLevel]
    # Represents the level to which the device's clipboard may be shared between apps
    ${AllowedOutboundClipboardSharingLevel},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel]
    # Data can be transferred from/to these classes of apps
    ${AllowedOutboundDataTransferDestinations},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataEncryptionType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataEncryptionType]
    # Represents the level to which app data is encrypted for managed apps
    ${AppDataEncryptionType},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment[]]
    # Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether contacts can be synced to the user's device.
    ${ContactSyncBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # A custom browser protocol to open weblink on iOS.
    # When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    ${CustomBrowserProtocol},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether the backup of a managed app's data is blocked.
    ${DataBackupBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether device compliance is required.
    ${DeviceComplianceRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the app pin is required if the device pin is set.
    ${DisableAppPinIfDevicePinIsSet},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
    ${FaceIdBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    ${FingerprintBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedBrowserType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedBrowserType]
    # Type of managed browser
    ${ManagedBrowser},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    ${ManagedBrowserToOpenLinksRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    ${MaximumPinRetries},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Minimum pin length required for an app-level pin if PinRequired is set to True
    ${MinimumPinLength},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredAppVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredOSVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredSdkVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app.
    ${MinimumWarningAppVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app from accessing company data.
    ${MinimumWarningOSVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether organizational credentials are required for app use.
    ${OrganizationalCredentialsRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    ${PeriodBeforePinReset},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is not connected to the internet.
    ${PeriodOfflineBeforeAccessCheck},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    ${PeriodOfflineBeforeWipeIsEnforced},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is connected to the internet.
    ${PeriodOnlineBeforeAccessCheck},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppPinCharacterSet])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppPinCharacterSet]
    # Character set which is to be used for a user's app PIN
    ${PinCharacterSet},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether an app-level pin is required.
    ${PinRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether printing is allowed from managed apps.
    ${PrintBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    ${SaveAsBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether simplePin is blocked.
    ${SimplePinBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementiOSManagedAppProtection_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementiOSManagedAppProtection_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to managedAppPolicies for deviceAppManagement
.Description
Create new navigation property to managedAppPolicies for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicy>: The ManagedAppPolicy resource represents a base type for platform specific policies.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmanagedapppolicy
#>
function New-MgDeviceAppManagementManagedAppPolicy {
[Alias('New-MgDeviceAppMgtManagedAppPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy]
    # The ManagedAppPolicy resource represents a base type for platform specific policies.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppPolicy_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppPolicy_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to appliedPolicies for deviceAppManagement
.Description
Create new navigation property to appliedPolicies for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicy>: The ManagedAppPolicy resource represents a base type for platform specific policies.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmanagedappregistrationappliedpolicy
#>
function New-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy {
[Alias('New-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy]
    # The ManagedAppPolicy resource represents a base type for platform specific policies.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to intendedPolicies for deviceAppManagement
.Description
Create new navigation property to intendedPolicies for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicy>: The ManagedAppPolicy resource represents a base type for platform specific policies.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmanagedappregistrationintendedpolicy
#>
function New-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy {
[Alias('New-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy]
    # The ManagedAppPolicy resource represents a base type for platform specific policies.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new managedAppOperation object.
.Description
Create a new managedAppOperation object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppOperation>: Represents an operation applied against an app registration.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The operation name.
  [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
  [State <String>]: The current state of the operation
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmanagedappregistrationoperation
#>
function New-MgDeviceAppManagementManagedAppRegistrationOperation {
[Alias('New-MgDeviceAppMgtManagedAppRegistrationOperation')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation]
    # Represents an operation applied against an app registration.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The operation name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The last time the app operation was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The current state of the operation
    ${State},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppRegistrationOperation_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppRegistrationOperation_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppRegistrationOperation_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppRegistrationOperation_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new androidManagedAppRegistration object.
.Description
Create a new androidManagedAppRegistration object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPLIEDPOLICIES <IMicrosoftGraphManagedAppPolicy[]>: Zero or more policys already applied on the registered app when it last synchronized with managment service.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IMicrosoftGraphManagedAppRegistration>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [ApplicationVersion <String>]: App version
  [AppliedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policys already applied on the registered app when it last synchronized with managment service.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
  [CreatedDateTime <DateTime?>]: Date and time of creation
  [DeviceName <String>]: Host device name
  [DeviceTag <String>]: App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.
  [DeviceType <String>]: Host device type
  [FlaggedReasons <ManagedAppFlaggedReason[]>]: Zero or more reasons an app registration is flagged. E.g. app running on rooted device
  [IntendedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policies admin intended for the app as of now.
  [LastSyncDateTime <DateTime?>]: Date and time of last the app synced with management service.
  [ManagementSdkVersion <String>]: App management SDK version
  [Operations <IMicrosoftGraphManagedAppOperation[]>]: Zero or more long running operations triggered on the app registration.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The operation name.
    [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
    [State <String>]: The current state of the operation
    [Version <String>]: Version of the entity.
  [PlatformVersion <String>]: Operating System version
  [UserId <String>]: The user Id to who this app registration belongs.
  [Version <String>]: Version of the entity.

INTENDEDPOLICIES <IMicrosoftGraphManagedAppPolicy[]>: Zero or more policies admin intended for the app as of now.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

OPERATIONS <IMicrosoftGraphManagedAppOperation[]>: Zero or more long running operations triggered on the app registration.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The operation name.
  [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
  [State <String>]: The current state of the operation
  [Version <String>]: Version of the entity.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmanagedappregistration
#>
function New-MgDeviceAppManagementManagedAppRegistration {
[Alias('New-MgDeviceAppMgtManagedAppRegistration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${AppIdentifier},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # App version
    ${ApplicationVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy[]]
    # Zero or more policys already applied on the registered app when it last synchronized with managment service.
    # To construct, see NOTES section for APPLIEDPOLICIES properties and create a hash table.
    ${AppliedPolicies},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Date and time of creation
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Host device name
    ${DeviceName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # App management SDK generated tag, which helps relate apps hosted on the same device.
    # Not guaranteed to relate apps in all conditions.
    ${DeviceTag},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Host device type
    ${DeviceType},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppFlaggedReason])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppFlaggedReason[]]
    # Zero or more reasons an app registration is flagged.
    # E.g.
    # app running on rooted device
    ${FlaggedReasons},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy[]]
    # Zero or more policies admin intended for the app as of now.
    # To construct, see NOTES section for INTENDEDPOLICIES properties and create a hash table.
    ${IntendedPolicies},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Date and time of last the app synced with management service.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # App management SDK version
    ${ManagementSdkVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation[]]
    # Zero or more long running operations triggered on the app registration.
    # To construct, see NOTES section for OPERATIONS properties and create a hash table.
    ${Operations},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Operating System version
    ${PlatformVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The user Id to who this app registration belongs.
    ${UserId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppRegistration_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppRegistration_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to managedAppStatuses for deviceAppManagement
.Description
Create new navigation property to managedAppStatuses for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppStatus>: Represents app protection and configuration status for the organization.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: Friendly name of the status report.
  [Version <String>]: Version of the entity.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmanagedappstatus
#>
function New-MgDeviceAppManagementManagedAppStatus {
[Alias('New-MgDeviceAppMgtManagedAppStatus')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus]
    # Represents app protection and configuration status for the organization.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Friendly name of the status report.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppStatus_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedAppStatus_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new managedEBookAssignment object.
.Description
Create a new managedEBookAssignment object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedEBookAssignment>: Contains properties used to assign a eBook to a group.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [InstallIntent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmanagedebookassignment
#>
function New-MgDeviceAppManagementManagedEBookAssignment {
[Alias('New-MgDeviceAppMgtManagedEBookAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment]
    # Contains properties used to assign a eBook to a group.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.InstallIntent])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.InstallIntent]
    # Possible values for the install intent chosen by the admin.
    ${InstallIntent},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookAssignment_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookAssignment_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookAssignment_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookAssignment_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new deviceInstallState object.
.Description
Create a new deviceInstallState object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceInstallState>: Contains properties for the installation state for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <InstallState?>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmanagedebookdevicestate
#>
function New-MgDeviceAppManagementManagedEBookDeviceState {
[Alias('New-MgDeviceAppMgtManagedEBookDeviceState')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState]
    # Contains properties for the installation state for a device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device Id.
    ${DeviceId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device name.
    ${DeviceName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The error code for install failures.
    ${ErrorCode},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.InstallState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.InstallState]
    # Possible values for install state.
    ${InstallState},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last sync date and time.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Description.
    ${OSDescription},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Version.
    ${OSVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device User Name.
    ${UserName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookDeviceState_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookDeviceState_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookDeviceState_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookDeviceState_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to deviceStates for deviceAppManagement
.Description
Create new navigation property to deviceStates for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceInstallState>: Contains properties for the installation state for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <InstallState?>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmanagedebookuserstatesummarydevicestate
#>
function New-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState {
[Alias('New-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState]
    # Contains properties for the installation state for a device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device Id.
    ${DeviceId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device name.
    ${DeviceName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The error code for install failures.
    ${ErrorCode},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.InstallState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.InstallState]
    # Possible values for install state.
    ${InstallState},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last sync date and time.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Description.
    ${OSDescription},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Version.
    ${OSVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device User Name.
    ${UserName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new userInstallStateSummary object.
.Description
Create a new userInstallStateSummary object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphUserInstallStateSummary>: Contains properties for the installation state summary for a user.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DeviceId <String>]: Device Id.
    [DeviceName <String>]: Device name.
    [ErrorCode <String>]: The error code for install failures.
    [InstallState <InstallState?>]: Possible values for install state.
    [LastSyncDateTime <DateTime?>]: Last sync date and time.
    [OSDescription <String>]: OS Description.
    [OSVersion <String>]: OS Version.
    [UserName <String>]: Device User Name.
  [FailedDeviceCount <Int32?>]: Failed Device Count.
  [InstalledDeviceCount <Int32?>]: Installed Device Count.
  [NotInstalledDeviceCount <Int32?>]: Not installed device count.
  [UserName <String>]: User name.

DEVICESTATES <IMicrosoftGraphDeviceInstallState[]>: The install state of the eBook.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <InstallState?>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmanagedebookuserstatesummary
#>
function New-MgDeviceAppManagementManagedEBookUserStateSummary {
[Alias('New-MgDeviceAppMgtManagedEBookUserStateSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary]
    # Contains properties for the installation state summary for a user.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState[]]
    # The install state of the eBook.
    # To construct, see NOTES section for DEVICESTATES properties and create a hash table.
    ${DeviceStates},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Failed Device Count.
    ${FailedDeviceCount},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Installed Device Count.
    ${InstalledDeviceCount},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Not installed device count.
    ${NotInstalledDeviceCount},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # User name.
    ${UserName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookUserStateSummary_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookUserStateSummary_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookUserStateSummary_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBookUserStateSummary_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new iosVppEBook object.
.Description
Create a new iosVppEBook object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphManagedEBookAssignment[]>: The list of assignments for this eBook.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [InstallIntent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphManagedEBook>: An abstract class containing the base properties for Managed eBook.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Assignments <IMicrosoftGraphManagedEBookAssignment[]>]: The list of assignments for this eBook.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [InstallIntent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [CreatedDateTime <DateTime?>]: The date and time when the eBook file was created.
  [Description <String>]: Description.
  [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The list of installation states for this eBook.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DeviceId <String>]: Device Id.
    [DeviceName <String>]: Device name.
    [ErrorCode <String>]: The error code for install failures.
    [InstallState <InstallState?>]: Possible values for install state.
    [LastSyncDateTime <DateTime?>]: Last sync date and time.
    [OSDescription <String>]: OS Description.
    [OSVersion <String>]: OS Version.
    [UserName <String>]: Device User Name.
  [DisplayName <String>]: Name of the eBook.
  [InformationUrl <String>]: The more information Url.
  [InstallSummary <IMicrosoftGraphEBookInstallSummary>]: Contains properties for the installation summary of a book for a device.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [FailedDeviceCount <Int32?>]: Number of Devices that have failed to install this book.
    [FailedUserCount <Int32?>]: Number of Users that have 1 or more device that failed to install this book.
    [InstalledDeviceCount <Int32?>]: Number of Devices that have successfully installed this book.
    [InstalledUserCount <Int32?>]: Number of Users whose devices have all succeeded to install this book.
    [NotInstalledDeviceCount <Int32?>]: Number of Devices that does not have this book installed.
    [NotInstalledUserCount <Int32?>]: Number of Users that did not install this book.
  [LargeCover <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Type <String>]: Indicates the content mime type.
    [Value <Byte[]>]: The byte array that contains the actual content.
  [LastModifiedDateTime <DateTime?>]: The date and time when the eBook was last modified.
  [PrivacyInformationUrl <String>]: The privacy statement Url.
  [PublishedDateTime <DateTime?>]: The date and time when the eBook was published.
  [Publisher <String>]: Publisher.
  [UserStateSummary <IMicrosoftGraphUserInstallStateSummary[]>]: The list of installation states for this eBook.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
    [FailedDeviceCount <Int32?>]: Failed Device Count.
    [InstalledDeviceCount <Int32?>]: Installed Device Count.
    [NotInstalledDeviceCount <Int32?>]: Not installed device count.
    [UserName <String>]: User name.

DEVICESTATES <IMicrosoftGraphDeviceInstallState[]>: The list of installation states for this eBook.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <InstallState?>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INSTALLSUMMARY <IMicrosoftGraphEBookInstallSummary>: Contains properties for the installation summary of a book for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [FailedDeviceCount <Int32?>]: Number of Devices that have failed to install this book.
  [FailedUserCount <Int32?>]: Number of Users that have 1 or more device that failed to install this book.
  [InstalledDeviceCount <Int32?>]: Number of Devices that have successfully installed this book.
  [InstalledUserCount <Int32?>]: Number of Users whose devices have all succeeded to install this book.
  [NotInstalledDeviceCount <Int32?>]: Number of Devices that does not have this book installed.
  [NotInstalledUserCount <Int32?>]: Number of Users that did not install this book.

LARGECOVER <IMicrosoftGraphMimeContent>: Contains properties for a generic mime content.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Type <String>]: Indicates the content mime type.
  [Value <Byte[]>]: The byte array that contains the actual content.

USERSTATESUMMARY <IMicrosoftGraphUserInstallStateSummary[]>: The list of installation states for this eBook.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DeviceId <String>]: Device Id.
    [DeviceName <String>]: Device name.
    [ErrorCode <String>]: The error code for install failures.
    [InstallState <InstallState?>]: Possible values for install state.
    [LastSyncDateTime <DateTime?>]: Last sync date and time.
    [OSDescription <String>]: OS Description.
    [OSVersion <String>]: OS Version.
    [UserName <String>]: Device User Name.
  [FailedDeviceCount <Int32?>]: Failed Device Count.
  [InstalledDeviceCount <Int32?>]: Installed Device Count.
  [NotInstalledDeviceCount <Int32?>]: Not installed device count.
  [UserName <String>]: User name.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmanagedebook
#>
function New-MgDeviceAppManagementManagedEBook {
[Alias('New-MgDeviceAppMgtManagedEBook')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook]
    # An abstract class containing the base properties for Managed eBook.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment[]]
    # The list of assignments for this eBook.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time when the eBook file was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState[]]
    # The list of installation states for this eBook.
    # To construct, see NOTES section for DEVICESTATES properties and create a hash table.
    ${DeviceStates},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Name of the eBook.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The more information Url.
    ${InformationUrl},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEBookInstallSummary]
    # Contains properties for the installation summary of a book for a device.
    # To construct, see NOTES section for INSTALLSUMMARY properties and create a hash table.
    ${InstallSummary},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMimeContent]
    # Contains properties for a generic mime content.
    # To construct, see NOTES section for LARGECOVER properties and create a hash table.
    ${LargeCover},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time when the eBook was last modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The privacy statement Url.
    ${PrivacyInformationUrl},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time when the eBook was published.
    ${PublishedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Publisher.
    ${Publisher},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary[]]
    # The list of installation states for this eBook.
    # To construct, see NOTES section for USERSTATESUMMARY properties and create a hash table.
    ${UserStateSummary},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBook_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementManagedEBook_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to assignments for deviceAppManagement
.Description
Create new navigation property to assignments for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppPolicyAssignment>: The type for deployment of groups or apps.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyassignment
#>
function New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment {
[Alias('New-MgDeviceAppMgtMdmWindowInformationProtectionPolicyAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment]
    # The type for deployment of groups or apps.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to exemptAppLockerFiles for deviceAppManagement
.Description
Create new navigation property to exemptAppLockerFiles for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphWindowsInformationProtectionAppLockerFile>: Windows Information Protection AppLocker File
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyexemptapplockerfile
#>
function New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile {
[Alias('New-MgDeviceAppMgtMdmWindowInformationProtectionPolicyExemptAppLockerFile')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile]
    # Windows Information Protection AppLocker File
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The friendly name
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # SHA256 hash of the file
    ${FileHash},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Input File for File (File as a byte array)
    ${FileInputFile},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to protectedAppLockerFiles for deviceAppManagement
.Description
Create new navigation property to protectedAppLockerFiles for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphWindowsInformationProtectionAppLockerFile>: Windows Information Protection AppLocker File
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyprotectedapplockerfile
#>
function New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile {
[Alias('New-MgDeviceAppMgtMdmWindowInformationProtectionPolicyProtectedAppLockerFile')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile]
    # Windows Information Protection AppLocker File
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The friendly name
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # SHA256 hash of the file
    ${FileHash},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Input File for File (File as a byte array)
    ${FileInputFile},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new mdmWindowsInformationProtectionPolicy object.
.Description
Create a new mdmWindowsInformationProtectionPolicy object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
System.Collections.Hashtable
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>: Navigation property to list of security groups targeted for policy.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

DATARECOVERYCERTIFICATE <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>: Windows Information Protection DataRecoveryCertificate
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Certificate <Byte[]>]: Data recovery Certificate
  [Description <String>]: Data recovery Certificate description
  [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
  [SubjectName <String>]: Data recovery Certificate subject name

ENTERPRISEINTERNALPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEIPRANGES <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges

ENTERPRISENETWORKDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROTECTEDDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of enterprise domains to be protected
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROXIEDDOMAINS <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
  [DisplayName <String>]: Display name
  [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
    [IPAddressOrFqdn <String>]: The IP address or FQDN
    [Proxy <String>]: Proxy IP or FQDN

ENTERPRISEPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

EXEMPTAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input exempt apps through xml files
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

EXEMPTAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

NEUTRALDOMAINRESOURCES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of domain names that can used for work or personal resource
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

PROTECTEDAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input protected apps through xml files
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

PROTECTEDAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

SMBAUTOENCRYPTEDFILEEXTENSIONS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmdmwindowsinformationprotectionpolicy
#>
function New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy {
[Alias('New-MgDeviceAppMgtMdmWindowInformationProtectionPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(Required, PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy]))]
    [System.Collections.Hashtable]
    # Policy for Windows information protection with MDM
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment[]]
    # Navigation property to list of security groups targeted for policy.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether to allow Azure RMS encryption for WIP
    ${AzureRightsManagementServicesAllowed},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate]
    # Windows Information Protection DataRecoveryCertificate
    # To construct, see NOTES section for DATARECOVERYCERTIFICATE properties and create a hash table.
    ${DataRecoveryCertificate},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionEnforcementLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionEnforcementLevel]
    # Possible values for WIP Protection enforcement levels
    ${EnforcementLevel},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Primary enterprise domain
    ${EnterpriseDomain},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]]
    # Sets the enterprise IP ranges that define the computers in the enterprise network.
    # Data that comes from those computers will be considered part of the enterprise and protected.
    # These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISEIPRANGES properties and create a hash table.
    ${EnterpriseIPRanges},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets.
    # Default is false
    ${EnterpriseIPRangesAreAuthoritative},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the comma-separated list of internal proxy servers.
    # For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'.
    # These proxies have been configured by the admin to connect to specific resources on the Internet.
    # They are considered to be enterprise network locations.
    # The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    # To construct, see NOTES section for ENTERPRISEINTERNALPROXYSERVERS properties and create a hash table.
    ${EnterpriseInternalProxyServers},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the list of domains that comprise the boundaries of the enterprise.
    # Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISENETWORKDOMAINNAMES properties and create a hash table.
    ${EnterpriseNetworkDomainNames},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of enterprise domains to be protected
    # To construct, see NOTES section for ENTERPRISEPROTECTEDDOMAINNAMES properties and create a hash table.
    ${EnterpriseProtectedDomainNames},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]]
    # Contains a list of Enterprise resource domains hosted in the cloud that need to be protected.
    # Connections to these resources are considered enterprise data.
    # If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80).
    # A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    # To construct, see NOTES section for ENTERPRISEPROXIEDDOMAINS properties and create a hash table.
    ${EnterpriseProxiedDomains},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is a list of proxy servers.
    # Any server not on this list is considered non-enterprise
    # To construct, see NOTES section for ENTERPRISEPROXYSERVERS properties and create a hash table.
    ${EnterpriseProxyServers},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies.
    # Default is false
    ${EnterpriseProxyServersAreAuthoritative},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input exempt apps through xml files
    # To construct, see NOTES section for EXEMPTAPPLOCKERFILES properties and create a hash table.
    ${ExemptAppLockerFiles},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Exempt applications can also access enterprise data, but the data handled by those applications are not protected.
    # This is because some critical enterprise applications may have compatibility problems with encrypted data.
    # To construct, see NOTES section for EXEMPTAPPS properties and create a hash table.
    ${ExemptApps},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu.
    # Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
    ${IconsVisible},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This switch is for the Windows Search Indexer, to allow or disallow indexing of items
    ${IndexingEncryptedStoresOrItemsBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of domain names that can used for work or personal resource
    # To construct, see NOTES section for NEUTRALDOMAINRESOURCES properties and create a hash table.
    ${NeutralDomainResources},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input protected apps through xml files
    # To construct, see NOTES section for PROTECTEDAPPLOCKERFILES properties and create a hash table.
    ${ProtectedAppLockerFiles},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Protected applications can access enterprise data and the data handled by those applications are protected with encryption
    # To construct, see NOTES section for PROTECTEDAPPS properties and create a hash table.
    ${ProtectedApps},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
    ${ProtectionUnderLockConfigRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This policy controls whether to revoke the WIP keys when a device unenrolls from the management service.
    # If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment.
    # If the keys are not revoked, there will be no revoked file cleanup subsequently.
    ${RevokeOnUnenrollDisabled},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # TemplateID GUID to use for RMS encryption.
    # The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
    ${RightsManagementServicesTemplateId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
    # To construct, see NOTES section for SMBAUTOENCRYPTEDFILEEXTENSIONS properties and create a hash table.
    ${SmbAutoEncryptedFileExtensions},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new mobileAppAssignment object.
.Description
Create a new mobileAppAssignment object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphMobileAppAssignment>: A class containing the properties used for Group Assignment of a Mobile App.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Intent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
  [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmobileappassignment
#>
function New-MgDeviceAppManagementMobileAppAssignment {
[Alias('New-MgDeviceAppMgtMobileAppAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment]
    # A class containing the properties used for Group Assignment of a Mobile App.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.InstallIntent])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.InstallIntent]
    # Possible values for the install intent chosen by the admin.
    ${Intent},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignmentSettings]))]
    [System.Collections.Hashtable]
    # Abstract class to contain properties used to assign a mobile app to a group.
    ${Settings},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppAssignment_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppAssignment_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppAssignment_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppAssignment_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new mobileAppCategory object.
.Description
Create a new mobileAppCategory object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphMobileAppCategory>: Contains properties for a single Intune app category.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The name of the app category.
  [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmobileappcategory
#>
function New-MgDeviceAppManagementMobileAppCategory {
[Alias('New-MgDeviceAppMgtMobileAppCategory')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory]
    # Contains properties for a single Intune app category.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The name of the app category.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the mobileAppCategory was last modified.
    ${LastModifiedDateTime},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppCategory_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppCategory_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new managedDeviceMobileAppConfigurationAssignment object.
.Description
Create a new managedDeviceMobileAppConfigurationAssignment object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment>: Contains the properties used to assign an MDM app configuration to a group.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmobileappconfigurationassignment
#>
function New-MgDeviceAppManagementMobileAppConfigurationAssignment {
[Alias('New-MgDeviceAppMgtMobileAppConfigurationAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment]
    # Contains the properties used to assign an MDM app configuration to a group.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppConfigurationAssignment_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppConfigurationAssignment_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppConfigurationAssignment_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppConfigurationAssignment_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new managedDeviceMobileAppConfigurationDeviceStatus object.
.Description
Create a new managedDeviceMobileAppConfigurationDeviceStatus object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus>: Contains properties, inherited properties and actions for an MDM mobile app configuration status for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
  [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
  [DeviceModel <String>]: The device model that is being reported
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserName <String>]: The User Name that is being reported
  [UserPrincipalName <String>]: UserPrincipalName.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmobileappconfigurationdevicestatus
#>
function New-MgDeviceAppManagementMobileAppConfigurationDeviceStatus {
[Alias('New-MgDeviceAppMgtMobileAppConfigurationDeviceStatus')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration status for a device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The DateTime when device compliance grace period expires
    ${ComplianceGracePeriodExpirationDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device name of the DevicePolicyStatus.
    ${DeviceDisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The device model that is being reported
    ${DeviceModel},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last modified date time of the policy report.
    ${LastReportedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${Status},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The User Name that is being reported
    ${UserName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # UserPrincipalName.
    ${UserPrincipalName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppConfigurationDeviceStatus_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppConfigurationDeviceStatus_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppConfigurationDeviceStatus_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppConfigurationDeviceStatus_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new managedDeviceMobileAppConfigurationUserStatus object.
.Description
Create a new managedDeviceMobileAppConfigurationUserStatus object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus>: Contains properties, inherited properties and actions for an MDM mobile app configuration status for a user.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DevicesCount <Int32?>]: Devices count for that user.
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserDisplayName <String>]: User name of the DevicePolicyStatus.
  [UserPrincipalName <String>]: UserPrincipalName.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmobileappconfigurationuserstatus
#>
function New-MgDeviceAppManagementMobileAppConfigurationUserStatus {
[Alias('New-MgDeviceAppMgtMobileAppConfigurationUserStatus')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration status for a user.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Devices count for that user.
    ${DevicesCount},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last modified date time of the policy report.
    ${LastReportedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${Status},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # User name of the DevicePolicyStatus.
    ${UserDisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # UserPrincipalName.
    ${UserPrincipalName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppConfigurationUserStatus_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppConfigurationUserStatus_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppConfigurationUserStatus_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppConfigurationUserStatus_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new iosMobileAppConfiguration object.
.Description
Create a new iosMobileAppConfiguration object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment[]>: The list of group assignemenets for app configration.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfiguration>: An abstract class for Mobile app configuration for enrolled devices.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Assignments <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment[]>]: The list of group assignemenets for app configration.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [CreatedDateTime <DateTime?>]: DateTime the object was created.
  [Description <String>]: Admin provided description of the Device Configuration.
  [DeviceStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary>]: Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationVersion <Int32?>]: Version of the policy for that overview
    [ErrorCount <Int32?>]: Number of error devices
    [FailedCount <Int32?>]: Number of failed devices
    [LastUpdateDateTime <DateTime?>]: Last update time
    [NotApplicableCount <Int32?>]: Number of not applicable devices
    [PendingCount <Int32?>]: Number of pending devices
    [SuccessCount <Int32?>]: Number of succeeded devices
  [DeviceStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus[]>]: List of ManagedDeviceMobileAppConfigurationDeviceStatus.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
    [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
    [DeviceModel <String>]: The device model that is being reported
    [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
    [Status <String>]: complianceStatus
    [UserName <String>]: The User Name that is being reported
    [UserPrincipalName <String>]: UserPrincipalName.
  [DisplayName <String>]: Admin provided name of the device configuration.
  [LastModifiedDateTime <DateTime?>]: DateTime the object was last modified.
  [TargetedMobileApps <String[]>]: the associated app.
  [UserStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary>]: Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationVersion <Int32?>]: Version of the policy for that overview
    [ErrorCount <Int32?>]: Number of error Users
    [FailedCount <Int32?>]: Number of failed Users
    [LastUpdateDateTime <DateTime?>]: Last update time
    [NotApplicableCount <Int32?>]: Number of not applicable users
    [PendingCount <Int32?>]: Number of pending Users
    [SuccessCount <Int32?>]: Number of succeeded Users
  [UserStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]>]: List of ManagedDeviceMobileAppConfigurationUserStatus.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DevicesCount <Int32?>]: Devices count for that user.
    [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
    [Status <String>]: complianceStatus
    [UserDisplayName <String>]: User name of the DevicePolicyStatus.
    [UserPrincipalName <String>]: UserPrincipalName.
  [Version <Int32?>]: Version of the device configuration.

DEVICESTATUSES <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus[]>: List of ManagedDeviceMobileAppConfigurationDeviceStatus.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
  [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
  [DeviceModel <String>]: The device model that is being reported
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserName <String>]: The User Name that is being reported
  [UserPrincipalName <String>]: UserPrincipalName.

DEVICESTATUSSUMMARY <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary>: Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationVersion <Int32?>]: Version of the policy for that overview
  [ErrorCount <Int32?>]: Number of error devices
  [FailedCount <Int32?>]: Number of failed devices
  [LastUpdateDateTime <DateTime?>]: Last update time
  [NotApplicableCount <Int32?>]: Number of not applicable devices
  [PendingCount <Int32?>]: Number of pending devices
  [SuccessCount <Int32?>]: Number of succeeded devices

USERSTATUSES <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]>: List of ManagedDeviceMobileAppConfigurationUserStatus.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DevicesCount <Int32?>]: Devices count for that user.
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserDisplayName <String>]: User name of the DevicePolicyStatus.
  [UserPrincipalName <String>]: UserPrincipalName.

USERSTATUSSUMMARY <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary>: Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationVersion <Int32?>]: Version of the policy for that overview
  [ErrorCount <Int32?>]: Number of error Users
  [FailedCount <Int32?>]: Number of failed Users
  [LastUpdateDateTime <DateTime?>]: Last update time
  [NotApplicableCount <Int32?>]: Number of not applicable users
  [PendingCount <Int32?>]: Number of pending Users
  [SuccessCount <Int32?>]: Number of succeeded Users
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmobileappconfiguration
#>
function New-MgDeviceAppManagementMobileAppConfiguration {
[Alias('New-MgDeviceAppMgtMobileAppConfiguration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration]
    # An abstract class for Mobile app configuration for enrolled devices.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment[]]
    # The list of group assignemenets for app configration.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # DateTime the object was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Admin provided description of the Device Configuration.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
    # To construct, see NOTES section for DEVICESTATUSSUMMARY properties and create a hash table.
    ${DeviceStatusSummary},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus[]]
    # List of ManagedDeviceMobileAppConfigurationDeviceStatus.
    # To construct, see NOTES section for DEVICESTATUSES properties and create a hash table.
    ${DeviceStatuses},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Admin provided name of the device configuration.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # DateTime the object was last modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String[]]
    # the associated app.
    ${TargetedMobileApps},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
    # To construct, see NOTES section for USERSTATUSSUMMARY properties and create a hash table.
    ${UserStatusSummary},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]]
    # List of ManagedDeviceMobileAppConfigurationUserStatus.
    # To construct, see NOTES section for USERSTATUSES properties and create a hash table.
    ${UserStatuses},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Version of the device configuration.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppConfiguration_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileAppConfiguration_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new windowsMicrosoftEdgeApp object.
.Description
Create a new windowsMicrosoftEdgeApp object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphMobileAppAssignment[]>: The list of group assignments for this mobile app.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Intent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
  [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphMobileApp>: An abstract class containing the base properties for Intune mobile apps. Note: Listing mobile apps with `$expand=assignments` has been deprecated. Instead get the list of apps without the `$expand` query on `assignments`. Then, perform the expansion on individual applications.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Assignments <IMicrosoftGraphMobileAppAssignment[]>]: The list of group assignments for this mobile app.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Intent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
    [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [Categories <IMicrosoftGraphMobileAppCategory[]>]: The list of categories for this app.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The name of the app category.
    [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.
  [CreatedDateTime <DateTime?>]: The date and time the app was created.
  [Description <String>]: The description of the app.
  [Developer <String>]: The developer of the app.
  [DisplayName <String>]: The admin provided or imported title of the app.
  [InformationUrl <String>]: The more information Url.
  [IsFeatured <Boolean?>]: The value indicating whether the app is marked as featured by the admin.
  [LargeIcon <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Type <String>]: Indicates the content mime type.
    [Value <Byte[]>]: The byte array that contains the actual content.
  [LastModifiedDateTime <DateTime?>]: The date and time the app was last modified.
  [Notes <String>]: Notes for the app.
  [Owner <String>]: The owner of the app.
  [PrivacyInformationUrl <String>]: The privacy statement Url.
  [Publisher <String>]: The publisher of the app.
  [PublishingState <MobileAppPublishingState?>]: Indicates the publishing state of an app.

CATEGORIES <IMicrosoftGraphMobileAppCategory[]>: The list of categories for this app.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The name of the app category.
  [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.

LARGEICON <IMicrosoftGraphMimeContent>: Contains properties for a generic mime content.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Type <String>]: Indicates the content mime type.
  [Value <Byte[]>]: The byte array that contains the actual content.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementmobileapp
#>
function New-MgDeviceAppManagementMobileApp {
[Alias('New-MgDeviceAppMgtMobileApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp]
    # An abstract class containing the base properties for Intune mobile apps.
    # Note: Listing mobile apps with `$expand=assignments` has been deprecated.
    # Instead get the list of apps without the `$expand` query on `assignments`.
    # Then, perform the expansion on individual applications.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment[]]
    # The list of group assignments for this mobile app.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory[]]
    # The list of categories for this app.
    # To construct, see NOTES section for CATEGORIES properties and create a hash table.
    ${Categories},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the app was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The description of the app.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The developer of the app.
    ${Developer},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The admin provided or imported title of the app.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The more information Url.
    ${InformationUrl},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # The value indicating whether the app is marked as featured by the admin.
    ${IsFeatured},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMimeContent]
    # Contains properties for a generic mime content.
    # To construct, see NOTES section for LARGEICON properties and create a hash table.
    ${LargeIcon},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the app was last modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Notes for the app.
    ${Notes},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The owner of the app.
    ${Owner},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The privacy statement Url.
    ${PrivacyInformationUrl},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The publisher of the app.
    ${Publisher},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.MobileAppPublishingState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.MobileAppPublishingState]
    # Indicates the publishing state of an app.
    ${PublishingState},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileApp_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementMobileApp_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to apps for deviceAppManagement
.Description
Create new navigation property to apps for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementtargetedmanagedappconfigurationapp
#>
function New-MgDeviceAppManagementTargetedManagedAppConfigurationApp {
[Alias('New-MgDeviceAppMgtTargetedManagedAppConfigurationApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementTargetedManagedAppConfigurationApp_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementTargetedManagedAppConfigurationApp_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementTargetedManagedAppConfigurationApp_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementTargetedManagedAppConfigurationApp_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to assignments for deviceAppManagement
.Description
Create new navigation property to assignments for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppPolicyAssignment>: The type for deployment of groups or apps.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementtargetedmanagedappconfigurationassignment
#>
function New-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment {
[Alias('New-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment]
    # The type for deployment of groups or apps.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new targetedManagedAppConfiguration object.
.Description
Create a new targetedManagedAppConfiguration object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppConfiguration>: Configuration used to deliver a set of custom settings as-is to all users in the targeted security group
  [(Any) <Object>]: This indicates any property can be added to this object.
  [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
    [Name <String>]: Name for this key-value pair
    [Value <String>]: Value for this key-value pair
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.

CUSTOMSETTINGS <IMicrosoftGraphKeyValuePair[]>: A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
  [Name <String>]: Name for this key-value pair
  [Value <String>]: Value for this key-value pair

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementtargetedmanagedappconfiguration
#>
function New-MgDeviceAppManagementTargetedManagedAppConfiguration {
[Alias('New-MgDeviceAppMgtTargetedManagedAppConfiguration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration]
    # Configuration used to deliver a set of custom settings as-is to all users in the targeted security group
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment[]]
    # Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphKeyValuePair[]]
    # A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
    # To construct, see NOTES section for CUSTOMSETTINGS properties and create a hash table.
    ${CustomSettings},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementTargetedManagedAppConfiguration_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementTargetedManagedAppConfiguration_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new vppToken object.
.Description
Create a new vppToken object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphVppToken>: You purchase multiple licenses for iOS apps through the Apple Volume Purchase Program for Business or Education. This involves setting up an Apple VPP account from the Apple website and uploading the Apple VPP Business or Education token to Intune. You can then synchronize your volume purchase information with Intune and track your volume-purchased app use. You can upload multiple Apple VPP Business or Education tokens.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AppleId <String>]: The apple Id associated with the given Apple Volume Purchase Program Token.
  [AutomaticallyUpdateApps <Boolean?>]: Whether or not apps for the VPP token will be automatically updated.
  [CountryOrRegion <String>]: Whether or not apps for the VPP token will be automatically updated.
  [ExpirationDateTime <DateTime?>]: The expiration date time of the Apple Volume Purchase Program Token.
  [LastModifiedDateTime <DateTime?>]: Last modification date time associated with the Apple Volume Purchase Program Token.
  [LastSyncDateTime <DateTime?>]: The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.
  [LastSyncStatus <VppTokenSyncStatus?>]: Possible sync statuses associated with an Apple Volume Purchase Program token.
  [OrganizationName <String>]: The organization associated with the Apple Volume Purchase Program Token
  [State <VppTokenState?>]: Possible states associated with an Apple Volume Purchase Program token.
  [Token <String>]: The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.
  [VppTokenAccountType <VppTokenAccountType?>]: Possible types of an Apple Volume Purchase Program token.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementvpptoken
#>
function New-MgDeviceAppManagementVppToken {
[Alias('New-MgDeviceAppMgtVppToken')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken]
    # You purchase multiple licenses for iOS apps through the Apple Volume Purchase Program for Business or Education.
    # This involves setting up an Apple VPP account from the Apple website and uploading the Apple VPP Business or Education token to Intune.
    # You can then synchronize your volume purchase information with Intune and track your volume-purchased app use.
    # You can upload multiple Apple VPP Business or Education tokens.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The apple Id associated with the given Apple Volume Purchase Program Token.
    ${AppleId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether or not apps for the VPP token will be automatically updated.
    ${AutomaticallyUpdateApps},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Whether or not apps for the VPP token will be automatically updated.
    ${CountryOrRegion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The expiration date time of the Apple Volume Purchase Program Token.
    ${ExpirationDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last modification date time associated with the Apple Volume Purchase Program Token.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.VppTokenSyncStatus])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.VppTokenSyncStatus]
    # Possible sync statuses associated with an Apple Volume Purchase Program token.
    ${LastSyncStatus},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The organization associated with the Apple Volume Purchase Program Token
    ${OrganizationName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.VppTokenState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.VppTokenState]
    # Possible states associated with an Apple Volume Purchase Program token.
    ${State},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.
    ${Token},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.VppTokenAccountType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.VppTokenAccountType]
    # Possible types of an Apple Volume Purchase Program token.
    ${VppTokenAccountType},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementVppToken_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementVppToken_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to assignments for deviceAppManagement
.Description
Create new navigation property to assignments for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppPolicyAssignment>: The type for deployment of groups or apps.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementwindowsinformationprotectionpolicyassignment
#>
function New-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment {
[Alias('New-MgDeviceAppMgtWindowInformationProtectionPolicyAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment]
    # The type for deployment of groups or apps.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to exemptAppLockerFiles for deviceAppManagement
.Description
Create new navigation property to exemptAppLockerFiles for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphWindowsInformationProtectionAppLockerFile>: Windows Information Protection AppLocker File
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementwindowsinformationprotectionpolicyexemptapplockerfile
#>
function New-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile {
[Alias('New-MgDeviceAppMgtWindowInformationProtectionPolicyExemptAppLockerFile')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile]
    # Windows Information Protection AppLocker File
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The friendly name
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # SHA256 hash of the file
    ${FileHash},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Input File for File (File as a byte array)
    ${FileInputFile},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to protectedAppLockerFiles for deviceAppManagement
.Description
Create new navigation property to protectedAppLockerFiles for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphWindowsInformationProtectionAppLockerFile>: Windows Information Protection AppLocker File
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementwindowsinformationprotectionpolicyprotectedapplockerfile
#>
function New-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile {
[Alias('New-MgDeviceAppMgtWindowInformationProtectionPolicyProtectedAppLockerFile')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile]
    # Windows Information Protection AppLocker File
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The friendly name
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # SHA256 hash of the file
    ${FileHash},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Input File for File (File as a byte array)
    ${FileInputFile},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new windowsInformationProtectionPolicy object.
.Description
Create a new windowsInformationProtectionPolicy object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>: Navigation property to list of security groups targeted for policy.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphWindowsInformationProtectionPolicy>: Policy for Windows information protection without MDM
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of security groups targeted for policy.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [AzureRightsManagementServicesAllowed <Boolean?>]: Specifies whether to allow Azure RMS encryption for WIP
  [DataRecoveryCertificate <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>]: Windows Information Protection DataRecoveryCertificate
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Certificate <Byte[]>]: Data recovery Certificate
    [Description <String>]: Data recovery Certificate description
    [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
    [SubjectName <String>]: Data recovery Certificate subject name
  [EnforcementLevel <WindowsInformationProtectionEnforcementLevel?>]: Possible values for WIP Protection enforcement levels
  [EnterpriseDomain <String>]: Primary enterprise domain
  [EnterpriseIPRanges <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>]: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
    [DisplayName <String>]: Display name
    [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges
  [EnterpriseIPRangesAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
  [EnterpriseInternalProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    [DisplayName <String>]: Display name
    [Resources <String[]>]: Collection of resources
  [EnterpriseNetworkDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [EnterpriseProtectedDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of enterprise domains to be protected
  [EnterpriseProxiedDomains <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>]: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    [DisplayName <String>]: Display name
    [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
      [IPAddressOrFqdn <String>]: The IP address or FQDN
      [Proxy <String>]: Proxy IP or FQDN
  [EnterpriseProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [EnterpriseProxyServersAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
  [ExemptAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input exempt apps through xml files
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The friendly name
    [File <Byte[]>]: File as a byte array
    [FileHash <String>]: SHA256 hash of the file
    [Version <String>]: Version of the entity.
  [ExemptApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
    [Denied <Boolean?>]: If true, app is denied protection or exemption.
    [Description <String>]: The app's description.
    [DisplayName <String>]: App display name.
    [ProductName <String>]: The product name.
    [PublisherName <String>]: The publisher name
  [IconsVisible <Boolean?>]: Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
  [IndexingEncryptedStoresOrItemsBlocked <Boolean?>]: This switch is for the Windows Search Indexer, to allow or disallow indexing of items
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [NeutralDomainResources <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of domain names that can used for work or personal resource
  [ProtectedAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input protected apps through xml files
  [ProtectedApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [ProtectionUnderLockConfigRequired <Boolean?>]: Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
  [RevokeOnUnenrollDisabled <Boolean?>]: This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
  [RightsManagementServicesTemplateId <String>]: TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
  [SmbAutoEncryptedFileExtensions <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DaysWithoutContactBeforeUnenroll <Int32?>]: Offline interval before app data is wiped (days)
  [MdmEnrollmentUrl <String>]: Enrollment url for the MDM
  [MinutesOfInactivityBeforeDeviceLock <Int32?>]: Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.   Range is an integer X where 0 <= X <= 999.
  [NumberOfPastPinsRemembered <Int32?>]: Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused. The largest number you can configure for this policy setting is 50. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then storage of previous PINs is not required. This node was added in Windows 10, version 1511. Default is 0.
  [PasswordMaximumAttemptCount <Int32?>]: The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality. Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.
  [PinExpirationDays <Int32?>]: Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it. The largest number you can configure for this policy setting is 730. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then the user's PIN will never expire. This node was added in Windows 10, version 1511. Default is 0.
  [PinLowercaseLetters <WindowsInformationProtectionPinCharacterRequirements?>]: Pin Character Requirements
  [PinMinimumLength <Int32?>]: Integer value that sets the minimum number of characters required for the PIN. Default value is 4. The lowest number you can configure for this policy setting is 4. The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.
  [PinSpecialCharacters <WindowsInformationProtectionPinCharacterRequirements?>]: Pin Character Requirements
  [PinUppercaseLetters <WindowsInformationProtectionPinCharacterRequirements?>]: Pin Character Requirements
  [RevokeOnMdmHandoffDisabled <Boolean?>]: New property in RS2, pending documentation
  [WindowsHelloForBusinessBlocked <Boolean?>]: Boolean value that sets Windows Hello for Business as a method for signing into Windows.

DATARECOVERYCERTIFICATE <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>: Windows Information Protection DataRecoveryCertificate
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Certificate <Byte[]>]: Data recovery Certificate
  [Description <String>]: Data recovery Certificate description
  [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
  [SubjectName <String>]: Data recovery Certificate subject name

ENTERPRISEINTERNALPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEIPRANGES <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges

ENTERPRISENETWORKDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROTECTEDDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of enterprise domains to be protected
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROXIEDDOMAINS <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
  [DisplayName <String>]: Display name
  [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
    [IPAddressOrFqdn <String>]: The IP address or FQDN
    [Proxy <String>]: Proxy IP or FQDN

ENTERPRISEPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

EXEMPTAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input exempt apps through xml files
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

EXEMPTAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

NEUTRALDOMAINRESOURCES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of domain names that can used for work or personal resource
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

PROTECTEDAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input protected apps through xml files
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

PROTECTEDAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

SMBAUTOENCRYPTEDFILEEXTENSIONS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmanagementwindowsinformationprotectionpolicy
#>
function New-MgDeviceAppManagementWindowsInformationProtectionPolicy {
[Alias('New-MgDeviceAppMgtWindowInformationProtectionPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy]
    # Policy for Windows information protection without MDM
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment[]]
    # Navigation property to list of security groups targeted for policy.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether to allow Azure RMS encryption for WIP
    ${AzureRightsManagementServicesAllowed},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate]
    # Windows Information Protection DataRecoveryCertificate
    # To construct, see NOTES section for DATARECOVERYCERTIFICATE properties and create a hash table.
    ${DataRecoveryCertificate},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Offline interval before app data is wiped (days)
    ${DaysWithoutContactBeforeUnenroll},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionEnforcementLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionEnforcementLevel]
    # Possible values for WIP Protection enforcement levels
    ${EnforcementLevel},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Primary enterprise domain
    ${EnterpriseDomain},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]]
    # Sets the enterprise IP ranges that define the computers in the enterprise network.
    # Data that comes from those computers will be considered part of the enterprise and protected.
    # These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISEIPRANGES properties and create a hash table.
    ${EnterpriseIPRanges},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets.
    # Default is false
    ${EnterpriseIPRangesAreAuthoritative},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the comma-separated list of internal proxy servers.
    # For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'.
    # These proxies have been configured by the admin to connect to specific resources on the Internet.
    # They are considered to be enterprise network locations.
    # The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    # To construct, see NOTES section for ENTERPRISEINTERNALPROXYSERVERS properties and create a hash table.
    ${EnterpriseInternalProxyServers},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the list of domains that comprise the boundaries of the enterprise.
    # Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISENETWORKDOMAINNAMES properties and create a hash table.
    ${EnterpriseNetworkDomainNames},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of enterprise domains to be protected
    # To construct, see NOTES section for ENTERPRISEPROTECTEDDOMAINNAMES properties and create a hash table.
    ${EnterpriseProtectedDomainNames},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]]
    # Contains a list of Enterprise resource domains hosted in the cloud that need to be protected.
    # Connections to these resources are considered enterprise data.
    # If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80).
    # A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    # To construct, see NOTES section for ENTERPRISEPROXIEDDOMAINS properties and create a hash table.
    ${EnterpriseProxiedDomains},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is a list of proxy servers.
    # Any server not on this list is considered non-enterprise
    # To construct, see NOTES section for ENTERPRISEPROXYSERVERS properties and create a hash table.
    ${EnterpriseProxyServers},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies.
    # Default is false
    ${EnterpriseProxyServersAreAuthoritative},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input exempt apps through xml files
    # To construct, see NOTES section for EXEMPTAPPLOCKERFILES properties and create a hash table.
    ${ExemptAppLockerFiles},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Exempt applications can also access enterprise data, but the data handled by those applications are not protected.
    # This is because some critical enterprise applications may have compatibility problems with encrypted data.
    # To construct, see NOTES section for EXEMPTAPPS properties and create a hash table.
    ${ExemptApps},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu.
    # Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
    ${IconsVisible},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This switch is for the Windows Search Indexer, to allow or disallow indexing of items
    ${IndexingEncryptedStoresOrItemsBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Enrollment url for the MDM
    ${MdmEnrollmentUrl},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.
    # Range is an integer X where 0 <= X <= 999.
    ${MinutesOfInactivityBeforeDeviceLock},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of domain names that can used for work or personal resource
    # To construct, see NOTES section for NEUTRALDOMAINRESOURCES properties and create a hash table.
    ${NeutralDomainResources},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused.
    # The largest number you can configure for this policy setting is 50.
    # The lowest number you can configure for this policy setting is 0.
    # If this policy is set to 0, then storage of previous PINs is not required.
    # This node was added in Windows 10, version 1511.
    # Default is 0.
    ${NumberOfPastPinsRemembered},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # The number of authentication failures allowed before the device will be wiped.
    # A value of 0 disables device wipe functionality.
    # Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.
    ${PasswordMaximumAttemptCount},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it.
    # The largest number you can configure for this policy setting is 730.
    # The lowest number you can configure for this policy setting is 0.
    # If this policy is set to 0, then the user's PIN will never expire.
    # This node was added in Windows 10, version 1511.
    # Default is 0.
    ${PinExpirationDays},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionPinCharacterRequirements])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionPinCharacterRequirements]
    # Pin Character Requirements
    ${PinLowercaseLetters},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Integer value that sets the minimum number of characters required for the PIN.
    # Default value is 4.
    # The lowest number you can configure for this policy setting is 4.
    # The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.
    ${PinMinimumLength},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionPinCharacterRequirements])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionPinCharacterRequirements]
    # Pin Character Requirements
    ${PinSpecialCharacters},

    [Parameter(ParameterSetName='CreateExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionPinCharacterRequirements])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionPinCharacterRequirements]
    # Pin Character Requirements
    ${PinUppercaseLetters},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input protected apps through xml files
    # To construct, see NOTES section for PROTECTEDAPPLOCKERFILES properties and create a hash table.
    ${ProtectedAppLockerFiles},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Protected applications can access enterprise data and the data handled by those applications are protected with encryption
    # To construct, see NOTES section for PROTECTEDAPPS properties and create a hash table.
    ${ProtectedApps},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
    ${ProtectionUnderLockConfigRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # New property in RS2, pending documentation
    ${RevokeOnMdmHandoffDisabled},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This policy controls whether to revoke the WIP keys when a device unenrolls from the management service.
    # If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment.
    # If the keys are not revoked, there will be no revoked file cleanup subsequently.
    ${RevokeOnUnenrollDisabled},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # TemplateID GUID to use for RMS encryption.
    # The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
    ${RightsManagementServicesTemplateId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
    # To construct, see NOTES section for SMBAUTOENCRYPTEDFILEEXTENSIONS properties and create a hash table.
    ${SmbAutoEncryptedFileExtensions},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that sets Windows Hello for Business as a method for signing into Windows.
    ${WindowsHelloForBusinessBlocked},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementWindowsInformationProtectionPolicy_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppManagementWindowsInformationProtectionPolicy_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to deviceManagementTroubleshootingEvents for users
.Description
Create new navigation property to deviceManagementTroubleshootingEvents for users
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceManagementTroubleshootingEvent>: Event representing an general failure.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [CorrelationId <String>]: Id used for tracing the failure in the service.
  [EventDateTime <DateTime?>]: Time when the event occurred .

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mguserdevicemanagementtroubleshootingevent
#>
function New-MgUserDeviceManagementTroubleshootingEvent {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent]
    # Event representing an general failure.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Id used for tracing the failure in the service.
    ${CorrelationId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Time when the event occurred .
    ${EventDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserDeviceManagementTroubleshootingEvent_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserDeviceManagementTroubleshootingEvent_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserDeviceManagementTroubleshootingEvent_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserDeviceManagementTroubleshootingEvent_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to deviceCompliancePolicyStates for users
.Description
Create new navigation property to deviceCompliancePolicyStates for users
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceCompliancePolicyState>: Device Compliance Policy State for a given device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceCompliancePolicySettingState[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy

SETTINGSTATES <IMicrosoftGraphDeviceCompliancePolicySettingState[]>: .
  [CurrentValue <String>]: Current value of setting on device
  [ErrorCode <Int64?>]: Error code for the setting
  [ErrorDescription <String>]: Error description
  [InstanceDisplayName <String>]: Name of setting instance that is being reported.
  [Setting <String>]: The setting that is being reported
  [SettingName <String>]: Localized/user friendly setting name that is being reported
  [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
    [DisplayName <String>]: Not yet documented
    [Id <String>]: Not yet documented
    [SourceType <String>]: settingSourceType
  [State <String>]: complianceStatus
  [UserEmail <String>]: UserEmail
  [UserId <String>]: UserId
  [UserName <String>]: UserName
  [UserPrincipalName <String>]: UserPrincipalName.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgusermanageddevicecompliancepolicystate
#>
function New-MgUserManagedDeviceCompliancePolicyState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState]
    # Device Compliance Policy State for a given device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The name of the policy for this policyBase
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.PolicyPlatformType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.PolicyPlatformType]
    # Supported platform types for policies.
    ${PlatformType},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of how many setting a policy holds
    ${SettingCount},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicySettingState[]]
    # .
    # To construct, see NOTES section for SETTINGSTATES properties and create a hash table.
    ${SettingStates},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${State},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # The version of the policy
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceCompliancePolicyState_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceCompliancePolicyState_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceCompliancePolicyState_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceCompliancePolicyState_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to deviceConfigurationStates for users
.Description
Create new navigation property to deviceConfigurationStates for users
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceConfigurationState>: Device Configuration State for a given device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceConfigurationSettingState[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy

SETTINGSTATES <IMicrosoftGraphDeviceConfigurationSettingState[]>: .
  [CurrentValue <String>]: Current value of setting on device
  [ErrorCode <Int64?>]: Error code for the setting
  [ErrorDescription <String>]: Error description
  [InstanceDisplayName <String>]: Name of setting instance that is being reported.
  [Setting <String>]: The setting that is being reported
  [SettingName <String>]: Localized/user friendly setting name that is being reported
  [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
    [DisplayName <String>]: Not yet documented
    [Id <String>]: Not yet documented
    [SourceType <String>]: settingSourceType
  [State <String>]: complianceStatus
  [UserEmail <String>]: UserEmail
  [UserId <String>]: UserId
  [UserName <String>]: UserName
  [UserPrincipalName <String>]: UserPrincipalName.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgusermanageddeviceconfigurationstate
#>
function New-MgUserManagedDeviceConfigurationState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState]
    # Device Configuration State for a given device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The name of the policy for this policyBase
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.PolicyPlatformType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.PolicyPlatformType]
    # Supported platform types for policies.
    ${PlatformType},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of how many setting a policy holds
    ${SettingCount},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationSettingState[]]
    # .
    # To construct, see NOTES section for SETTINGSTATES properties and create a hash table.
    ${SettingStates},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${State},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # The version of the policy
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceConfigurationState_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceConfigurationState_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceConfigurationState_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceConfigurationState_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to logCollectionRequests for users
.Description
Create new navigation property to logCollectionRequests for users
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceLogCollectionResponse
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceLogCollectionResponse
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceLogCollectionResponse>: Windows Log Collection request entity.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [EnrolledByUser <String>]: The User Principal Name (UPN) of the user that enrolled the device.
  [ExpirationDateTimeUtc <DateTime?>]: The DateTime of the expiration of the logs.
  [InitiatedByUserPrincipalName <String>]: The UPN for who initiated the request.
  [ManagedDeviceId <String>]: Indicates Intune device unique identifier.
  [ReceivedDateTimeUtc <DateTime?>]: The DateTime the request was received.
  [RequestedDateTimeUtc <DateTime?>]: The DateTime of the request.
  [SizeInKb <Double?>]: The size of the logs in KB. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
  [Status <AppLogUploadState?>]: AppLogUploadStatus

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgusermanageddevicelogcollectionresponse
#>
function New-MgUserManagedDeviceLogCollectionResponse {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceLogCollectionResponse])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceLogCollectionResponse]
    # Windows Log Collection request entity.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The User Principal Name (UPN) of the user that enrolled the device.
    ${EnrolledByUser},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The DateTime of the expiration of the logs.
    ${ExpirationDateTimeUtc},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The UPN for who initiated the request.
    ${InitiatedByUserPrincipalName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Indicates Intune device unique identifier.
    ${ManagedDeviceId1},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The DateTime the request was received.
    ${ReceivedDateTimeUtc},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The DateTime of the request.
    ${RequestedDateTimeUtc},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Double]
    # The size of the logs in KB.
    # Valid values -1.79769313486232E+308 to 1.79769313486232E+308
    ${SizeInKb},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.AppLogUploadState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.AppLogUploadState]
    # AppLogUploadStatus
    ${Status},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceLogCollectionResponse_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceLogCollectionResponse_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceLogCollectionResponse_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceLogCollectionResponse_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create a new windowsDeviceMalwareState object.
.Description
Create a new windowsDeviceMalwareState object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsDeviceMalwareState
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsDeviceMalwareState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphWindowsDeviceMalwareState>: Malware detection entity.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AdditionalInformationUrl <String>]: Information URL to learn more about the malware
  [Category <WindowsMalwareCategory?>]: Malware category id
  [DetectionCount <Int32?>]: Number of times the malware is detected
  [DisplayName <String>]: Malware name
  [ExecutionState <WindowsMalwareExecutionState?>]: Malware execution status
  [InitialDetectionDateTime <DateTime?>]: Initial detection datetime of the malware
  [LastStateChangeDateTime <DateTime?>]: The last time this particular threat was changed
  [Severity <WindowsMalwareSeverity?>]: Malware severity
  [State <WindowsMalwareState?>]: Malware current status
  [ThreatState <WindowsMalwareThreatState?>]: Malware threat status

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgusermanageddevicewindowsprotectionstatedetectedmalwarestate
#>
function New-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsDeviceMalwareState])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsDeviceMalwareState]
    # Malware detection entity.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Information URL to learn more about the malware
    ${AdditionalInformationUrl},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsMalwareCategory])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsMalwareCategory]
    # Malware category id
    ${Category},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of times the malware is detected
    ${DetectionCount},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Malware name
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsMalwareExecutionState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsMalwareExecutionState]
    # Malware execution status
    ${ExecutionState},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Initial detection datetime of the malware
    ${InitialDetectionDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The last time this particular threat was changed
    ${LastStateChangeDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsMalwareSeverity])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsMalwareSeverity]
    # Malware severity
    ${Severity},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsMalwareState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsMalwareState]
    # Malware current status
    ${State},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsMalwareThreatState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsMalwareThreatState]
    # Malware threat status
    ${ThreatState},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Create new navigation property to managedDevices for users
.Description
Create new navigation property to managedDevices for users
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDevice>: Devices that are managed or pre-enrolled through Intune
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ComplianceState <ComplianceState?>]: Compliance state.
  [ConfigurationManagerClientEnabledFeatures <IMicrosoftGraphConfigurationManagerClientEnabledFeatures>]: configuration Manager client enabled features
    [(Any) <Object>]: This indicates any property can be added to this object.
    [CompliancePolicy <Boolean?>]: Whether compliance policy is managed by Intune
    [DeviceConfiguration <Boolean?>]: Whether device configuration is managed by Intune
    [Inventory <Boolean?>]: Whether inventory is managed by Intune
    [ModernApps <Boolean?>]: Whether modern application is managed by Intune
    [ResourceAccess <Boolean?>]: Whether resource access is managed by Intune
    [WindowsUpdateForBusiness <Boolean?>]: Whether Windows Update for Business is managed by Intune
  [DeviceCategory <IMicrosoftGraphDeviceCategory>]: Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Description <String>]: Optional description for the device category.
    [DisplayName <String>]: Display name for the device category.
  [DeviceCompliancePolicyStates <IMicrosoftGraphDeviceCompliancePolicyState[]>]: Device compliance policy states for this device.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The name of the policy for this policyBase
    [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
    [SettingCount <Int32?>]: Count of how many setting a policy holds
    [SettingStates <IMicrosoftGraphDeviceCompliancePolicySettingState[]>]: 
      [CurrentValue <String>]: Current value of setting on device
      [ErrorCode <Int64?>]: Error code for the setting
      [ErrorDescription <String>]: Error description
      [InstanceDisplayName <String>]: Name of setting instance that is being reported.
      [Setting <String>]: The setting that is being reported
      [SettingName <String>]: Localized/user friendly setting name that is being reported
      [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
        [DisplayName <String>]: Not yet documented
        [Id <String>]: Not yet documented
        [SourceType <String>]: settingSourceType
      [State <String>]: complianceStatus
      [UserEmail <String>]: UserEmail
      [UserId <String>]: UserId
      [UserName <String>]: UserName
      [UserPrincipalName <String>]: UserPrincipalName.
    [State <String>]: complianceStatus
    [Version <Int32?>]: The version of the policy
  [DeviceConfigurationStates <IMicrosoftGraphDeviceConfigurationState[]>]: Device configuration states for this device.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The name of the policy for this policyBase
    [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
    [SettingCount <Int32?>]: Count of how many setting a policy holds
    [SettingStates <IMicrosoftGraphDeviceConfigurationSettingState[]>]: 
      [CurrentValue <String>]: Current value of setting on device
      [ErrorCode <Int64?>]: Error code for the setting
      [ErrorDescription <String>]: Error description
      [InstanceDisplayName <String>]: Name of setting instance that is being reported.
      [Setting <String>]: The setting that is being reported
      [SettingName <String>]: Localized/user friendly setting name that is being reported
      [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [State <String>]: complianceStatus
      [UserEmail <String>]: UserEmail
      [UserId <String>]: UserId
      [UserName <String>]: UserName
      [UserPrincipalName <String>]: UserPrincipalName.
    [State <String>]: complianceStatus
    [Version <Int32?>]: The version of the policy
  [DeviceEnrollmentType <DeviceEnrollmentType?>]: Possible ways of adding a mobile device to management.
  [DeviceHealthAttestationState <IMicrosoftGraphDeviceHealthAttestationState>]: deviceHealthAttestationState
    [(Any) <Object>]: This indicates any property can be added to this object.
    [AttestationIdentityKey <String>]: TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.
    [BitLockerStatus <String>]: On or Off of BitLocker Drive Encryption
    [BootAppSecurityVersion <String>]: The security version number of the Boot Application
    [BootDebugging <String>]: When bootDebugging is enabled, the device is used in development and testing
    [BootManagerSecurityVersion <String>]: The security version number of the Boot Application
    [BootManagerVersion <String>]: The version of the Boot Manager
    [BootRevisionListInfo <String>]: The Boot Revision List that was loaded during initial boot on the attested device
    [CodeIntegrity <String>]: When code integrity is enabled, code execution is restricted to integrity verified code
    [CodeIntegrityCheckVersion <String>]: The version of the Boot Manager
    [CodeIntegrityPolicy <String>]: The Code Integrity policy that is controlling the security of the boot environment
    [ContentNamespaceUrl <String>]: The DHA report version. (Namespace version)
    [ContentVersion <String>]: The HealthAttestation state schema version
    [DataExcutionPolicy <String>]: DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
    [DeviceHealthAttestationStatus <String>]: The DHA report version. (Namespace version)
    [EarlyLaunchAntiMalwareDriverProtection <String>]: ELAM provides protection for the computers in your network when they start up
    [HealthAttestationSupportedStatus <String>]: This attribute indicates if DHA is supported for the device
    [HealthStatusMismatchInfo <String>]: This attribute appears if DHA-Service detects an integrity issue
    [IssuedDateTime <DateTime?>]: The DateTime when device was evaluated or issued to MDM
    [LastUpdateDateTime <String>]: The Timestamp of the last update.
    [OperatingSystemKernelDebugging <String>]: When operatingSystemKernelDebugging is enabled, the device is used in development and testing
    [OperatingSystemRevListInfo <String>]: The Operating System Revision List that was loaded during initial boot on the attested device
    [Pcr0 <String>]: The measurement that is captured in PCR[0]
    [PcrHashAlgorithm <String>]: Informational attribute that identifies the HASH algorithm that was used by TPM
    [ResetCount <Int64?>]: The number of times a PC device has hibernated or resumed
    [RestartCount <Int64?>]: The number of times a PC device has rebooted
    [SafeMode <String>]: Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
    [SecureBoot <String>]: When Secure Boot is enabled, the core components must have the correct cryptographic signatures
    [SecureBootConfigurationPolicyFingerPrint <String>]: Fingerprint of the Custom Secure Boot Configuration Policy
    [TestSigning <String>]: When test signing is allowed, the device does not enforce signature validation during boot
    [TpmVersion <String>]: The security version number of the Boot Application
    [VirtualSecureMode <String>]: VSM is a container that protects high value assets from a compromised kernel
    [WindowsPe <String>]: Operating system running with limited services that is used to prepare a computer for Windows
  [DeviceRegistrationState <DeviceRegistrationState?>]: Device registration status.
  [ExchangeAccessState <DeviceManagementExchangeAccessState?>]: Device Exchange Access State.
  [ExchangeAccessStateReason <DeviceManagementExchangeAccessStateReason?>]: Device Exchange Access State Reason.
  [LogCollectionRequests <IMicrosoftGraphDeviceLogCollectionResponse[]>]: List of log collection requests
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [EnrolledByUser <String>]: The User Principal Name (UPN) of the user that enrolled the device.
    [ExpirationDateTimeUtc <DateTime?>]: The DateTime of the expiration of the logs.
    [InitiatedByUserPrincipalName <String>]: The UPN for who initiated the request.
    [ManagedDeviceId <String>]: Indicates Intune device unique identifier.
    [ReceivedDateTimeUtc <DateTime?>]: The DateTime the request was received.
    [RequestedDateTimeUtc <DateTime?>]: The DateTime of the request.
    [SizeInKb <Double?>]: The size of the logs in KB. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
    [Status <AppLogUploadState?>]: AppLogUploadStatus
  [ManagedDeviceName <String>]: Automatically generated name to identify a device. Can be overwritten to a user friendly name.
  [ManagedDeviceOwnerType <ManagedDeviceOwnerType?>]: Owner type of device.
  [ManagementAgent <ManagementAgentType?>]: managementAgentType
  [Notes <String>]: Notes on the device created by IT Admin. Default is null. To retrieve actual values GET call needs to be made, with device id and included in select parameter. Supports: $select. $Search is not supported.
  [PartnerReportedThreatState <ManagedDevicePartnerReportedHealthState?>]: Available health states for the Device Health API
  [Users <IMicrosoftGraphUser[]>]: The primary users associated with the managed device.
    [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AboutMe <String>]: A freeform text entry field for the user to describe themselves. Returned only on $select.
    [AccountEnabled <Boolean?>]: true if the account is enabled; otherwise, false. This property is required when a user is created. Returned only on $select. Supports $filter (eq, ne, not, and in).
    [Activities <IMicrosoftGraphUserActivity[]>]: The user's activities across devices. Read-only. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ActivationUrl <String>]: Required. URL used to launch the activity in the best native experience represented by the appId. Might launch a web-based app if no native app exists.
      [ActivitySourceHost <String>]: Required. URL for the domain representing the cross-platform identity mapping for the app. Mapping is stored either as a JSON file hosted on the domain or configurable via Windows Dev Center. The JSON file is named cross-platform-app-identifiers and is hosted at root of your HTTPS domain, either at the top level domain or include a sub domain. For example: https://contoso.com or https://myapp.contoso.com but NOT https://myapp.contoso.com/somepath. You must have a unique file and domain (or sub domain) per cross-platform app identity. For example, a separate file and domain is needed for Word vs. PowerPoint.
      [AppActivityId <String>]: Required. The unique activity ID in the context of the app - supplied by caller and immutable thereafter.
      [AppDisplayName <String>]: Optional. Short text description of the app used to generate the activity for use in cases when the app is not installed on the user’s local device.
      [ContentInfo <IMicrosoftGraphJson>]: Json
        [(Any) <Object>]: This indicates any property can be added to this object.
      [ContentUrl <String>]: Optional. Used in the event the content can be rendered outside of a native or web-based app experience (for example, a pointer to an item in an RSS feed).
      [CreatedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was created on the server.
      [ExpirationDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object expired on the server.
      [FallbackUrl <String>]: Optional. URL used to launch the activity in a web-based app, if available.
      [HistoryItems <IMicrosoftGraphActivityHistoryItem[]>]: Optional. NavigationProperty/Containment; navigation property to the activity's historyItems.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [ActiveDurationSeconds <Int32?>]: Optional. The duration of active user engagement. if not supplied, this is calculated from the startedDateTime and lastActiveDateTime.
        [Activity <IMicrosoftGraphUserActivity>]: userActivity
        [CreatedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was created on the server.
        [ExpirationDateTime <DateTime?>]: Optional. UTC DateTime when the historyItem will undergo hard-delete. Can be set by the client.
        [LastActiveDateTime <DateTime?>]: Optional. UTC DateTime when the historyItem (activity session) was last understood as active or finished - if null, historyItem status should be Ongoing.
        [LastModifiedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was modified on the server.
        [StartedDateTime <DateTime?>]: Required. UTC DateTime when the historyItem (activity session) was started. Required for timeline history.
        [Status <String>]: status
        [UserTimezone <String>]: Optional. The timezone in which the user's device used to generate the activity was located at activity creation time. Values supplied as Olson IDs in order to support cross-platform representation.
      [LastModifiedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was modified on the server.
      [Status <String>]: status
      [UserTimezone <String>]: Optional. The timezone in which the user's device used to generate the activity was located at activity creation time; values supplied as Olson IDs in order to support cross-platform representation.
      [VisualElements <IMicrosoftGraphVisualInfo>]: visualInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Attribution <IMicrosoftGraphImageInfo>]: imageInfo
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AddImageQuery <Boolean?>]: Optional; parameter used to indicate the server is able to render image dynamically in response to parameterization. For example – a high contrast image
          [AlternateText <String>]: Optional; alt-text accessible content for the image
          [AlternativeText <String>]: 
          [IconUrl <String>]: Optional; URI that points to an icon which represents the application used to generate the activity
        [BackgroundColor <String>]: Optional. Background color used to render the activity in the UI - brand color for the application source of the activity. Must be a valid hex color
        [Content <IMicrosoftGraphJson>]: Json
        [Description <String>]: Optional. Longer text description of the user's unique activity (example: document name, first sentence, and/or metadata)
        [DisplayText <String>]: Required. Short text description of the user's unique activity (for example, document name in cases where an activity refers to document creation)
    [AgeGroup <String>]: Sets the age group of the user. Allowed values: null, Minor, NotAdult and Adult. Refer to the legal age group property definitions for further information. Returned only on $select. Supports $filter (eq, ne, not, and in).
    [AgreementAcceptances <IMicrosoftGraphAgreementAcceptance[]>]: The user's terms of use acceptance statuses. Read-only. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AgreementFileId <String>]: The identifier of the agreement file accepted by the user.
      [AgreementId <String>]: The identifier of the agreement.
      [DeviceDisplayName <String>]: The display name of the device used for accepting the agreement.
      [DeviceId <String>]: The unique identifier of the device used for accepting the agreement. Supports $filter (eq) and eq for null values.
      [DeviceOSType <String>]: The operating system used to accept the agreement.
      [DeviceOSVersion <String>]: The operating system version of the device used to accept the agreement.
      [ExpirationDateTime <DateTime?>]: The expiration date time of the acceptance. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Supports $filter (eq, ge, le) and eq for null values.
      [RecordedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
      [State <String>]: agreementAcceptanceState
      [UserDisplayName <String>]: Display name of the user when the acceptance was recorded.
      [UserEmail <String>]: Email of the user when the acceptance was recorded.
      [UserId <String>]: The identifier of the user who accepted the agreement. Supports $filter (eq).
      [UserPrincipalName <String>]: UPN of the user when the acceptance was recorded.
    [AppRoleAssignments <IMicrosoftGraphAppRoleAssignment[]>]: Represents the app roles a user has been granted for an application. Supports $expand.
      [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AppRoleId <String>]: The identifier (id) for the app role which is assigned to the principal. This app role must be exposed in the appRoles property on the resource application's service principal (resourceId). If the resource application has not declared any app roles, a default app role ID of 00000000-0000-0000-0000-000000000000 can be specified to signal that the principal is assigned to the resource app without any specific app roles. Required on create.
      [CreatedDateTime <DateTime?>]: The time when the app role assignment was created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
      [PrincipalDisplayName <String>]: The display name of the user, group, or service principal that was granted the app role assignment. Read-only. Supports $filter (eq and startswith).
      [PrincipalId <String>]: The unique identifier (id) for the user, security group, or service principal being granted the app role. Security groups with dynamic memberships are supported. Required on create.
      [PrincipalType <String>]: The type of the assigned principal. This can either be User, Group, or ServicePrincipal. Read-only.
      [ResourceDisplayName <String>]: The display name of the resource app's service principal to which the assignment is made.
      [ResourceId <String>]: The unique identifier (id) for the resource service principal for which the assignment is made. Required on create. Supports $filter (eq only).
    [AssignedLicenses <IMicrosoftGraphAssignedLicense[]>]: The licenses that are assigned to the user, including inherited (group-based) licenses. This property doesn't differentiate directly-assigned and inherited licenses. Use the licenseAssignmentStates property to identify the directly-assigned and inherited licenses.  Not nullable. Returned only on $select. Supports $filter (eq, not, /$count eq 0, /$count ne 0).
      [DisabledPlans <String[]>]: A collection of the unique identifiers for plans that have been disabled.
      [SkuId <String>]: The unique identifier for the SKU.
    [AssignedPlans <IMicrosoftGraphAssignedPlan[]>]: The plans that are assigned to the user. Read-only. Not nullable. Returned only on $select. Supports $filter (eq and not).
      [AssignedDateTime <DateTime?>]: The date and time at which the plan was assigned. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
      [CapabilityStatus <String>]: Condition of the capability assignment. The possible values are Enabled, Warning, Suspended, Deleted, LockedOut. See a detailed description of each value.
      [Service <String>]: The name of the service; for example, exchange.
      [ServicePlanId <String>]: A GUID that identifies the service plan. For a complete list of GUIDs and their equivalent friendly service names, see Product names and service plan identifiers for licensing.
    [Authentication <IMicrosoftGraphAuthentication>]: authentication
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [EmailMethods <IMicrosoftGraphEmailAuthenticationMethod[]>]: The email address registered to a user for authentication.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [EmailAddress <String>]: The email address registered to this user.
      [Fido2Methods <IMicrosoftGraphFido2AuthenticationMethod[]>]: Represents the FIDO2 security keys registered to a user for authentication.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AaGuid <String>]: Authenticator Attestation GUID, an identifier that indicates the type (e.g. make and model) of the authenticator.
        [AttestationCertificates <String[]>]: The attestation certificate(s) attached to this security key.
        [AttestationLevel <String>]: attestationLevel
        [CreatedDateTime <DateTime?>]: The timestamp when this key was registered to the user.
        [DisplayName <String>]: The display name of the key as given by the user.
        [Model <String>]: The manufacturer-assigned model of the FIDO2 security key.
      [Methods <IMicrosoftGraphAuthenticationMethod[]>]: Represents all authentication methods registered to a user.
        [Id <String>]: The unique idenfier for an entity. Read-only.
      [MicrosoftAuthenticatorMethods <IMicrosoftGraphMicrosoftAuthenticatorAuthenticationMethod[]>]: The details of the Microsoft Authenticator app registered to a user for authentication.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedDateTime <DateTime?>]: The date and time that this app was registered. This property is null if the device is not registered for passwordless Phone Sign-In.
        [Device <IMicrosoftGraphDevice>]: device
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AccountEnabled <Boolean?>]: true if the account is enabled; otherwise, false. Required. Default is true.  Supports $filter (eq, ne, not, in). Only callers in Global Administrator and Cloud Device Administrator roles can set this property.
          [AlternativeSecurityIds <IMicrosoftGraphAlternativeSecurityId[]>]: For internal use only. Not nullable. Supports $filter (eq, not, ge, le).
            [IdentityProvider <String>]: For internal use only.
            [Key <Byte[]>]: For internal use only.
            [Type <Int32?>]: For internal use only.
          [ApproximateLastSignInDateTime <DateTime?>]: The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Supports $filter (eq, ne, not, ge, le, and eq on null values) and $orderBy.
          [ComplianceExpirationDateTime <DateTime?>]: The timestamp when the device is no longer deemed compliant. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [DeviceCategory <String>]: User-defined property set by Intune to automatically add devices to groups and simplify managing devices.
          [DeviceId <String>]: Unique identifier set by Azure Device Registration Service at the time of registration. This is an alternate key that can be used to reference the device object. Supports $filter (eq, ne, not, startsWith).
          [DeviceMetadata <String>]: For internal use only. Set to null.
          [DeviceOwnership <String>]: Ownership of the device. This property is set by Intune. Possible values are: unknown, company, personal.
          [DeviceVersion <Int32?>]: For internal use only.
          [DisplayName <String>]: The display name for the device. Required. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values), $search, and $orderBy.
          [EnrollmentProfileName <String>]: Enrollment profile applied to the device. For example, Apple Device Enrollment Profile, Device enrollment - Corporate device identifiers, or Windows Autopilot profile name. This property is set by Intune.
          [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the device. Read-only. Nullable.
            [Id <String>]: The unique idenfier for an entity. Read-only.
          [IsCompliant <Boolean?>]: true if the device complies with Mobile Device Management (MDM) policies; otherwise, false. Read-only. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices. Supports $filter (eq, ne, not).
          [IsManaged <Boolean?>]: true if the device is managed by a Mobile Device Management (MDM) app; otherwise, false. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices. Supports $filter (eq, ne, not).
          [MdmAppId <String>]: Application identifier used to register device into MDM. Read-only. Supports $filter (eq, ne, not, startsWith).
          [MemberOf <IMicrosoftGraphDirectoryObject[]>]: Groups and administrative units that this device is a member of. Read-only. Nullable. Supports $expand.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
          [OnPremisesLastSyncDateTime <DateTime?>]: The last time at which the object was synced with the on-premises directory. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z Read-only. Supports $filter (eq, ne, not, ge, le, in).
          [OnPremisesSyncEnabled <Boolean?>]: true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only. Supports $filter (eq, ne, not, in, and eq on null values).
          [OperatingSystem <String>]: The type of operating system on the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values).
          [OperatingSystemVersion <String>]: The version of the operating system on the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values).
          [PhysicalIds <String[]>]: For internal use only. Not nullable. Supports $filter (eq, not, ge, le, startsWith,/$count eq 0, /$count ne 0).
          [ProfileType <String>]: The profile type of the device. Possible values: RegisteredDevice (default), SecureVM, Printer, Shared, IoT.
          [RegisteredOwners <IMicrosoftGraphDirectoryObject[]>]: The user that cloud joined the device or registered their personal device. The registered owner is set at the time of registration. Read-only. Nullable. Supports $expand.
          [RegisteredUsers <IMicrosoftGraphDirectoryObject[]>]: Collection of registered users of the device. For cloud joined devices and registered personal devices, registered users are set to the same value as registered owners at the time of registration. Read-only. Nullable. Supports $expand.
          [RegistrationDateTime <DateTime?>]: Date and time of when the device was registered. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [SystemLabels <String[]>]: List of labels applied to the device by the system. Supports $filter (/$count eq 0, /$count ne 0).
          [TransitiveMemberOf <IMicrosoftGraphDirectoryObject[]>]: Groups and administrative units that the device is a member of. This operation is transitive. Supports $expand.
          [TrustType <String>]: Type of trust for the joined device. Read-only. Possible values:  Workplace (indicates bring your own personal devices), AzureAd (Cloud only joined devices), ServerAd (on-premises domain joined devices joined to Azure AD). For more details, see Introduction to device management in Azure Active Directory
        [DeviceTag <String>]: Tags containing app metadata.
        [DisplayName <String>]: The name of the device on which this app is registered.
        [PhoneAppVersion <String>]: Numerical version of this instance of the Authenticator app.
      [Operations <IMicrosoftGraphLongRunningOperation[]>]: Represents the status of a long-running operation.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedDateTime <DateTime?>]: The start time of the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        [LastActionDateTime <DateTime?>]: The time of the last action in the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        [ResourceLocation <String>]: URI of the resource that the operation is performed on.
        [Status <String>]: longRunningOperationStatus
        [StatusDetail <String>]: Details about the status of the operation.
      [PasswordMethods <IMicrosoftGraphPasswordAuthenticationMethod[]>]: Represents the password that's registered to a user for authentication. For security, the password itself will never be returned in the object, but action can be taken to reset a password.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedDateTime <DateTime?>]: The date and time when this password was last updated. This property is currently not populated. Read-only. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        [Password <String>]: For security, the password is always returned as null from a LIST or GET operation.
      [PhoneMethods <IMicrosoftGraphPhoneAuthenticationMethod[]>]: The phone numbers registered to a user for authentication.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [PhoneNumber <String>]: The phone number to text or call for authentication. Phone numbers use the format +{country code} {number}x{extension}, with extension optional. For example, +1 5555551234 or +1 5555551234x123 are valid. Numbers are rejected when creating or updating if they do not match the required format.
        [PhoneType <String>]: authenticationPhoneType
        [SmsSignInState <String>]: authenticationMethodSignInState
      [SoftwareOathMethods <IMicrosoftGraphSoftwareOathAuthenticationMethod[]>]: The software OATH TOTP applications registered to a user for authentication.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [SecretKey <String>]: The secret key of the method. Always returns null.
      [TemporaryAccessPassMethods <IMicrosoftGraphTemporaryAccessPassAuthenticationMethod[]>]: Represents a Temporary Access Pass registered to a user for authentication through time-limited passcodes.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedDateTime <DateTime?>]: The date and time when the Temporary Access Pass was created.
        [IsUsable <Boolean?>]: The state of the authentication method that indicates whether it's currently usable by the user.
        [IsUsableOnce <Boolean?>]: Determines whether the pass is limited to a one-time use. If true, the pass can be used once; if false, the pass can be used multiple times within the Temporary Access Pass lifetime.
        [LifetimeInMinutes <Int32?>]: The lifetime of the Temporary Access Pass in minutes starting at startDateTime. Must be between 10 and 43200 inclusive (equivalent to 30 days).
        [MethodUsabilityReason <String>]: Details about the usability state (isUsable). Reasons can include: EnabledByPolicy, DisabledByPolicy, Expired, NotYetValid, OneTimeUsed.
        [StartDateTime <DateTime?>]: The date and time when the Temporary Access Pass becomes available to use and when isUsable is true is enforced.
        [TemporaryAccessPass <String>]: The Temporary Access Pass used to authenticate. Returned only on creation of a new temporaryAccessPassAuthenticationMethod object; Hidden in subsequent read operations and returned as null with GET.
      [WindowsHelloForBusinessMethods <IMicrosoftGraphWindowsHelloForBusinessAuthenticationMethod[]>]: Represents the Windows Hello for Business authentication method registered to a user for authentication.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedDateTime <DateTime?>]: The date and time that this Windows Hello for Business key was registered.
        [Device <IMicrosoftGraphDevice>]: device
        [DisplayName <String>]: The name of the device on which Windows Hello for Business is registered
        [KeyStrength <String>]: authenticationMethodKeyStrength
    [AuthorizationInfo <IMicrosoftGraphAuthorizationInfo>]: authorizationInfo
      [(Any) <Object>]: This indicates any property can be added to this object.
      [CertificateUserIds <String[]>]: 
    [Birthday <DateTime?>]: The birthday of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned only on $select.
    [BusinessPhones <String[]>]: The telephone numbers for the user. NOTE: Although this is a string collection, only one number can be set for this property. Read-only for users synced from on-premises directory. Returned by default. Supports $filter (eq, not, ge, le, startsWith).
    [Calendar <IMicrosoftGraphCalendar>]: calendar
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AllowedOnlineMeetingProviders <String[]>]: Represent the online meeting service providers that can be used to create online meetings in this calendar. Possible values are: unknown, skypeForBusiness, skypeForConsumer, teamsForBusiness.
      [CalendarPermissions <IMicrosoftGraphCalendarPermission[]>]: The permissions of the users with whom the calendar is shared.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AllowedRoles <String[]>]: List of allowed sharing or delegating permission levels for the calendar. Possible values are: none, freeBusyRead, limitedRead, read, write, delegateWithoutPrivateEventAccess, delegateWithPrivateEventAccess, custom.
        [EmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Address <String>]: The email address of the person or entity.
          [Name <String>]: The display name of the person or entity.
        [IsInsideOrganization <Boolean?>]: True if the user in context (sharee or delegate) is inside the same organization as the calendar owner.
        [IsRemovable <Boolean?>]: True if the user can be removed from the list of sharees or delegates for the specified calendar, false otherwise. The 'My organization' user determines the permissions other people within your organization have to the given calendar. You cannot remove 'My organization' as a sharee to a calendar.
        [Role <String>]: calendarRoleType
      [CalendarView <IMicrosoftGraphEvent[]>]: The calendar view for the calendar. Navigation property. Read-only.
        [Categories <String[]>]: The categories associated with the item
        [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
        [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AllowNewTimeProposals <Boolean?>]: true if the meeting organizer allows invitees to propose a new time when responding; otherwise, false. Optional. Default is true.
        [Attachments <IMicrosoftGraphAttachment[]>]: The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [ContentType <String>]: The MIME type.
          [IsInline <Boolean?>]: true if the attachment is an inline attachment; otherwise, false.
          [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
          [Name <String>]: The attachment's file name.
          [Size <Int32?>]: The length of the attachment in bytes.
        [Attendees <IMicrosoftGraphAttendee[]>]: The collection of attendees for the event.
          [Type <String>]: attendeeType
          [EmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
          [ProposedNewTime <IMicrosoftGraphTimeSlot>]: timeSlot
            [(Any) <Object>]: This indicates any property can be added to this object.
            [End <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
              [(Any) <Object>]: This indicates any property can be added to this object.
              [DateTime <String>]: A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000).
              [TimeZone <String>]: Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values.
            [Start <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
          [Status <IMicrosoftGraphResponseStatus>]: responseStatus
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Response <String>]: responseType
            [Time <DateTime?>]: The date and time when the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [Body <IMicrosoftGraphItemBody>]: itemBody
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Content <String>]: The content of the item.
          [ContentType <String>]: bodyType
        [BodyPreview <String>]: The preview of the message associated with the event. It is in text format.
        [Calendar <IMicrosoftGraphCalendar>]: calendar
        [End <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the event. Nullable.
        [HasAttachments <Boolean?>]: Set to true if the event has attachments.
        [HideAttendees <Boolean?>]: When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. Default is false.
        [ICalUId <String>]: A unique identifier for an event across calendars. This ID is different for each occurrence in a recurring series. Read-only.
        [Importance <String>]: importance
        [Instances <IMicrosoftGraphEvent[]>]: The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions that have been modified, but does not include occurrences that have been cancelled from the series. Navigation property. Read-only. Nullable.
        [IsAllDay <Boolean?>]: 
        [IsCancelled <Boolean?>]: 
        [IsDraft <Boolean?>]: 
        [IsOnlineMeeting <Boolean?>]: 
        [IsOrganizer <Boolean?>]: 
        [IsReminderOn <Boolean?>]: 
        [Location <IMicrosoftGraphLocation>]: location
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Address <IMicrosoftGraphPhysicalAddress>]: physicalAddress
            [(Any) <Object>]: This indicates any property can be added to this object.
            [City <String>]: The city.
            [CountryOrRegion <String>]: The country or region. It's a free-format string value, for example, 'United States'.
            [PostalCode <String>]: The postal code.
            [State <String>]: The state.
            [Street <String>]: The street.
          [Coordinates <IMicrosoftGraphOutlookGeoCoordinates>]: outlookGeoCoordinates
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Accuracy <Double?>]: The accuracy of the latitude and longitude. As an example, the accuracy can be measured in meters, such as the latitude and longitude are accurate to within 50 meters.
            [Altitude <Double?>]: The altitude of the location.
            [AltitudeAccuracy <Double?>]: The accuracy of the altitude.
            [Latitude <Double?>]: The latitude of the location.
            [Longitude <Double?>]: The longitude of the location.
          [DisplayName <String>]: The name associated with the location.
          [LocationEmailAddress <String>]: Optional email address of the location.
          [LocationType <String>]: locationType
          [LocationUri <String>]: Optional URI representing the location.
          [UniqueId <String>]: For internal use only.
          [UniqueIdType <String>]: locationUniqueIdType
        [Locations <IMicrosoftGraphLocation[]>]: 
        [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the event. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Value <String[]>]: A collection of property values.
        [OnlineMeeting <IMicrosoftGraphOnlineMeetingInfo>]: onlineMeetingInfo
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ConferenceId <String>]: The ID of the conference.
          [JoinUrl <String>]: The external link that launches the online meeting. This is a URL that clients will launch into a browser and will redirect the user to join the meeting.
          [Phones <IMicrosoftGraphPhone[]>]: All of the phone numbers associated with this conference.
            [Language <String>]: 
            [Number <String>]: The phone number.
            [Region <String>]: 
            [Type <String>]: phoneType
          [QuickDial <String>]: The pre-formatted quickdial for this call.
          [TollFreeNumbers <String[]>]: The toll free numbers that can be used to join the conference.
          [TollNumber <String>]: The toll number that can be used to join the conference.
        [OnlineMeetingProvider <String>]: onlineMeetingProviderType
        [OnlineMeetingUrl <String>]: 
        [Organizer <IMicrosoftGraphRecipient>]: recipient
          [(Any) <Object>]: This indicates any property can be added to this object.
          [EmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
        [OriginalEndTimeZone <String>]: 
        [OriginalStart <DateTime?>]: 
        [OriginalStartTimeZone <String>]: 
        [Recurrence <IMicrosoftGraphPatternedRecurrence>]: patternedRecurrence
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Pattern <IMicrosoftGraphRecurrencePattern>]: recurrencePattern
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DayOfMonth <Int32?>]: The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly.
            [DaysOfWeek <String[]>]: A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly.
            [FirstDayOfWeek <String>]: dayOfWeek
            [Index <String>]: weekIndex
            [Interval <Int32?>]: The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required.
            [Month <Int32?>]: The month in which the event occurs.  This is a number from 1 to 12.
            [Type <String>]: recurrencePatternType
          [Range <IMicrosoftGraphRecurrenceRange>]: recurrenceRange
            [(Any) <Object>]: This indicates any property can be added to this object.
            [EndDate <DateTime?>]: The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate.
            [NumberOfOccurrences <Int32?>]: The number of times to repeat the event. Required and must be positive if type is numbered.
            [RecurrenceTimeZone <String>]: Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used.
            [StartDate <DateTime?>]: The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.
            [Type <String>]: recurrenceRangeType
        [ReminderMinutesBeforeStart <Int32?>]: 
        [ResponseRequested <Boolean?>]: 
        [ResponseStatus <IMicrosoftGraphResponseStatus>]: responseStatus
        [Sensitivity <String>]: sensitivity
        [SeriesMasterId <String>]: 
        [ShowAs <String>]: freeBusyStatus
        [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the event. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Value <String>]: A property value.
        [Start <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [Subject <String>]: 
        [TransactionId <String>]: 
        [Type <String>]: eventType
        [WebLink <String>]: 
      [CanEdit <Boolean?>]: true if the user can write to the calendar, false otherwise. This property is true for the user who created the calendar. This property is also true for a user who has been shared a calendar and granted write access.
      [CanShare <Boolean?>]: true if the user has the permission to share the calendar, false otherwise. Only the user who created the calendar can share it.
      [CanViewPrivateItems <Boolean?>]: true if the user can read calendar items that have been marked private, false otherwise.
      [ChangeKey <String>]: Identifies the version of the calendar object. Every time the calendar is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
      [Color <String>]: calendarColor
      [DefaultOnlineMeetingProvider <String>]: onlineMeetingProviderType
      [Events <IMicrosoftGraphEvent[]>]: The events in the calendar. Navigation property. Read-only.
      [HexColor <String>]: The calendar color, expressed in a hex color code of three hexadecimal values, each ranging from 00 to FF and representing the red, green, or blue components of the color in the RGB color space. If the user has never explicitly set a color for the calendar, this property is empty. Read-only.
      [IsDefaultCalendar <Boolean?>]: true if this is the default calendar where new events are created by default, false otherwise.
      [IsRemovable <Boolean?>]: Indicates whether this user calendar can be deleted from the user mailbox.
      [IsTallyingResponses <Boolean?>]: Indicates whether this user calendar supports tracking of meeting responses. Only meeting invites sent from users' primary calendars support tracking of meeting responses.
      [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the calendar. Read-only. Nullable.
      [Name <String>]: The calendar name.
      [Owner <IMicrosoftGraphEmailAddress>]: emailAddress
      [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the calendar. Read-only. Nullable.
    [CalendarGroups <IMicrosoftGraphCalendarGroup[]>]: The user's calendar groups. Read-only. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Calendars <IMicrosoftGraphCalendar[]>]: The calendars in the calendar group. Navigation property. Read-only. Nullable.
      [ChangeKey <String>]: Identifies the version of the calendar group. Every time the calendar group is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
      [ClassId <String>]: The class identifier. Read-only.
      [Name <String>]: The group name.
    [CalendarView <IMicrosoftGraphEvent[]>]: The calendar view for the calendar. Read-only. Nullable.
    [Calendars <IMicrosoftGraphCalendar[]>]: The user's calendars. Read-only. Nullable.
    [Chats <IMicrosoftGraphChat[]>]: 
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ChatType <String>]: chatType
      [CreatedDateTime <DateTime?>]: Date and time at which the chat was created. Read-only.
      [InstalledApps <IMicrosoftGraphTeamsAppInstallation[]>]: A collection of all the apps in the chat. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [ConsentedPermissionSet <IMicrosoftGraphTeamsAppPermissionSet>]: teamsAppPermissionSet
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ResourceSpecificPermissions <IMicrosoftGraphTeamsAppResourceSpecificPermission[]>]: A collection of resource-specific permissions.
            [PermissionType <String>]: teamsAppResourceSpecificPermissionType
            [PermissionValue <String>]: The name of the resource-specific permission.
        [TeamsApp <IMicrosoftGraphTeamsApp>]: teamsApp
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AppDefinitions <IMicrosoftGraphTeamsAppDefinition[]>]: The details for each version of the app.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Authorization <IMicrosoftGraphTeamsAppAuthorization>]: teamsAppAuthorization
              [(Any) <Object>]: This indicates any property can be added to this object.
              [RequiredPermissionSet <IMicrosoftGraphTeamsAppPermissionSet>]: teamsAppPermissionSet
            [Bot <IMicrosoftGraphTeamworkBot>]: teamworkBot
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
            [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Application <IMicrosoftGraphIdentity>]: identity
                [(Any) <Object>]: This indicates any property can be added to this object.
                [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
                [Id <String>]: Unique identifier for the identity.
              [Device <IMicrosoftGraphIdentity>]: identity
              [User <IMicrosoftGraphIdentity>]: identity
            [Description <String>]: Verbose description of the application.
            [DisplayName <String>]: The name of the app provided by the app developer.
            [LastModifiedDateTime <DateTime?>]: 
            [PublishingState <String>]: teamsAppPublishingState
            [ShortDescription <String>]: Short description of the application.
            [TeamsAppId <String>]: The ID from the Teams app manifest.
            [Version <String>]: The version number of the application.
          [DisplayName <String>]: The name of the catalog app provided by the app developer in the Microsoft Teams zip app package.
          [DistributionMethod <String>]: teamsAppDistributionMethod
          [ExternalId <String>]: The ID of the catalog provided by the app developer in the Microsoft Teams zip app package.
        [TeamsAppDefinition <IMicrosoftGraphTeamsAppDefinition>]: teamsAppDefinition
      [LastMessagePreview <IMicrosoftGraphChatMessageInfo>]: chatMessageInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Body <IMicrosoftGraphItemBody>]: itemBody
        [CreatedDateTime <DateTime?>]: Date time object representing the time at which message was created.
        [EventDetail <IMicrosoftGraphEventMessageDetail>]: eventMessageDetail
          [(Any) <Object>]: This indicates any property can be added to this object.
        [From <IMicrosoftGraphChatMessageFromIdentitySet>]: chatMessageFromIdentitySet
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Application <IMicrosoftGraphIdentity>]: identity
          [Device <IMicrosoftGraphIdentity>]: identity
          [User <IMicrosoftGraphIdentity>]: identity
        [IsDeleted <Boolean?>]: If set to true, the original message has been deleted.
        [MessageType <String>]: chatMessageType
      [LastUpdatedDateTime <DateTime?>]: Date and time at which the chat was renamed or list of members were last changed. Read-only.
      [Members <IMicrosoftGraphConversationMember[]>]: A collection of all the members in the chat. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DisplayName <String>]: The display name of the user.
        [Roles <String[]>]: The roles for that user. This property contains additional qualifiers only when relevant - for example, if the member has owner privileges, the roles property contains owner as one of the values. Similarly, if the member is an in-tenant guest, the roles property contains guest as one of the values. A basic member should not have any values specified in the roles property. An Out-of-tenant external member is assigned the owner role.
        [VisibleHistoryStartDateTime <DateTime?>]: The timestamp denoting how far back a conversation's history is shared with the conversation member. This property is settable only for members of a chat.
      [Messages <IMicrosoftGraphChatMessage[]>]: A collection of all the messages in the chat. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Attachments <IMicrosoftGraphChatMessageAttachment[]>]: References to attached objects like files, tabs, meetings etc.
          [Content <String>]: The content of the attachment. If the attachment is a rich card, set the property to the rich card object. This property and contentUrl are mutually exclusive.
          [ContentType <String>]: The media type of the content attachment. It can have the following values: reference: Attachment is a link to another file. Populate the contentURL with the link to the object.Any contentTypes supported by the Bot Framework's Attachment objectapplication/vnd.microsoft.card.codesnippet: A code snippet. application/vnd.microsoft.card.announcement: An announcement header.
          [ContentUrl <String>]: URL for the content of the attachment. Supported protocols: http, https, file and data.
          [Id <String>]: Read-only. Unique id of the attachment.
          [Name <String>]: Name of the attachment.
          [TeamsAppId <String>]: The ID of the Teams app that is associated with the attachment. The property is specifically used to attribute a Teams message card to the specified app.
          [ThumbnailUrl <String>]: URL to a thumbnail image that the channel can use if it supports using an alternative, smaller form of content or contentUrl. For example, if you set contentType to application/word and set contentUrl to the location of the Word document, you might include a thumbnail image that represents the document. The channel could display the thumbnail image instead of the document. When the user clicks the image, the channel would open the document.
        [Body <IMicrosoftGraphItemBody>]: itemBody
        [ChannelIdentity <IMicrosoftGraphChannelIdentity>]: channelIdentity
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ChannelId <String>]: The identity of the channel in which the message was posted.
          [TeamId <String>]: The identity of the team in which the message was posted.
        [ChatId <String>]: If the message was sent in a chat, represents the identity of the chat.
        [CreatedDateTime <DateTime?>]: Timestamp of when the chat message was created.
        [DeletedDateTime <DateTime?>]: Read only. Timestamp at which the chat message was deleted, or null if not deleted.
        [Etag <String>]: Read-only. Version number of the chat message.
        [EventDetail <IMicrosoftGraphEventMessageDetail>]: eventMessageDetail
        [From <IMicrosoftGraphChatMessageFromIdentitySet>]: chatMessageFromIdentitySet
        [HostedContents <IMicrosoftGraphChatMessageHostedContent[]>]: Content in a message hosted by Microsoft Teams - for example, images or code snippets.
          [ContentBytes <Byte[]>]: Write only. Bytes for the hosted content (such as images).
          [ContentType <String>]: Write only. Content type. sicj as image/png, image/jpg.
          [Id <String>]: The unique idenfier for an entity. Read-only.
        [Importance <String>]: chatMessageImportance
        [LastEditedDateTime <DateTime?>]: Read only. Timestamp when edits to the chat message were made. Triggers an 'Edited' flag in the Teams UI. If no edits are made the value is null.
        [LastModifiedDateTime <DateTime?>]: Read only. Timestamp when the chat message is created (initial setting) or modified, including when a reaction is added or removed.
        [Locale <String>]: Locale of the chat message set by the client. Always set to en-us.
        [Mentions <IMicrosoftGraphChatMessageMention[]>]: List of entities mentioned in the chat message. Supported entities are: user, bot, team, and channel.
          [Id <Int32?>]: Index of an entity being mentioned in the specified chatMessage. Matches the {index} value in the corresponding <at id='{index}'> tag in the message body.
          [MentionText <String>]: String used to represent the mention. For example, a user's display name, a team name.
          [Mentioned <IMicrosoftGraphChatMessageMentionedIdentitySet>]: chatMessageMentionedIdentitySet
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Application <IMicrosoftGraphIdentity>]: identity
            [Device <IMicrosoftGraphIdentity>]: identity
            [User <IMicrosoftGraphIdentity>]: identity
            [Conversation <IMicrosoftGraphTeamworkConversationIdentity>]: teamworkConversationIdentity
              [(Any) <Object>]: This indicates any property can be added to this object.
              [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
              [Id <String>]: Unique identifier for the identity.
              [ConversationIdentityType <String>]: teamworkConversationIdentityType
        [MessageHistory <IMicrosoftGraphChatMessageHistoryItem[]>]: List of activity history of a message item, including modification time and actions, such as reactionAdded, reactionRemoved, or reaction changes, on the message.
          [Actions <String>]: chatMessageActions
          [ModifiedDateTime <DateTime?>]: The date and time when the message was modified.
          [Reaction <IMicrosoftGraphChatMessageReaction>]: chatMessageReaction
            [(Any) <Object>]: This indicates any property can be added to this object.
            [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
            [ReactionType <String>]: Supported values are like, angry, sad, laugh, heart, surprised.
            [User <IMicrosoftGraphChatMessageReactionIdentitySet>]: chatMessageReactionIdentitySet
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Application <IMicrosoftGraphIdentity>]: identity
              [Device <IMicrosoftGraphIdentity>]: identity
              [User <IMicrosoftGraphIdentity>]: identity
        [MessageType <String>]: chatMessageType
        [PolicyViolation <IMicrosoftGraphChatMessagePolicyViolation>]: chatMessagePolicyViolation
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DlpAction <String>]: chatMessagePolicyViolationDlpActionTypes
          [JustificationText <String>]: Justification text provided by the sender of the message when overriding a policy violation.
          [PolicyTip <IMicrosoftGraphChatMessagePolicyViolationPolicyTip>]: chatMessagePolicyViolationPolicyTip
            [(Any) <Object>]: This indicates any property can be added to this object.
            [ComplianceUrl <String>]: The URL a user can visit to read about the data loss prevention policies for the organization. (ie, policies about what users shouldn't say in chats)
            [GeneralText <String>]: Explanatory text shown to the sender of the message.
            [MatchedConditionDescriptions <String[]>]: The list of improper data in the message that was detected by the data loss prevention app. Each DLP app defines its own conditions, examples include 'Credit Card Number' and 'Social Security Number'.
          [UserAction <String>]: chatMessagePolicyViolationUserActionTypes
          [VerdictDetails <String>]: chatMessagePolicyViolationVerdictDetailsTypes
        [Reactions <IMicrosoftGraphChatMessageReaction[]>]: Reactions for this chat message (for example, Like).
        [Replies <IMicrosoftGraphChatMessage[]>]: Replies for a specified message. Supports $expand for channel messages.
        [ReplyToId <String>]: Read-only. ID of the parent chat message or root chat message of the thread. (Only applies to chat messages in channels, not chats.)
        [Subject <String>]: The subject of the chat message, in plaintext.
        [Summary <String>]: Summary text of the chat message that could be used for push notifications and summary views or fall back views. Only applies to channel chat messages, not chat messages in a chat.
        [WebUrl <String>]: Read-only. Link to the message in Microsoft Teams.
      [OnlineMeetingInfo <IMicrosoftGraphTeamworkOnlineMeetingInfo>]: teamworkOnlineMeetingInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [CalendarEventId <String>]: The identifier of the calendar event associated with the meeting.
        [JoinWebUrl <String>]: The URL that users click to join or uniquely identify the meeting.
        [Organizer <IMicrosoftGraphTeamworkUserIdentity>]: teamworkUserIdentity
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
          [Id <String>]: Unique identifier for the identity.
          [UserIdentityType <String>]: teamworkUserIdentityType
      [PermissionGrants <IMicrosoftGraphResourceSpecificPermissionGrant[]>]: 
        [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [ClientAppId <String>]: ID of the service principal of the Azure AD app that has been granted access. Read-only.
        [ClientId <String>]: ID of the Azure AD app that has been granted access. Read-only.
        [Permission <String>]: The name of the resource-specific permission. Read-only.
        [PermissionType <String>]: The type of permission. Possible values are: Application, Delegated. Read-only.
        [ResourceAppId <String>]: ID of the Azure AD app that is hosting the resource. Read-only.
      [PinnedMessages <IMicrosoftGraphPinnedChatMessageInfo[]>]: A collection of all the pinned messages in the chat. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Message <IMicrosoftGraphChatMessage>]: chatMessage
      [Tabs <IMicrosoftGraphTeamsTab[]>]: A collection of all the tabs in the chat. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Configuration <IMicrosoftGraphTeamsTabConfiguration>]: teamsTabConfiguration
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ContentUrl <String>]: Url used for rendering tab contents in Teams. Required.
          [EntityId <String>]: Identifier for the entity hosted by the tab provider.
          [RemoveUrl <String>]: Url called by Teams client when a Tab is removed using the Teams Client.
          [WebsiteUrl <String>]: Url for showing tab contents outside of Teams.
        [DisplayName <String>]: Name of the tab.
        [TeamsApp <IMicrosoftGraphTeamsApp>]: teamsApp
        [WebUrl <String>]: Deep link URL of the tab instance. Read only.
      [TenantId <String>]: The identifier of the tenant in which the chat was created. Read-only.
      [Topic <String>]: (Optional) Subject or topic for the chat. Only available for group chats.
      [Viewpoint <IMicrosoftGraphChatViewpoint>]: chatViewpoint
        [(Any) <Object>]: This indicates any property can be added to this object.
        [IsHidden <Boolean?>]: Indicates whether the chat is hidden for the current user.
        [LastMessageReadDateTime <DateTime?>]: Represents the dateTime up until which the current user has read chatMessages in a specific chat.
      [WebUrl <String>]: The URL for the chat in Microsoft Teams. The URL should be treated as an opaque blob, and not parsed. Read-only.
    [City <String>]: The city in which the user is located. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [CompanyName <String>]: The company name which the user is associated. This property can be useful for describing the company that an external user comes from. The maximum length is 64 characters.Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [ConsentProvidedForMinor <String>]: Sets whether consent has been obtained for minors. Allowed values: null, Granted, Denied and NotRequired. Refer to the legal age group property definitions for further information. Returned only on $select. Supports $filter (eq, ne, not, and in).
    [ContactFolders <IMicrosoftGraphContactFolder[]>]: The user's contacts folders. Read-only. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ChildFolders <IMicrosoftGraphContactFolder[]>]: The collection of child folders in the folder. Navigation property. Read-only. Nullable.
      [Contacts <IMicrosoftGraphContact[]>]: The contacts in the folder. Navigation property. Read-only. Nullable.
        [Categories <String[]>]: The categories associated with the item
        [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
        [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AssistantName <String>]: The name of the contact's assistant.
        [Birthday <DateTime?>]: The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [BusinessAddress <IMicrosoftGraphPhysicalAddress>]: physicalAddress
        [BusinessHomePage <String>]: The business home page of the contact.
        [BusinessPhones <String[]>]: The contact's business phone numbers.
        [Children <String[]>]: The names of the contact's children.
        [CompanyName <String>]: The name of the contact's company.
        [Department <String>]: The contact's department.
        [DisplayName <String>]: The contact's display name. You can specify the display name in a create or update operation. Note that later updates to other properties may cause an automatically generated value to overwrite the displayName value you have specified. To preserve a pre-existing value, always include it as displayName in an update operation.
        [EmailAddresses <IMicrosoftGraphEmailAddress[]>]: The contact's email addresses.
        [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the contact. Read-only. Nullable.
        [FileAs <String>]: The name the contact is filed under.
        [Generation <String>]: The contact's generation.
        [GivenName <String>]: The contact's given name.
        [HomeAddress <IMicrosoftGraphPhysicalAddress>]: physicalAddress
        [HomePhones <String[]>]: The contact's home phone numbers.
        [ImAddresses <String[]>]: 
        [Initials <String>]: 
        [JobTitle <String>]: 
        [Manager <String>]: 
        [MiddleName <String>]: 
        [MobilePhone <String>]: 
        [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the contact. Read-only. Nullable.
        [NickName <String>]: 
        [OfficeLocation <String>]: 
        [OtherAddress <IMicrosoftGraphPhysicalAddress>]: physicalAddress
        [ParentFolderId <String>]: 
        [PersonalNotes <String>]: 
        [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Height <Int32?>]: The height of the photo. Read-only.
          [Width <Int32?>]: The width of the photo. Read-only.
        [Profession <String>]: 
        [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the contact. Read-only. Nullable.
        [SpouseName <String>]: 
        [Surname <String>]: 
        [Title <String>]: 
        [YomiCompanyName <String>]: 
        [YomiGivenName <String>]: 
        [YomiSurname <String>]: 
      [DisplayName <String>]: The folder's display name.
      [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the contactFolder. Read-only. Nullable.
      [ParentFolderId <String>]: The ID of the folder's parent folder.
      [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the contactFolder. Read-only. Nullable.
    [Contacts <IMicrosoftGraphContact[]>]: The user's contacts. Read-only. Nullable.
    [Country <String>]: The country/region in which the user is located; for example, US or UK. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [CreatedDateTime <DateTime?>]: The date and time the user was created, in ISO 8601 format and in UTC time. The value cannot be modified and is automatically populated when the entity is created. Nullable. For on-premises users, the value represents when they were first created in Azure AD. Property is null for some users created before June 2018 and on-premises users that were synced to Azure AD before June 2018. Read-only. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in).
    [CreatedObjects <IMicrosoftGraphDirectoryObject[]>]: Directory objects that were created by the user. Read-only. Nullable.
    [CreationType <String>]: Indicates whether the user account was created through one of the following methods:  As a regular school or work account (null). As an external account (Invitation). As a local account for an Azure Active Directory B2C tenant (LocalAccount). Through self-service sign-up by an internal user using email verification (EmailVerified). Through self-service sign-up by an external user signing up through a link that is part of a user flow (SelfServiceSignUp). Read-only.Returned only on $select. Supports $filter (eq, ne, not, in).
    [CustomSecurityAttributes <IMicrosoftGraphCustomSecurityAttributeValue>]: customSecurityAttributeValue
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Department <String>]: The name for the department in which the user works. Maximum length is 64 characters. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, and eq on null values).
    [DeviceEnrollmentLimit <Int32?>]: The limit on the maximum number of devices that the user is permitted to enroll. Allowed values are 5 or 1000.
    [DeviceManagementTroubleshootingEvents <IMicrosoftGraphDeviceManagementTroubleshootingEvent[]>]: The list of troubleshooting events for this user.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CorrelationId <String>]: Id used for tracing the failure in the service.
      [EventDateTime <DateTime?>]: Time when the event occurred .
    [DirectReports <IMicrosoftGraphDirectoryObject[]>]: The users and contacts that report to the user. (The users and contacts that have their manager property set to this user.) Read-only. Nullable. Supports $expand.
    [DisplayName <String>]: The name displayed in the address book for the user. This is usually the combination of the user's first name, middle initial and last name. This property is required when a user is created and it cannot be cleared during updates. Maximum length is 256 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values), $orderBy, and $search.
    [Drive <IMicrosoftGraphDrive>]: drive
      [(Any) <Object>]: This indicates any property can be added to this object.
      [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [CreatedByUser <IMicrosoftGraphUser>]: user
      [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
      [Description <String>]: Provides a user-visible description of the item. Optional.
      [ETag <String>]: ETag for the item. Read-only.
      [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [LastModifiedByUser <IMicrosoftGraphUser>]: user
      [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
      [Name <String>]: The name of the item. Read-write.
      [ParentReference <IMicrosoftGraphItemReference>]: itemReference
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DriveId <String>]: Unique identifier of the drive instance that contains the driveItem. Only returned if the item is located in a [drive][]. Read-only.
        [DriveType <String>]: Identifies the type of drive. Only returned if the item is located in a [drive][]. See [drive][] resource for values.
        [Id <String>]: Unique identifier of the driveItem in the drive or a listItem in a list. Read-only.
        [Name <String>]: The name of the item being referenced. Read-only.
        [Path <String>]: Path that can be used to navigate to the item. Read-only.
        [ShareId <String>]: A unique identifier for a shared resource that can be accessed via the [Shares][] API.
        [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ListId <String>]: The unique identifier (guid) for the item's list in SharePoint.
          [ListItemId <String>]: An integer identifier for the item within the containing list.
          [ListItemUniqueId <String>]: The unique identifier (guid) for the item within OneDrive for Business or a SharePoint site.
          [SiteId <String>]: The unique identifier (guid) for the item's site collection (SPSite).
          [SiteUrl <String>]: The SharePoint URL for the site that contains the item.
          [TenantId <String>]: The unique identifier (guid) for the tenancy.
          [WebId <String>]: The unique identifier (guid) for the item's site (SPWeb).
        [SiteId <String>]: For OneDrive for Business and SharePoint, this property represents the ID of the site that contains the parent document library of the driveItem resource or the parent list of the listItem resource. The value is the same as the id property of that [site][] resource. It is an opaque string that consists of three identifiers of the site. For OneDrive, this property is not populated.
      [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Bundles <IMicrosoftGraphDriveItem[]>]: Collection of [bundles][bundle] (albums and multi-select-shared sets of items). Only in personal OneDrive.
        [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [CreatedByUser <IMicrosoftGraphUser>]: user
        [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
        [Description <String>]: Provides a user-visible description of the item. Optional.
        [ETag <String>]: ETag for the item. Read-only.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [LastModifiedByUser <IMicrosoftGraphUser>]: user
        [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
        [Name <String>]: The name of the item. Read-write.
        [ParentReference <IMicrosoftGraphItemReference>]: itemReference
        [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Analytics <IMicrosoftGraphItemAnalytics>]: itemAnalytics
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AllTime <IMicrosoftGraphItemActivityStat>]: itemActivityStat
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Access <IMicrosoftGraphItemActionStat>]: itemActionStat
              [(Any) <Object>]: This indicates any property can be added to this object.
              [ActionCount <Int32?>]: The number of times the action took place. Read-only.
              [ActorCount <Int32?>]: The number of distinct actors that performed the action. Read-only.
            [Activities <IMicrosoftGraphItemActivity[]>]: Exposes the itemActivities represented in this itemActivityStat resource.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Access <IMicrosoftGraphAccessAction>]: accessAction
                [(Any) <Object>]: This indicates any property can be added to this object.
              [ActivityDateTime <DateTime?>]: Details about when the activity took place. Read-only.
              [Actor <IMicrosoftGraphIdentitySet>]: identitySet
              [DriveItem <IMicrosoftGraphDriveItem>]: driveItem
            [Create <IMicrosoftGraphItemActionStat>]: itemActionStat
            [Delete <IMicrosoftGraphItemActionStat>]: itemActionStat
            [Edit <IMicrosoftGraphItemActionStat>]: itemActionStat
            [EndDateTime <DateTime?>]: When the interval ends. Read-only.
            [IncompleteData <IMicrosoftGraphIncompleteData>]: incompleteData
              [(Any) <Object>]: This indicates any property can be added to this object.
              [MissingDataBeforeDateTime <DateTime?>]: The service does not have source data before the specified time.
              [WasThrottled <Boolean?>]: Some data was not recorded due to excessive activity.
            [IsTrending <Boolean?>]: Indicates whether the item is 'trending.' Read-only.
            [Move <IMicrosoftGraphItemActionStat>]: itemActionStat
            [StartDateTime <DateTime?>]: When the interval starts. Read-only.
          [ItemActivityStats <IMicrosoftGraphItemActivityStat[]>]: 
          [LastSevenDays <IMicrosoftGraphItemActivityStat>]: itemActivityStat
        [Audio <IMicrosoftGraphAudio>]: audio
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Album <String>]: The title of the album for this audio file.
          [AlbumArtist <String>]: The artist named on the album for the audio file.
          [Artist <String>]: The performing artist for the audio file.
          [Bitrate <Int64?>]: Bitrate expressed in kbps.
          [Composers <String>]: The name of the composer of the audio file.
          [Copyright <String>]: Copyright information for the audio file.
          [Disc <Int32?>]: The number of the disc this audio file came from.
          [DiscCount <Int32?>]: The total number of discs in this album.
          [Duration <Int64?>]: Duration of the audio file, expressed in milliseconds
          [Genre <String>]: The genre of this audio file.
          [HasDrm <Boolean?>]: Indicates if the file is protected with digital rights management.
          [IsVariableBitrate <Boolean?>]: Indicates if the file is encoded with a variable bitrate.
          [Title <String>]: The title of the audio file.
          [Track <Int32?>]: The number of the track on the original disc for this audio file.
          [TrackCount <Int32?>]: The total number of tracks on the original disc for this audio file.
          [Year <Int32?>]: The year the audio file was recorded.
        [Bundle <IMicrosoftGraphBundle>]: bundle
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Album <IMicrosoftGraphAlbum>]: album
            [(Any) <Object>]: This indicates any property can be added to this object.
            [CoverImageItemId <String>]: Unique identifier of the [driveItem][] that is the cover of the album.
          [ChildCount <Int32?>]: Number of children contained immediately within this container.
        [CTag <String>]: An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.
        [Children <IMicrosoftGraphDriveItem[]>]: Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
        [Content <Byte[]>]: The content stream, if the item represents a file.
        [Deleted <IMicrosoftGraphDeleted>]: deleted
          [(Any) <Object>]: This indicates any property can be added to this object.
          [State <String>]: Represents the state of the deleted item.
        [File <IMicrosoftGraphFile>]: file
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Hashes <IMicrosoftGraphHashes>]: hashes
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Crc32Hash <String>]: The CRC32 value of the file in little endian (if available). Read-only.
            [QuickXorHash <String>]: A proprietary hash of the file that can be used to determine if the contents of the file have changed (if available). Read-only.
            [Sha1Hash <String>]: SHA1 hash for the contents of the file (if available). Read-only.
            [Sha256Hash <String>]: SHA256 hash for the contents of the file (if available). Read-only.
          [MimeType <String>]: The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file was uploaded. Read-only.
          [ProcessingMetadata <Boolean?>]: 
        [FileSystemInfo <IMicrosoftGraphFileSystemInfo>]: fileSystemInfo
          [(Any) <Object>]: This indicates any property can be added to this object.
          [CreatedDateTime <DateTime?>]: The UTC date and time the file was created on a client.
          [LastAccessedDateTime <DateTime?>]: The UTC date and time the file was last accessed. Available for the recent file list only.
          [LastModifiedDateTime <DateTime?>]: The UTC date and time the file was last modified on a client.
        [Folder <IMicrosoftGraphFolder>]: folder
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ChildCount <Int32?>]: Number of children contained immediately within this container.
          [View <IMicrosoftGraphFolderView>]: folderView
            [(Any) <Object>]: This indicates any property can be added to this object.
            [SortBy <String>]: The method by which the folder should be sorted.
            [SortOrder <String>]: If true, indicates that items should be sorted in descending order. Otherwise, items should be sorted ascending.
            [ViewType <String>]: The type of view that should be used to represent the folder.
        [Image <IMicrosoftGraphImage>]: image
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Height <Int32?>]: Optional. Height of the image, in pixels. Read-only.
          [Width <Int32?>]: Optional. Width of the image, in pixels. Read-only.
        [ListItem <IMicrosoftGraphListItem>]: listItem
          [(Any) <Object>]: This indicates any property can be added to this object.
          [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [CreatedByUser <IMicrosoftGraphUser>]: user
          [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
          [Description <String>]: Provides a user-visible description of the item. Optional.
          [ETag <String>]: ETag for the item. Read-only.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [LastModifiedByUser <IMicrosoftGraphUser>]: user
          [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
          [Name <String>]: The name of the item. Read-write.
          [ParentReference <IMicrosoftGraphItemReference>]: itemReference
          [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Analytics <IMicrosoftGraphItemAnalytics>]: itemAnalytics
          [ContentType <IMicrosoftGraphContentTypeInfo>]: contentTypeInfo
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The ID of the content type.
            [Name <String>]: The name of the content type.
          [DocumentSetVersions <IMicrosoftGraphDocumentSetVersion[]>]: Version information for a document set version created by a user.
            [Fields <IMicrosoftGraphFieldValueSet>]: fieldValueSet
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
            [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [LastModifiedDateTime <DateTime?>]: Date and time the version was last modified. Read-only.
            [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Level <String>]: The state of publication for this document. Either published or checkout. Read-only.
              [VersionId <String>]: The unique identifier for the version that is visible to the current caller. Read-only.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Comment <String>]: Comment about the captured version.
            [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [CreatedDateTime <DateTime?>]: Date and time when this version was created.
            [Items <IMicrosoftGraphDocumentSetVersionItem[]>]: Items within the document set that are captured as part of this version.
              [ItemId <String>]: The unique identifier for the item.
              [Title <String>]: The title of the item.
              [VersionId <String>]: The version ID of the item.
            [ShouldCaptureMinorVersion <Boolean?>]: If true, minor versions of items are also captured; otherwise, only major versions will be captured. Default value is false.
          [DriveItem <IMicrosoftGraphDriveItem>]: driveItem
          [Fields <IMicrosoftGraphFieldValueSet>]: fieldValueSet
          [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
          [Versions <IMicrosoftGraphListItemVersion[]>]: The list of previous versions of the list item.
            [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [LastModifiedDateTime <DateTime?>]: Date and time the version was last modified. Read-only.
            [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Fields <IMicrosoftGraphFieldValueSet>]: fieldValueSet
        [Location <IMicrosoftGraphGeoCoordinates>]: geoCoordinates
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Altitude <Double?>]: Optional. The altitude (height), in feet,  above sea level for the item. Read-only.
          [Latitude <Double?>]: Optional. The latitude, in decimal, for the item. Read-only.
          [Longitude <Double?>]: Optional. The longitude, in decimal, for the item. Read-only.
        [Malware <IMicrosoftGraphMalware>]: malware
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Description <String>]: Contains the virus details for the malware facet.
        [Package <IMicrosoftGraphPackage>]: package
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Type <String>]: A string indicating the type of package. While oneNote is the only currently defined value, you should expect other package types to be returned and handle them accordingly.
        [PendingOperations <IMicrosoftGraphPendingOperations>]: pendingOperations
          [(Any) <Object>]: This indicates any property can be added to this object.
          [PendingContentUpdate <IMicrosoftGraphPendingContentUpdate>]: pendingContentUpdate
            [(Any) <Object>]: This indicates any property can be added to this object.
            [QueuedDateTime <DateTime?>]: Date and time the pending binary operation was queued in UTC time. Read-only.
        [Permissions <IMicrosoftGraphPermission[]>]: The set of permissions for the item. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [ExpirationDateTime <DateTime?>]: A format of yyyy-MM-ddTHH:mm:ssZ of DateTimeOffset indicates the expiration time of the permission. DateTime.MinValue indicates there is no expiration set for this permission. Optional.
          [GrantedTo <IMicrosoftGraphIdentitySet>]: identitySet
          [GrantedToIdentities <IMicrosoftGraphIdentitySet[]>]: 
          [GrantedToIdentitiesV2 <IMicrosoftGraphSharePointIdentitySet[]>]: For link type permissions, the details of the users to whom permission was granted. Read-only.
            [Application <IMicrosoftGraphIdentity>]: identity
            [Device <IMicrosoftGraphIdentity>]: identity
            [User <IMicrosoftGraphIdentity>]: identity
            [Group <IMicrosoftGraphIdentity>]: identity
            [SiteGroup <IMicrosoftGraphSharePointIdentity>]: sharePointIdentity
              [(Any) <Object>]: This indicates any property can be added to this object.
              [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
              [Id <String>]: Unique identifier for the identity.
              [LoginName <String>]: The sign in name of the SharePoint identity.
            [SiteUser <IMicrosoftGraphSharePointIdentity>]: sharePointIdentity
          [GrantedToV2 <IMicrosoftGraphSharePointIdentitySet>]: sharePointIdentitySet
          [HasPassword <Boolean?>]: Indicates whether the password is set for this permission. This property only appears in the response. Optional. Read-only. For OneDrive Personal only..
          [InheritedFrom <IMicrosoftGraphItemReference>]: itemReference
          [Invitation <IMicrosoftGraphSharingInvitation>]: sharingInvitation
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Email <String>]: The email address provided for the recipient of the sharing invitation. Read-only.
            [InvitedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [RedeemedBy <String>]: 
            [SignInRequired <Boolean?>]: If true the recipient of the invitation needs to sign in in order to access the shared item. Read-only.
          [Link <IMicrosoftGraphSharingLink>]: sharingLink
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Application <IMicrosoftGraphIdentity>]: identity
            [PreventsDownload <Boolean?>]: If true then the user can only use this link to view the item on the web, and cannot use it to download the contents of the item. Only for OneDrive for Business and SharePoint.
            [Scope <String>]: The scope of the link represented by this permission. Value anonymous indicates the link is usable by anyone, organization indicates the link is only usable for users signed into the same tenant.
            [Type <String>]: The type of the link created.
            [WebHtml <String>]: For embed links, this property contains the HTML code for an <iframe> element that will embed the item in a webpage.
            [WebUrl <String>]: A URL that opens the item in the browser on the OneDrive website.
          [Roles <String[]>]: The type of permission, for example, read. See below for the full list of roles. Read-only.
          [ShareId <String>]: A unique token that can be used to access this shared item via the shares API. Read-only.
        [Photo <IMicrosoftGraphPhoto>]: photo
          [(Any) <Object>]: This indicates any property can be added to this object.
          [CameraMake <String>]: Camera manufacturer. Read-only.
          [CameraModel <String>]: Camera model. Read-only.
          [ExposureDenominator <Double?>]: The denominator for the exposure time fraction from the camera. Read-only.
          [ExposureNumerator <Double?>]: The numerator for the exposure time fraction from the camera. Read-only.
          [FNumber <Double?>]: The F-stop value from the camera. Read-only.
          [FocalLength <Double?>]: The focal length from the camera. Read-only.
          [Iso <Int32?>]: The ISO value from the camera. Read-only.
          [Orientation <Int32?>]: The orientation value from the camera. Writable on OneDrive Personal.
          [TakenDateTime <DateTime?>]: Represents the date and time the photo was taken. Read-only.
        [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
        [RemoteItem <IMicrosoftGraphRemoteItem>]: remoteItem
          [(Any) <Object>]: This indicates any property can be added to this object.
          [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
          [File <IMicrosoftGraphFile>]: file
          [FileSystemInfo <IMicrosoftGraphFileSystemInfo>]: fileSystemInfo
          [Folder <IMicrosoftGraphFolder>]: folder
          [Id <String>]: Unique identifier for the remote item in its drive. Read-only.
          [Image <IMicrosoftGraphImage>]: image
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
          [Name <String>]: Optional. Filename of the remote item. Read-only.
          [Package <IMicrosoftGraphPackage>]: package
          [ParentReference <IMicrosoftGraphItemReference>]: itemReference
          [Shared <IMicrosoftGraphShared>]: shared
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Owner <IMicrosoftGraphIdentitySet>]: identitySet
            [Scope <String>]: Indicates the scope of how the item is shared: anonymous, organization, or users. Read-only.
            [SharedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [SharedDateTime <DateTime?>]: The UTC date and time when the item was shared. Read-only.
          [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
          [Size <Int64?>]: Size of the remote item. Read-only.
          [SpecialFolder <IMicrosoftGraphSpecialFolder>]: specialFolder
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Name <String>]: The unique identifier for this item in the /drive/special collection
          [Video <IMicrosoftGraphVideo>]: video
            [(Any) <Object>]: This indicates any property can be added to this object.
            [AudioBitsPerSample <Int32?>]: Number of audio bits per sample.
            [AudioChannels <Int32?>]: Number of audio channels.
            [AudioFormat <String>]: Name of the audio format (AAC, MP3, etc.).
            [AudioSamplesPerSecond <Int32?>]: Number of audio samples per second.
            [Bitrate <Int32?>]: Bit rate of the video in bits per second.
            [Duration <Int64?>]: Duration of the file in milliseconds.
            [FourCc <String>]: 'Four character code' name of the video format.
            [FrameRate <Double?>]: Frame rate of the video.
            [Height <Int32?>]: Height of the video, in pixels.
            [Width <Int32?>]: Width of the video, in pixels.
          [WebDavUrl <String>]: DAV compatible URL for the item.
          [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
        [Root <IMicrosoftGraphRoot>]: root
          [(Any) <Object>]: This indicates any property can be added to this object.
        [SearchResult <IMicrosoftGraphSearchResult>]: searchResult
          [(Any) <Object>]: This indicates any property can be added to this object.
          [OnClickTelemetryUrl <String>]: A callback URL that can be used to record telemetry information. The application should issue a GET on this URL if the user interacts with this item to improve the quality of results.
        [Shared <IMicrosoftGraphShared>]: shared
        [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
        [Size <Int64?>]: Size of the item in bytes. Read-only.
        [SpecialFolder <IMicrosoftGraphSpecialFolder>]: specialFolder
        [Subscriptions <IMicrosoftGraphSubscription[]>]: The set of subscriptions on the item. Only supported on the root of a drive.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [ApplicationId <String>]: Optional. Identifier of the application used to create the subscription. Read-only.
          [ChangeType <String>]: Required. Indicates the type of change in the subscribed resource that will raise a change notification. The supported values are: created, updated, deleted. Multiple values can be combined using a comma-separated list. Note:  Drive root item and list change notifications support only the updated changeType. User and group change notifications support updated and deleted changeType. Use updated to receive notifications when user or group is created, updated or soft deleted.  Use deleted to receive notifications when user or group is permanently deleted.
          [ClientState <String>]: Required. Specifies the value of the clientState property sent by the service in each change notification. The maximum length is 128 characters. The client can check that the change notification came from the service by comparing the value of the clientState property sent with the subscription with the value of the clientState property received with each change notification.
          [CreatorId <String>]: Optional. Identifier of the user or service principal that created the subscription. If the app used delegated permissions to create the subscription, this field contains the id of the signed-in user the app called on behalf of. If the app used application permissions, this field contains the id of the service principal corresponding to the app. Read-only.
          [EncryptionCertificate <String>]: Optional. A base64-encoded representation of a certificate with a public key used to encrypt resource data in change notifications. Optional but required when includeResourceData is true.
          [EncryptionCertificateId <String>]: Optional. A custom app-provided identifier to help identify the certificate needed to decrypt resource data.
          [ExpirationDateTime <DateTime?>]: Required. Specifies the date and time when the webhook subscription expires. The time is in UTC, and can be an amount of time from subscription creation that varies for the resource subscribed to. For the maximum supported subscription length of time, see the table below.
          [IncludeResourceData <Boolean?>]: Optional. When set to true, change notifications include resource data (such as content of a chat message).
          [LatestSupportedTlsVersion <String>]: Optional. Specifies the latest version of Transport Layer Security (TLS) that the notification endpoint, specified by notificationUrl, supports. The possible values are: v10, v11, v12, v13. For subscribers whose notification endpoint supports a version lower than the currently recommended version (TLS 1.2), specifying this property by a set timeline allows them to temporarily use their deprecated version of TLS before completing their upgrade to TLS 1.2. For these subscribers, not setting this property per the timeline would result in subscription operations failing. For subscribers whose notification endpoint already supports TLS 1.2, setting this property is optional. In such cases, Microsoft Graph defaults the property to v1_2.
          [LifecycleNotificationUrl <String>]: Required for Teams resources if  the expirationDateTime value is more than 1 hour from now; optional otherwise. The URL of the endpoint that receives lifecycle notifications, including subscriptionRemoved, reauthorizationRequired, and missed notifications. This URL must make use of the HTTPS protocol. For more information, see Reduce missing subscriptions and change notifications.
          [NotificationQueryOptions <String>]: Optional. OData query options for specifying value for the targeting resource. Clients receive notifications when resource reaches the state matching the query options provided here. With this new property in the subscription creation payload along with all existing properties, Webhooks will deliver notifications whenever a resource reaches the desired state mentioned in the notificationQueryOptions property. For example, when the print job is completed or when a print job resource isFetchable property value becomes true etc.  Supported only for Universal Print Service. For more information, see Subscribe to change notifications from cloud printing APIs using Microsoft Graph.
          [NotificationUrl <String>]: Required. The URL of the endpoint that will receive the change notifications. This URL must make use of the HTTPS protocol. Any query string parameter included in the notificationUrl property will be included in the HTTP POST request when Microsoft Graph sends the change notifications.
          [NotificationUrlAppId <String>]: Optional. The app ID that the subscription service can use to generate the validation token. This allows the client to validate the authenticity of the notification received.
          [Resource <String>]: Required. Specifies the resource that will be monitored for changes. Do not include the base URL (https://graph.microsoft.com/v1.0/). See the possible resource path values for each supported resource.
        [Thumbnails <IMicrosoftGraphThumbnailSet[]>]: Collection containing [ThumbnailSet][] objects associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Large <IMicrosoftGraphThumbnail>]: thumbnail
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Content <Byte[]>]: The content stream for the thumbnail.
            [Height <Int32?>]: The height of the thumbnail, in pixels.
            [SourceItemId <String>]: The unique identifier of the item that provided the thumbnail. This is only available when a folder thumbnail is requested.
            [Url <String>]: The URL used to fetch the thumbnail content.
            [Width <Int32?>]: The width of the thumbnail, in pixels.
          [Medium <IMicrosoftGraphThumbnail>]: thumbnail
          [Small <IMicrosoftGraphThumbnail>]: thumbnail
          [Source <IMicrosoftGraphThumbnail>]: thumbnail
        [Versions <IMicrosoftGraphDriveItemVersion[]>]: The list of previous versions of the item. For more info, see [getting previous versions][]. Read-only. Nullable.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [LastModifiedDateTime <DateTime?>]: Date and time the version was last modified. Read-only.
          [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Content <Byte[]>]: The content stream for this version of the item.
          [Size <Int64?>]: Indicates the size of the content stream for this version of the item.
        [Video <IMicrosoftGraphVideo>]: video
        [WebDavUrl <String>]: WebDAV compatible URL for the item.
        [Workbook <IMicrosoftGraphWorkbook>]: workbook
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Application <IMicrosoftGraphWorkbookApplication>]: workbookApplication
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [CalculationMode <String>]: Returns the calculation mode used in the workbook. Possible values are: Automatic, AutomaticExceptTables, Manual.
          [Comments <IMicrosoftGraphWorkbookComment[]>]: Represents a collection of comments in a workbook.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Content <String>]: The content of comment.
            [ContentType <String>]: Indicates the type for the comment.
            [Replies <IMicrosoftGraphWorkbookCommentReply[]>]: 
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Content <String>]: The content of a comment reply.
              [ContentType <String>]: Indicates the type for the comment reply.
          [Functions <IMicrosoftGraphWorkbookFunctions>]: workbookFunctions
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
          [Names <IMicrosoftGraphWorkbookNamedItem[]>]: Represents a collection of workbooks scoped named items (named ranges and constants). Read-only.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Comment <String>]: Represents the comment associated with this name.
            [Name <String>]: The name of the object. Read-only.
            [Scope <String>]: Indicates whether the name is scoped to the workbook or to a specific worksheet. Read-only.
            [Type <String>]: Indicates what type of reference is associated with the name. The possible values are: String, Integer, Double, Boolean, Range. Read-only.
            [Value <IMicrosoftGraphJson>]: Json
            [Visible <Boolean?>]: Specifies whether the object is visible or not.
            [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Charts <IMicrosoftGraphWorkbookChart[]>]: Returns collection of charts that are part of the worksheet. Read-only.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Axes <IMicrosoftGraphWorkbookChartAxes>]: workbookChartAxes
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [CategoryAxis <IMicrosoftGraphWorkbookChartAxis>]: workbookChartAxis
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Format <IMicrosoftGraphWorkbookChartAxisFormat>]: workbookChartAxisFormat
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                        [(Any) <Object>]: This indicates any property can be added to this object.
                        [Id <String>]: The unique idenfier for an entity. Read-only.
                        [Bold <Boolean?>]: Represents the bold status of font.
                        [Color <String>]: HTML color code representation of the text color. E.g. #FF0000 represents Red.
                        [Italic <Boolean?>]: Represents the italic status of the font.
                        [Name <String>]: Font name (e.g. 'Calibri')
                        [Size <Double?>]: Size of the font (e.g. 11)
                        [Underline <String>]: Type of underline applied to the font. The possible values are: None, Single.
                      [Line <IMicrosoftGraphWorkbookChartLineFormat>]: workbookChartLineFormat
                        [(Any) <Object>]: This indicates any property can be added to this object.
                        [Id <String>]: The unique idenfier for an entity. Read-only.
                        [Color <String>]: HTML color code representing the color of lines in the chart.
                    [MajorGridlines <IMicrosoftGraphWorkbookChartGridlines>]: workbookChartGridlines
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Format <IMicrosoftGraphWorkbookChartGridlinesFormat>]: workbookChartGridlinesFormat
                        [(Any) <Object>]: This indicates any property can be added to this object.
                        [Id <String>]: The unique idenfier for an entity. Read-only.
                        [Line <IMicrosoftGraphWorkbookChartLineFormat>]: workbookChartLineFormat
                      [Visible <Boolean?>]: Boolean value representing if the axis gridlines are visible or not.
                    [MajorUnit <IMicrosoftGraphJson>]: Json
                    [Maximum <IMicrosoftGraphJson>]: Json
                    [Minimum <IMicrosoftGraphJson>]: Json
                    [MinorGridlines <IMicrosoftGraphWorkbookChartGridlines>]: workbookChartGridlines
                    [MinorUnit <IMicrosoftGraphJson>]: Json
                    [Title <IMicrosoftGraphWorkbookChartAxisTitle>]: workbookChartAxisTitle
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Format <IMicrosoftGraphWorkbookChartAxisTitleFormat>]: workbookChartAxisTitleFormat
                        [(Any) <Object>]: This indicates any property can be added to this object.
                        [Id <String>]: The unique idenfier for an entity. Read-only.
                        [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                      [Text <String>]: Represents the axis title.
                      [Visible <Boolean?>]: A boolean that specifies the visibility of an axis title.
                  [SeriesAxis <IMicrosoftGraphWorkbookChartAxis>]: workbookChartAxis
                  [ValueAxis <IMicrosoftGraphWorkbookChartAxis>]: workbookChartAxis
                [DataLabels <IMicrosoftGraphWorkbookChartDataLabels>]: workbookChartDataLabels
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Format <IMicrosoftGraphWorkbookChartDataLabelFormat>]: workbookChartDataLabelFormat
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                  [Position <String>]: DataLabelPosition value that represents the position of the data label. The possible values are: None, Center, InsideEnd, InsideBase, OutsideEnd, Left, Right, Top, Bottom, BestFit, Callout.
                  [Separator <String>]: String representing the separator used for the data labels on a chart.
                  [ShowBubbleSize <Boolean?>]: Boolean value representing if the data label bubble size is visible or not.
                  [ShowCategoryName <Boolean?>]: Boolean value representing if the data label category name is visible or not.
                  [ShowLegendKey <Boolean?>]: Boolean value representing if the data label legend key is visible or not.
                  [ShowPercentage <Boolean?>]: Boolean value representing if the data label percentage is visible or not.
                  [ShowSeriesName <Boolean?>]: Boolean value representing if the data label series name is visible or not.
                  [ShowValue <Boolean?>]: Boolean value representing if the data label value is visible or not.
                [Format <IMicrosoftGraphWorkbookChartAreaFormat>]: workbookChartAreaFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                  [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                [Height <Double?>]: Represents the height, in points, of the chart object.
                [Left <Double?>]: The distance, in points, from the left side of the chart to the worksheet origin.
                [Legend <IMicrosoftGraphWorkbookChartLegend>]: workbookChartLegend
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Format <IMicrosoftGraphWorkbookChartLegendFormat>]: workbookChartLegendFormat
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                    [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                  [Overlay <Boolean?>]: Boolean value for whether the chart legend should overlap with the main body of the chart.
                  [Position <String>]: Represents the position of the legend on the chart. The possible values are: Top, Bottom, Left, Right, Corner, Custom.
                  [Visible <Boolean?>]: A boolean value the represents the visibility of a ChartLegend object.
                [Name <String>]: Represents the name of a chart object.
                [Series <IMicrosoftGraphWorkbookChartSeries[]>]: Represents either a single series or collection of series in the chart. Read-only.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Format <IMicrosoftGraphWorkbookChartSeriesFormat>]: workbookChartSeriesFormat
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                    [Line <IMicrosoftGraphWorkbookChartLineFormat>]: workbookChartLineFormat
                  [Name <String>]: Represents the name of a series in a chart.
                  [Points <IMicrosoftGraphWorkbookChartPoint[]>]: Represents a collection of all points in the series. Read-only.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Format <IMicrosoftGraphWorkbookChartPointFormat>]: workbookChartPointFormat
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                    [Value <IMicrosoftGraphJson>]: Json
                [Title <IMicrosoftGraphWorkbookChartTitle>]: workbookChartTitle
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Format <IMicrosoftGraphWorkbookChartTitleFormat>]: workbookChartTitleFormat
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                    [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                  [Overlay <Boolean?>]: Boolean value representing if the chart title will overlay the chart or not.
                  [Text <String>]: Represents the title text of a chart.
                  [Visible <Boolean?>]: A boolean value the represents the visibility of a chart title object.
                [Top <Double?>]: Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).
                [Width <Double?>]: Represents the width, in points, of the chart object.
                [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
              [Name <String>]: The display name of the worksheet.
              [Names <IMicrosoftGraphWorkbookNamedItem[]>]: Returns collection of names that are associated with the worksheet. Read-only.
              [PivotTables <IMicrosoftGraphWorkbookPivotTable[]>]: Collection of PivotTables that are part of the worksheet.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Name <String>]: Name of the PivotTable.
                [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
              [Position <Int32?>]: The zero-based position of the worksheet within the workbook.
              [Protection <IMicrosoftGraphWorkbookWorksheetProtection>]: workbookWorksheetProtection
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Options <IMicrosoftGraphWorkbookWorksheetProtectionOptions>]: workbookWorksheetProtectionOptions
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [AllowAutoFilter <Boolean?>]: Represents the worksheet protection option of allowing using auto filter feature.
                  [AllowDeleteColumns <Boolean?>]: Represents the worksheet protection option of allowing deleting columns.
                  [AllowDeleteRows <Boolean?>]: Represents the worksheet protection option of allowing deleting rows.
                  [AllowFormatCells <Boolean?>]: Represents the worksheet protection option of allowing formatting cells.
                  [AllowFormatColumns <Boolean?>]: Represents the worksheet protection option of allowing formatting columns.
                  [AllowFormatRows <Boolean?>]: Represents the worksheet protection option of allowing formatting rows.
                  [AllowInsertColumns <Boolean?>]: Represents the worksheet protection option of allowing inserting columns.
                  [AllowInsertHyperlinks <Boolean?>]: Represents the worksheet protection option of allowing inserting hyperlinks.
                  [AllowInsertRows <Boolean?>]: Represents the worksheet protection option of allowing inserting rows.
                  [AllowPivotTables <Boolean?>]: Represents the worksheet protection option of allowing using pivot table feature.
                  [AllowSort <Boolean?>]: Represents the worksheet protection option of allowing using sort feature.
                [Protected <Boolean?>]: Indicates if the worksheet is protected.  Read-only.
              [Tables <IMicrosoftGraphWorkbookTable[]>]: Collection of tables that are part of the worksheet. Read-only.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Columns <IMicrosoftGraphWorkbookTableColumn[]>]: Represents a collection of all the columns in the table. Read-only.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Filter <IMicrosoftGraphWorkbookFilter>]: workbookFilter
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Criteria <IMicrosoftGraphWorkbookFilterCriteria>]: workbookFilterCriteria
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Color <String>]: 
                      [Criterion1 <String>]: 
                      [Criterion2 <String>]: 
                      [DynamicCriteria <String>]: 
                      [FilterOn <String>]: 
                      [Icon <IMicrosoftGraphWorkbookIcon>]: workbookIcon
                        [(Any) <Object>]: This indicates any property can be added to this object.
                        [Index <Int32?>]: Represents the index of the icon in the given set.
                        [Set <String>]: Represents the set that the icon is part of. The possible values are: Invalid, ThreeArrows, ThreeArrowsGray, ThreeFlags, ThreeTrafficLights1, ThreeTrafficLights2, ThreeSigns, ThreeSymbols, ThreeSymbols2, FourArrows, FourArrowsGray, FourRedToBlack, FourRating, FourTrafficLights, FiveArrows, FiveArrowsGray, FiveRating, FiveQuarters, ThreeStars, ThreeTriangles, FiveBoxes.
                      [Operator <String>]: 
                      [Values <IMicrosoftGraphJson>]: Json
                  [Index <Int32?>]: Returns the index number of the column within the columns collection of the table. Zero-indexed. Read-only.
                  [Name <String>]: Returns the name of the table column.
                  [Values <IMicrosoftGraphJson>]: Json
                [HighlightFirstColumn <Boolean?>]: Indicates whether the first column contains special formatting.
                [HighlightLastColumn <Boolean?>]: Indicates whether the last column contains special formatting.
                [LegacyId <String>]: Legacy Id used in older Excle clients. The value of the identifier remains the same even when the table is renamed. This property should be interpreted as an opaque string value and should not be parsed to any other type. Read-only.
                [Name <String>]: Name of the table.
                [Rows <IMicrosoftGraphWorkbookTableRow[]>]: Represents a collection of all the rows in the table. Read-only.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Index <Int32?>]: Returns the index number of the row within the rows collection of the table. Zero-indexed. Read-only.
                  [Values <IMicrosoftGraphJson>]: Json
                [ShowBandedColumns <Boolean?>]: Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.
                [ShowBandedRows <Boolean?>]: Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.
                [ShowFilterButton <Boolean?>]: Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.
                [ShowHeaders <Boolean?>]: Indicates whether the header row is visible or not. This value can be set to show or remove the header row.
                [ShowTotals <Boolean?>]: Indicates whether the total row is visible or not. This value can be set to show or remove the total row.
                [Sort <IMicrosoftGraphWorkbookTableSort>]: workbookTableSort
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Fields <IMicrosoftGraphWorkbookSortField[]>]: Represents the current conditions used to last sort the table. Read-only.
                    [Ascending <Boolean?>]: Represents whether the sorting is done in an ascending fashion.
                    [Color <String>]: Represents the color that is the target of the condition if the sorting is on font or cell color.
                    [DataOption <String>]: Represents additional sorting options for this field. The possible values are: Normal, TextAsNumber.
                    [Icon <IMicrosoftGraphWorkbookIcon>]: workbookIcon
                    [Key <Int32?>]: Represents the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row).
                    [SortOn <String>]: Represents the type of sorting of this condition. The possible values are: Value, CellColor, FontColor, Icon.
                  [MatchCase <Boolean?>]: Represents whether the casing impacted the last sort of the table. Read-only.
                  [Method <String>]: Represents Chinese character ordering method last used to sort the table. The possible values are: PinYin, StrokeCount. Read-only.
                [Style <String>]: Constant value that represents the Table style. The possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified.
                [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
              [Visibility <String>]: The Visibility of the worksheet. The possible values are: Visible, Hidden, VeryHidden.
          [Operations <IMicrosoftGraphWorkbookOperation[]>]: The status of workbook operations. Getting an operation collection is not supported, but you can get the status of a long-running operation if the Location header is returned in the response. Read-only.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Error <IMicrosoftGraphWorkbookOperationError>]: workbookOperationError
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Code <String>]: The error code.
              [InnerError <IMicrosoftGraphWorkbookOperationError>]: workbookOperationError
              [Message <String>]: The error message.
            [ResourceLocation <String>]: The resource URI for the result.
            [Status <String>]: workbookOperationStatus
          [Tables <IMicrosoftGraphWorkbookTable[]>]: Represents a collection of tables associated with the workbook. Read-only.
          [Worksheets <IMicrosoftGraphWorkbookWorksheet[]>]: Represents a collection of worksheets associated with the workbook. Read-only.
      [DriveType <String>]: Describes the type of drive represented by this resource. OneDrive personal drives will return personal. OneDrive for Business will return business. SharePoint document libraries will return documentLibrary. Read-only.
      [Following <IMicrosoftGraphDriveItem[]>]: The list of items the user is following. Only in OneDrive for Business.
      [Items <IMicrosoftGraphDriveItem[]>]: All items contained in the drive. Read-only. Nullable.
      [List <IMicrosoftGraphList>]: list
        [(Any) <Object>]: This indicates any property can be added to this object.
        [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [CreatedByUser <IMicrosoftGraphUser>]: user
        [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
        [Description <String>]: Provides a user-visible description of the item. Optional.
        [ETag <String>]: ETag for the item. Read-only.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [LastModifiedByUser <IMicrosoftGraphUser>]: user
        [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
        [Name <String>]: The name of the item. Read-write.
        [ParentReference <IMicrosoftGraphItemReference>]: itemReference
        [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Columns <IMicrosoftGraphColumnDefinition[]>]: The collection of field definitions for this list.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Boolean <IMicrosoftGraphBooleanColumn>]: booleanColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
          [Calculated <IMicrosoftGraphCalculatedColumn>]: calculatedColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Format <String>]: For dateTime output types, the format of the value. Possible values are: dateOnly or dateTime.
            [Formula <String>]: The formula used to compute the value for this column.
            [OutputType <String>]: The output type used to format values in this column. Possible values are: boolean, currency, dateTime, number, or text.
          [Choice <IMicrosoftGraphChoiceColumn>]: choiceColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [AllowTextEntry <Boolean?>]: If true, allows custom values that aren't in the configured choices.
            [Choices <String[]>]: The list of values available for this column.
            [DisplayAs <String>]: How the choices are to be presented in the UX. Must be one of checkBoxes, dropDownMenu, or radioButtons
          [ColumnGroup <String>]: For site columns, the name of the group this column belongs to. Helps organize related columns.
          [ContentApprovalStatus <IMicrosoftGraphContentApprovalStatusColumn>]: contentApprovalStatusColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
          [Currency <IMicrosoftGraphCurrencyColumn>]: currencyColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Locale <String>]: Specifies the locale from which to infer the currency symbol.
          [DateTime <IMicrosoftGraphDateTimeColumn>]: dateTimeColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DisplayAs <String>]: How the value should be presented in the UX. Must be one of default, friendly, or standard. See below for more details. If unspecified, treated as default.
            [Format <String>]: Indicates whether the value should be presented as a date only or a date and time. Must be one of dateOnly or dateTime
          [DefaultValue <IMicrosoftGraphDefaultColumnValue>]: defaultColumnValue
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Formula <String>]: The formula used to compute the default value for the column.
            [Value <String>]: The direct value to use as the default value for the column.
          [Description <String>]: The user-facing description of the column.
          [DisplayName <String>]: The user-facing name of the column.
          [EnforceUniqueValues <Boolean?>]: If true, no two list items may have the same value for this column.
          [Geolocation <IMicrosoftGraphGeolocationColumn>]: geolocationColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
          [Hidden <Boolean?>]: Specifies whether the column is displayed in the user interface.
          [HyperlinkOrPicture <IMicrosoftGraphHyperlinkOrPictureColumn>]: hyperlinkOrPictureColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [IsPicture <Boolean?>]: Specifies whether the display format used for URL columns is an image or a hyperlink.
          [Indexed <Boolean?>]: Specifies whether the column values can be used for sorting and searching.
          [IsDeletable <Boolean?>]: Indicates whether this column can be deleted.
          [IsReorderable <Boolean?>]: Indicates whether values in the column can be reordered. Read-only.
          [IsSealed <Boolean?>]: Specifies whether the column can be changed.
          [Lookup <IMicrosoftGraphLookupColumn>]: lookupColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [AllowMultipleValues <Boolean?>]: Indicates whether multiple values can be selected from the source.
            [AllowUnlimitedLength <Boolean?>]: Indicates whether values in the column should be able to exceed the standard limit of 255 characters.
            [ColumnName <String>]: The name of the lookup source column.
            [ListId <String>]: The unique identifier of the lookup source list.
            [PrimaryLookupColumnId <String>]: If specified, this column is a secondary lookup, pulling an additional field from the list item looked up by the primary lookup. Use the list item looked up by the primary as the source for the column named here.
          [Name <String>]: The API-facing name of the column as it appears in the [fields][] on a [listItem][]. For the user-facing name, see displayName.
          [Number <IMicrosoftGraphNumberColumn>]: numberColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DecimalPlaces <String>]: How many decimal places to display. See below for information about the possible values.
            [DisplayAs <String>]: How the value should be presented in the UX. Must be one of number or percentage. If unspecified, treated as number.
            [Maximum <Double?>]: The maximum permitted value.
            [Minimum <Double?>]: The minimum permitted value.
          [PersonOrGroup <IMicrosoftGraphPersonOrGroupColumn>]: personOrGroupColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [AllowMultipleSelection <Boolean?>]: Indicates whether multiple values can be selected from the source.
            [ChooseFromType <String>]: Whether to allow selection of people only, or people and groups. Must be one of peopleAndGroups or peopleOnly.
            [DisplayAs <String>]: How to display the information about the person or group chosen. See below.
          [PropagateChanges <Boolean?>]: If 'true', changes to this column will be propagated to lists that implement the column.
          [ReadOnly <Boolean?>]: Specifies whether the column values can be modified.
          [Required <Boolean?>]: Specifies whether the column value isn't optional.
          [SourceColumn <IMicrosoftGraphColumnDefinition>]: columnDefinition
          [SourceContentType <IMicrosoftGraphContentTypeInfo>]: contentTypeInfo
          [Term <IMicrosoftGraphTermColumn>]: termColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [AllowMultipleValues <Boolean?>]: Specifies whether the column will allow more than one value.
            [ParentTerm <IMicrosoftGraphTermStoreTerm>]: term
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Children <IMicrosoftGraphTermStoreTerm[]>]: Children of current term.
              [CreatedDateTime <DateTime?>]: Date and time of term creation. Read-only.
              [Descriptions <IMicrosoftGraphTermStoreLocalizedDescription[]>]: Description about term that is dependent on the languageTag.
                [Description <String>]: The description in the localized language.
                [LanguageTag <String>]: The language tag for the label.
              [Labels <IMicrosoftGraphTermStoreLocalizedLabel[]>]: Label metadata for a term.
                [IsDefault <Boolean?>]: Indicates whether the label is the default label.
                [LanguageTag <String>]: The language tag for the label.
                [Name <String>]: The name of the label.
              [LastModifiedDateTime <DateTime?>]: Last date and time of term modification. Read-only.
              [Properties <IMicrosoftGraphKeyValue[]>]: Collection of properties on the term.
                [Key <String>]: Key for the key-value pair.
                [Value <String>]: Value for the key-value pair.
              [Relations <IMicrosoftGraphTermStoreRelation[]>]: To indicate which terms are related to the current term as either pinned or reused.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [FromTerm <IMicrosoftGraphTermStoreTerm>]: term
                [Relationship <String>]: relationType
                [Set <IMicrosoftGraphTermStoreSet>]: set
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Children <IMicrosoftGraphTermStoreTerm[]>]: Children terms of set in term [store].
                  [CreatedDateTime <DateTime?>]: Date and time of set creation. Read-only.
                  [Description <String>]: Description that gives details on the term usage.
                  [LocalizedNames <IMicrosoftGraphTermStoreLocalizedName[]>]: Name of the set for each languageTag.
                    [LanguageTag <String>]: The language tag for the label.
                    [Name <String>]: The name in the localized language.
                  [ParentGroup <IMicrosoftGraphTermStoreGroup>]: group
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [CreatedDateTime <DateTime?>]: Date and time of the group creation. Read-only.
                    [Description <String>]: Description that gives details on the term usage.
                    [DisplayName <String>]: Name of the group.
                    [ParentSiteId <String>]: ID of the parent site of this group.
                    [Scope <String>]: termGroupScope
                    [Sets <IMicrosoftGraphTermStoreSet[]>]: All sets under the group in a term [store].
                  [Properties <IMicrosoftGraphKeyValue[]>]: Custom properties for the set.
                  [Relations <IMicrosoftGraphTermStoreRelation[]>]: Indicates which terms have been pinned or reused directly under the set.
                  [Terms <IMicrosoftGraphTermStoreTerm[]>]: All the terms under the set.
                [ToTerm <IMicrosoftGraphTermStoreTerm>]: term
              [Set <IMicrosoftGraphTermStoreSet>]: set
            [ShowFullyQualifiedName <Boolean?>]: Specifies whether to display the entire term path or only the term label.
            [TermSet <IMicrosoftGraphTermStoreSet>]: set
          [Text <IMicrosoftGraphTextColumn>]: textColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [AllowMultipleLines <Boolean?>]: Whether to allow multiple lines of text.
            [AppendChangesToExistingText <Boolean?>]: Whether updates to this column should replace existing text, or append to it.
            [LinesForEditing <Int32?>]: The size of the text box.
            [MaxLength <Int32?>]: The maximum number of characters for the value.
            [TextType <String>]: The type of text being stored. Must be one of plain or richText
          [Thumbnail <IMicrosoftGraphThumbnailColumn>]: thumbnailColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
          [Type <String>]: columnTypes
          [Validation <IMicrosoftGraphColumnValidation>]: columnValidation
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DefaultLanguage <String>]: Default BCP 47 language tag for the description.
            [Descriptions <IMicrosoftGraphDisplayNameLocalization[]>]: Localized messages that explain what is needed for this column's value to be considered valid. User will be prompted with this message if validation fails.
              [DisplayName <String>]: If present, the value of this field contains the displayName string that has been set for the language present in the languageTag field.
              [LanguageTag <String>]: Provides the language culture-code and friendly name of the language that the displayName field has been provided in.
            [Formula <String>]: The formula to validate column value. For examples, see Examples of common formulas in lists.
        [ContentTypes <IMicrosoftGraphContentType[]>]: The collection of content types present in this list.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AssociatedHubsUrls <String[]>]: List of canonical URLs for hub sites with which this content type is associated to. This will contain all hub sites where this content type is queued to be enforced or is already enforced. Enforcing a content type means that the content type will be applied to the lists in the enforced sites.
          [Base <IMicrosoftGraphContentType>]: contentType
          [BaseTypes <IMicrosoftGraphContentType[]>]: The collection of content types that are ancestors of this content type.
          [ColumnLinks <IMicrosoftGraphColumnLink[]>]: The collection of columns that are required by this content type.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Name <String>]: The name of the column  in this content type.
          [ColumnPositions <IMicrosoftGraphColumnDefinition[]>]: Column order information in a content type.
          [Columns <IMicrosoftGraphColumnDefinition[]>]: The collection of column definitions for this contentType.
          [Description <String>]: The descriptive text for the item.
          [DocumentSet <IMicrosoftGraphDocumentSet>]: documentSet
            [(Any) <Object>]: This indicates any property can be added to this object.
            [AllowedContentTypes <IMicrosoftGraphContentTypeInfo[]>]: Content types allowed in document set.
            [DefaultContents <IMicrosoftGraphDocumentSetContent[]>]: Default contents of document set.
              [ContentType <IMicrosoftGraphContentTypeInfo>]: contentTypeInfo
              [FileName <String>]: Name of the file in resource folder that should be added as a default content or a template in the document set.
              [FolderName <String>]: Folder name in which the file will be placed when a new document set is created in the library.
            [PropagateWelcomePageChanges <Boolean?>]: Specifies whether to push welcome page changes to inherited content types.
            [SharedColumns <IMicrosoftGraphColumnDefinition[]>]: 
            [ShouldPrefixNameToFile <Boolean?>]: Indicates whether to add the name of the document set to each file name.
            [WelcomePageColumns <IMicrosoftGraphColumnDefinition[]>]: 
            [WelcomePageUrl <String>]: Welcome page absolute URL.
          [DocumentTemplate <IMicrosoftGraphDocumentSetContent>]: documentSetContent
          [Group <String>]: The name of the group this content type belongs to. Helps organize related content types.
          [Hidden <Boolean?>]: Indicates whether the content type is hidden in the list's 'New' menu.
          [InheritedFrom <IMicrosoftGraphItemReference>]: itemReference
          [IsBuiltIn <Boolean?>]: Specifies if a content type is a built-in content type.
          [Name <String>]: The name of the content type.
          [Order <IMicrosoftGraphContentTypeOrder>]: contentTypeOrder
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Default <Boolean?>]: Indicates whether this is the default content type
            [Position <Int32?>]: Specifies the position in which the content type appears in the selection UI.
          [ParentId <String>]: The unique identifier of the content type.
          [PropagateChanges <Boolean?>]: If true, any changes made to the content type will be pushed to inherited content types and lists that implement the content type.
          [ReadOnly <Boolean?>]: If true, the content type can't be modified unless this value is first set to false.
          [Sealed <Boolean?>]: If true, the content type can't be modified by users or through push-down operations. Only site collection administrators can seal or unseal content types.
        [DisplayName <String>]: The displayable title of the list.
        [Drive <IMicrosoftGraphDrive>]: drive
        [Items <IMicrosoftGraphListItem[]>]: All items contained in the list.
        [List <IMicrosoftGraphListInfo>]: listInfo
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ContentTypesEnabled <Boolean?>]: If true, indicates that content types are enabled for this list.
          [Hidden <Boolean?>]: If true, indicates that the list is not normally visible in the SharePoint user experience.
          [Template <String>]: An enumerated value that represents the base list template used in creating the list. Possible values include documentLibrary, genericList, task, survey, announcements, contacts, and more.
        [Operations <IMicrosoftGraphRichLongRunningOperation[]>]: The collection of long-running operations on the list.
          [CreatedDateTime <DateTime?>]: The start time of the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
          [LastActionDateTime <DateTime?>]: The time of the last action in the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
          [ResourceLocation <String>]: URI of the resource that the operation is performed on.
          [Status <String>]: longRunningOperationStatus
          [StatusDetail <String>]: Details about the status of the operation.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Error <IMicrosoftGraphPublicError>]: publicError
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Code <String>]: Represents the error code.
            [Details <IMicrosoftGraphPublicErrorDetail[]>]: Details of the error.
              [Code <String>]: The error code.
              [Message <String>]: The error message.
              [Target <String>]: The target of the error.
            [InnerError <IMicrosoftGraphPublicInnerError>]: publicInnerError
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Code <String>]: The error code.
              [Details <IMicrosoftGraphPublicErrorDetail[]>]: A collection of error details.
              [Message <String>]: The error message.
              [Target <String>]: The target of the error.
            [Message <String>]: A non-localized message for the developer.
            [Target <String>]: The target of the error.
          [PercentageComplete <Int32?>]: A value between 0 and 100 that indicates the progress of the operation.
          [ResourceId <String>]: The unique identifier for the result.
          [Type <String>]: The type of the operation.
        [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
        [Subscriptions <IMicrosoftGraphSubscription[]>]: The set of subscriptions on the list.
        [System <IMicrosoftGraphSystemFacet>]: systemFacet
          [(Any) <Object>]: This indicates any property can be added to this object.
      [Owner <IMicrosoftGraphIdentitySet>]: identitySet
      [Quota <IMicrosoftGraphQuota>]: quota
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Deleted <Int64?>]: Total space consumed by files in the recycle bin, in bytes. Read-only.
        [Remaining <Int64?>]: Total space remaining before reaching the quota limit, in bytes. Read-only.
        [State <String>]: Enumeration value that indicates the state of the storage space. Read-only.
        [StoragePlanInformation <IMicrosoftGraphStoragePlanInformation>]: storagePlanInformation
          [(Any) <Object>]: This indicates any property can be added to this object.
          [UpgradeAvailable <Boolean?>]: Indicates whether there are higher storage quota plans available. Read-only.
        [Total <Int64?>]: Total allowed storage space, in bytes. Read-only.
        [Used <Int64?>]: Total space used, in bytes. Read-only.
      [Root <IMicrosoftGraphDriveItem>]: driveItem
      [SharePointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
      [Special <IMicrosoftGraphDriveItem[]>]: Collection of common folders available in OneDrive. Read-only. Nullable.
      [System <IMicrosoftGraphSystemFacet>]: systemFacet
    [Drives <IMicrosoftGraphDrive[]>]: A collection of drives available for this user. Read-only.
    [EmployeeExperience <IMicrosoftGraphEmployeeExperienceUser>]: employeeExperienceUser
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [LearningCourseActivities <IMicrosoftGraphLearningCourseActivity[]>]: 
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CompletedDateTime <DateTime?>]: Date and time when the assignment was completed. Optional.
        [CompletionPercentage <Int32?>]: The percentage completion value of the course activity. Optional.
        [ExternalcourseActivityId <String>]: A course activity ID generated by the provider. Optional.
        [LearnerUserId <String>]: The user ID of the learner to whom the activity is assigned. Required.
        [LearningContentId <String>]: The ID of the learning content created in Viva Learning. Required.
        [LearningProviderId <String>]: The registration ID of the provider. Required.
        [Status <String>]: courseStatus
    [EmployeeHireDate <DateTime?>]: The date and time when the user was hired or will start work in case of a future hire. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in).
    [EmployeeId <String>]: The employee identifier assigned to the user by the organization. The maximum length is 16 characters. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
    [EmployeeLeaveDateTime <DateTime?>]: The date and time when the user left or will leave the organization. To read this property, the calling app must be assigned the User-LifeCycleInfo.Read.All permission. To write this property, the calling app must be assigned the User.Read.All and User-LifeCycleInfo.ReadWrite.All permissions. To read this property in delegated scenarios, the admin needs one of the following Azure AD roles: Lifecycle Workflows Administrator, Global Reader, or Global Administrator. To write this property in delegated scenarios, the admin needs the Global Administrator role. Supports $filter (eq, ne, not , ge, le, in). For more information, see Configure the employeeLeaveDateTime property for a user.
    [EmployeeOrgData <IMicrosoftGraphEmployeeOrgData>]: employeeOrgData
      [(Any) <Object>]: This indicates any property can be added to this object.
      [CostCenter <String>]: The cost center associated with the user. Returned only on $select. Supports $filter.
      [Division <String>]: The name of the division in which the user works. Returned only on $select. Supports $filter.
    [EmployeeType <String>]: Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith).
    [Events <IMicrosoftGraphEvent[]>]: The user's events. Default is to show Events under the Default Calendar. Read-only. Nullable.
    [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the user. Read-only. Supports $expand. Nullable.
    [ExternalUserState <String>]: For an external user invited to the tenant using the invitation API, this property represents the invited user's invitation status. For invited users, the state can be PendingAcceptance or Accepted, or null for all other users. Returned only on $select. Supports $filter (eq, ne, not , in).
    [ExternalUserStateChangeDateTime <DateTime?>]: Shows the timestamp for the latest change to the externalUserState property. Returned only on $select. Supports $filter (eq, ne, not , in).
    [FaxNumber <String>]: The fax number of the user. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
    [FollowedSites <IMicrosoftGraphSite[]>]: 
      [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [CreatedByUser <IMicrosoftGraphUser>]: user
      [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
      [Description <String>]: Provides a user-visible description of the item. Optional.
      [ETag <String>]: ETag for the item. Read-only.
      [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [LastModifiedByUser <IMicrosoftGraphUser>]: user
      [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
      [Name <String>]: The name of the item. Read-write.
      [ParentReference <IMicrosoftGraphItemReference>]: itemReference
      [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Analytics <IMicrosoftGraphItemAnalytics>]: itemAnalytics
      [Columns <IMicrosoftGraphColumnDefinition[]>]: The collection of column definitions reusable across lists under this site.
      [ContentTypes <IMicrosoftGraphContentType[]>]: The collection of content types defined for this site.
      [DisplayName <String>]: The full title for the site. Read-only.
      [Drive <IMicrosoftGraphDrive>]: drive
      [Drives <IMicrosoftGraphDrive[]>]: The collection of drives (document libraries) under this site.
      [Error <IMicrosoftGraphPublicError>]: publicError
      [ExternalColumns <IMicrosoftGraphColumnDefinition[]>]: 
      [Items <IMicrosoftGraphBaseItem[]>]: Used to address any item contained in this site. This collection can't be enumerated.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [CreatedByUser <IMicrosoftGraphUser>]: user
        [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
        [Description <String>]: Provides a user-visible description of the item. Optional.
        [ETag <String>]: ETag for the item. Read-only.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [LastModifiedByUser <IMicrosoftGraphUser>]: user
        [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
        [Name <String>]: The name of the item. Read-write.
        [ParentReference <IMicrosoftGraphItemReference>]: itemReference
        [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
      [Lists <IMicrosoftGraphList[]>]: The collection of lists under this site.
      [Onenote <IMicrosoftGraphOnenote>]: onenote
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Notebooks <IMicrosoftGraphNotebook[]>]: The collection of OneNote notebooks that are owned by the user or group. Read-only. Nullable.
          [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [DisplayName <String>]: The name of the notebook.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [LastModifiedDateTime <DateTime?>]: The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [Self <String>]: The endpoint where you can get details about the page. Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [IsDefault <Boolean?>]: Indicates whether this is the user's default notebook. Read-only.
          [IsShared <Boolean?>]: Indicates whether the notebook is shared. If true, the contents of the notebook can be seen by people other than the owner. Read-only.
          [Links <IMicrosoftGraphNotebookLinks>]: notebookLinks
            [(Any) <Object>]: This indicates any property can be added to this object.
            [OneNoteClientUrl <IMicrosoftGraphExternalLink>]: externalLink
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Href <String>]: The URL of the link.
            [OneNoteWebUrl <IMicrosoftGraphExternalLink>]: externalLink
          [SectionGroups <IMicrosoftGraphSectionGroup[]>]: The section groups in the notebook. Read-only. Nullable.
            [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [DisplayName <String>]: The name of the notebook.
            [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [LastModifiedDateTime <DateTime?>]: The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
            [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
            [Self <String>]: The endpoint where you can get details about the page. Read-only.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [ParentNotebook <IMicrosoftGraphNotebook>]: notebook
            [ParentSectionGroup <IMicrosoftGraphSectionGroup>]: sectionGroup
            [SectionGroups <IMicrosoftGraphSectionGroup[]>]: The section groups in the section. Read-only. Nullable.
            [SectionGroupsUrl <String>]: The URL for the sectionGroups navigation property, which returns all the section groups in the section group. Read-only.
            [Sections <IMicrosoftGraphOnenoteSection[]>]: The sections in the section group. Read-only. Nullable.
              [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
              [DisplayName <String>]: The name of the notebook.
              [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
              [LastModifiedDateTime <DateTime?>]: The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
              [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
              [Self <String>]: The endpoint where you can get details about the page. Read-only.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [IsDefault <Boolean?>]: Indicates whether this is the user's default section. Read-only.
              [Links <IMicrosoftGraphSectionLinks>]: sectionLinks
                [(Any) <Object>]: This indicates any property can be added to this object.
                [OneNoteClientUrl <IMicrosoftGraphExternalLink>]: externalLink
                [OneNoteWebUrl <IMicrosoftGraphExternalLink>]: externalLink
              [Pages <IMicrosoftGraphOnenotePage[]>]: The collection of pages in the section.  Read-only. Nullable.
                [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
                [Self <String>]: The endpoint where you can get details about the page. Read-only.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Content <Byte[]>]: The page's HTML content.
                [ContentUrl <String>]: The URL for the page's HTML content.  Read-only.
                [CreatedByAppId <String>]: The unique identifier of the application that created the page. Read-only.
                [LastModifiedDateTime <DateTime?>]: The date and time when the page was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
                [Level <Int32?>]: The indentation level of the page. Read-only.
                [Links <IMicrosoftGraphPageLinks>]: pageLinks
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [OneNoteClientUrl <IMicrosoftGraphExternalLink>]: externalLink
                  [OneNoteWebUrl <IMicrosoftGraphExternalLink>]: externalLink
                [Order <Int32?>]: The order of the page within its parent section. Read-only.
                [ParentNotebook <IMicrosoftGraphNotebook>]: notebook
                [ParentSection <IMicrosoftGraphOnenoteSection>]: onenoteSection
                [Title <String>]: The title of the page.
                [UserTags <String[]>]: 
              [PagesUrl <String>]: The pages endpoint where you can get details for all the pages in the section. Read-only.
              [ParentNotebook <IMicrosoftGraphNotebook>]: notebook
              [ParentSectionGroup <IMicrosoftGraphSectionGroup>]: sectionGroup
            [SectionsUrl <String>]: The URL for the sections navigation property, which returns all the sections in the section group. Read-only.
          [SectionGroupsUrl <String>]: The URL for the sectionGroups navigation property, which returns all the section groups in the notebook. Read-only.
          [Sections <IMicrosoftGraphOnenoteSection[]>]: The sections in the notebook. Read-only. Nullable.
          [SectionsUrl <String>]: The URL for the sections navigation property, which returns all the sections in the notebook. Read-only.
          [UserRole <String>]: onenoteUserRole
        [Operations <IMicrosoftGraphOnenoteOperation[]>]: The status of OneNote operations. Getting an operations collection is not supported, but you can get the status of long-running operations if the Operation-Location header is returned in the response. Read-only. Nullable.
          [CreatedDateTime <DateTime?>]: The start time of the operation.
          [LastActionDateTime <DateTime?>]: The time of the last action of the operation.
          [Status <String>]: operationStatus
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Error <IMicrosoftGraphOnenoteOperationError>]: onenoteOperationError
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Code <String>]: The error code.
            [Message <String>]: The error message.
          [PercentComplete <String>]: The operation percent complete if the operation is still in running status.
          [ResourceId <String>]: The resource id.
          [ResourceLocation <String>]: The resource URI for the object. For example, the resource URI for a copied page or section.
        [Pages <IMicrosoftGraphOnenotePage[]>]: The pages in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
        [Resources <IMicrosoftGraphOnenoteResource[]>]: The image and other file resources in OneNote pages. Getting a resources collection is not supported, but you can get the binary content of a specific resource. Read-only. Nullable.
          [Self <String>]: The endpoint where you can get details about the page. Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Content <Byte[]>]: The content stream
          [ContentUrl <String>]: The URL for downloading the content
        [SectionGroups <IMicrosoftGraphSectionGroup[]>]: The section groups in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
        [Sections <IMicrosoftGraphOnenoteSection[]>]: The sections in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
      [Operations <IMicrosoftGraphRichLongRunningOperation[]>]: The collection of long-running operations on the site.
      [Permissions <IMicrosoftGraphPermission[]>]: The permissions associated with the site. Nullable.
      [Root <IMicrosoftGraphRoot>]: root
      [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
      [SiteCollection <IMicrosoftGraphSiteCollection>]: siteCollection
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DataLocationCode <String>]: The geographic region code for where this site collection resides. Read-only.
        [Hostname <String>]: The hostname for the site collection. Read-only.
        [Root <IMicrosoftGraphRoot>]: root
      [Sites <IMicrosoftGraphSite[]>]: The collection of the sub-sites under this site.
      [TermStore <IMicrosoftGraphTermStore>]: store
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DefaultLanguageTag <String>]: Default language of the term store.
        [Groups <IMicrosoftGraphTermStoreGroup[]>]: Collection of all groups available in the term store.
        [LanguageTags <String[]>]: List of languages for the term store.
        [Sets <IMicrosoftGraphTermStoreSet[]>]: Collection of all sets available in the term store. This relationship can only be used to load a specific term set.
      [TermStores <IMicrosoftGraphTermStore[]>]: The collection of termStores under this site.
    [GivenName <String>]: The given name (first name) of the user. Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
    [HireDate <DateTime?>]: The hire date of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned only on $select.  Note: This property is specific to SharePoint Online. We recommend using the native employeeHireDate property to set and update hire date values using Microsoft Graph APIs.
    [Identities <IMicrosoftGraphObjectIdentity[]>]: Represents the identities that can be used to sign in to this user account. An identity can be provided by Microsoft (also known as a local account), by organizations, or by social identity providers such as Facebook, Google, and Microsoft, and tied to a user account. May contain multiple items with the same signInType value. Returned only on $select. Supports $filter (eq) including on null values, only where the signInType is not userPrincipalName.
      [Issuer <String>]: Specifies the issuer of the identity, for example facebook.com.For local accounts (where signInType is not federated), this property is the local B2C tenant default domain name, for example contoso.onmicrosoft.com.For external users from other Azure AD organization, this will be the domain of the federated organization, for example contoso.com.Supports $filter. 512 character limit.
      [IssuerAssignedId <String>]: Specifies the unique identifier assigned to the user by the issuer. The combination of issuer and issuerAssignedId must be unique within the organization. Represents the sign-in name for the user, when signInType is set to emailAddress or userName (also known as local accounts).When signInType is set to: emailAddress, (or a custom string that starts with emailAddress like emailAddress1) issuerAssignedId must be a valid email addressuserName, issuerAssignedId must begin with alphabetical character or number, and can only contain alphanumeric characters and the following symbols: - or Supports $filter. 64 character limit.
      [SignInType <String>]: Specifies the user sign-in types in your directory, such as emailAddress, userName, federated, or userPrincipalName. federated represents a unique identifier for a user from an issuer, that can be in any format chosen by the issuer. Setting or updating a userPrincipalName identity will update the value of the userPrincipalName property on the user object. The validations performed on the userPrincipalName property on the user object, for example, verified domains and acceptable characters, will be performed when setting or updating a userPrincipalName identity. Additional validation is enforced on issuerAssignedId when the sign-in type is set to emailAddress or userName. This property can also be set to any custom string.
    [ImAddresses <String[]>]: The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only. Returned only on $select. Supports $filter (eq, not, ge, le, startsWith).
    [InferenceClassification <IMicrosoftGraphInferenceClassification>]: inferenceClassification
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Overrides <IMicrosoftGraphInferenceClassificationOverride[]>]: A set of overrides for a user to always classify messages from specific senders in certain ways: focused, or other. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [ClassifyAs <String>]: inferenceClassificationType
        [SenderEmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
    [Insights <IMicrosoftGraphOfficeGraphInsights>]: officeGraphInsights
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Shared <IMicrosoftGraphSharedInsight[]>]: Calculated relationship identifying documents shared with or by the user. This includes URLs, file attachments, and reference attachments to OneDrive for Business and SharePoint files found in Outlook messages and meetings. This also includes URLs and reference attachments to Teams conversations. Ordered by recency of share.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [LastShared <IMicrosoftGraphSharingDetail>]: sharingDetail
          [(Any) <Object>]: This indicates any property can be added to this object.
          [SharedBy <IMicrosoftGraphInsightIdentity>]: insightIdentity
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Address <String>]: The email address of the user who shared the item.
            [DisplayName <String>]: The display name of the user who shared the item.
            [Id <String>]: The id of the user who shared the item.
          [SharedDateTime <DateTime?>]: The date and time the file was last shared. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [SharingReference <IMicrosoftGraphResourceReference>]: resourceReference
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The item's unique identifier.
            [Type <String>]: A string value that can be used to classify the item, such as 'microsoft.graph.driveItem'
            [WebUrl <String>]: A URL leading to the referenced item.
          [SharingSubject <String>]: The subject with which the document was shared.
          [SharingType <String>]: Determines the way the document was shared, can be by a 'Link', 'Attachment', 'Group', 'Site'.
        [LastSharedMethod <IMicrosoftGraphEntity>]: entity
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
        [Resource <IMicrosoftGraphEntity>]: entity
        [ResourceReference <IMicrosoftGraphResourceReference>]: resourceReference
        [ResourceVisualization <IMicrosoftGraphResourceVisualization>]: resourceVisualization
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ContainerDisplayName <String>]: A string describing where the item is stored. For example, the name of a SharePoint site or the user name identifying the owner of the OneDrive storing the item.
          [ContainerType <String>]: Can be used for filtering by the type of container in which the file is stored. Such as Site or OneDriveBusiness.
          [ContainerWebUrl <String>]: A path leading to the folder in which the item is stored.
          [MediaType <String>]: The item's media type. Can be used for filtering for a specific type of file based on supported IANA Media Mime Types. Note that not all Media Mime Types are supported.
          [PreviewImageUrl <String>]: A URL leading to the preview image for the item.
          [PreviewText <String>]: A preview text for the item.
          [Title <String>]: The item's title text.
          [Type <String>]: The item's media type. Can be used for filtering for a specific file based on a specific type. See below for supported types.
        [SharingHistory <IMicrosoftGraphSharingDetail[]>]: 
      [Trending <IMicrosoftGraphTrending[]>]: Calculated relationship identifying documents trending around a user. Trending documents are calculated based on activity of the user's closest network of people and include files stored in OneDrive for Business and SharePoint. Trending insights help the user to discover potentially useful content that the user has access to, but has never viewed before.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [LastModifiedDateTime <DateTime?>]: 
        [Resource <IMicrosoftGraphEntity>]: entity
        [ResourceReference <IMicrosoftGraphResourceReference>]: resourceReference
        [ResourceVisualization <IMicrosoftGraphResourceVisualization>]: resourceVisualization
        [Weight <Double?>]: Value indicating how much the document is currently trending. The larger the number, the more the document is currently trending around the user (the more relevant it is). Returned documents are sorted by this value.
      [Used <IMicrosoftGraphUsedInsight[]>]: Calculated relationship identifying the latest documents viewed or modified by a user, including OneDrive for Business and SharePoint documents, ranked by recency of use.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [LastUsed <IMicrosoftGraphUsageDetails>]: usageDetails
          [(Any) <Object>]: This indicates any property can be added to this object.
          [LastAccessedDateTime <DateTime?>]: The date and time the resource was last accessed by the user. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [LastModifiedDateTime <DateTime?>]: The date and time the resource was last modified by the user. The timestamp represents date and time information using ISO 8601 format and is always in UTC time.For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        [Resource <IMicrosoftGraphEntity>]: entity
        [ResourceReference <IMicrosoftGraphResourceReference>]: resourceReference
        [ResourceVisualization <IMicrosoftGraphResourceVisualization>]: resourceVisualization
    [Interests <String[]>]: A list for the user to describe their interests. Returned only on $select.
    [IsResourceAccount <Boolean?>]: Do not use – reserved for future use.
    [JobTitle <String>]: The user's job title. Maximum length is 128 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
    [JoinedTeams <IMicrosoftGraphTeam[]>]: 
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AllChannels <IMicrosoftGraphChannel[]>]: List of channels either hosted in or shared with the team (incoming channels).
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedDateTime <DateTime?>]: Read only. Timestamp at which the channel was created.
        [Description <String>]: Optional textual description for the channel.
        [DisplayName <String>]: Channel name as it will appear to the user in Microsoft Teams. The maximum length is 50 characters.
        [Email <String>]: The email address for sending messages to the channel. Read-only.
        [FilesFolder <IMicrosoftGraphDriveItem>]: driveItem
        [IsFavoriteByDefault <Boolean?>]: Indicates whether the channel should automatically be marked 'favorite' for all members of the team. Can only be set programmatically with Create team. Default: false.
        [Members <IMicrosoftGraphConversationMember[]>]: A collection of membership records associated with the channel.
        [MembershipType <String>]: channelMembershipType
        [Messages <IMicrosoftGraphChatMessage[]>]: A collection of all the messages in the channel. A navigation property. Nullable.
        [SharedWithTeams <IMicrosoftGraphSharedWithChannelTeamInfo[]>]: A collection of teams with which a channel is shared.
          [DisplayName <String>]: The name of the team.
          [Team <IMicrosoftGraphTeam>]: team
          [TenantId <String>]: The ID of the Azure Active Directory tenant.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AllowedMembers <IMicrosoftGraphConversationMember[]>]: A collection of team members who have access to the shared channel.
          [IsHostTeam <Boolean?>]: Indicates whether the team is the host of the channel.
        [Tabs <IMicrosoftGraphTeamsTab[]>]: A collection of all the tabs in the channel. A navigation property.
        [TenantId <String>]: The ID of the Azure Active Directory tenant.
        [WebUrl <String>]: A hyperlink that will go to the channel in Microsoft Teams. This is the URL that you get when you right-click a channel in Microsoft Teams and select Get link to channel. This URL should be treated as an opaque blob, and not parsed. Read-only.
      [Channels <IMicrosoftGraphChannel[]>]: The collection of channels and messages associated with the team.
      [Classification <String>]: An optional label. Typically describes the data or business sensitivity of the team. Must match one of a pre-configured set in the tenant's directory.
      [CreatedDateTime <DateTime?>]: Timestamp at which the team was created.
      [Description <String>]: An optional description for the team. Maximum length: 1024 characters.
      [DisplayName <String>]: The name of the team.
      [FunSettings <IMicrosoftGraphTeamFunSettings>]: teamFunSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AllowCustomMemes <Boolean?>]: If set to true, enables users to include custom memes.
        [AllowGiphy <Boolean?>]: If set to true, enables Giphy use.
        [AllowStickersAndMemes <Boolean?>]: If set to true, enables users to include stickers and memes.
        [GiphyContentRating <String>]: giphyRatingType
      [Group <IMicrosoftGraphGroup>]: group
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AcceptedSenders <IMicrosoftGraphDirectoryObject[]>]: The list of users or groups that are allowed to create post's or calendar events in this group. If this list is non-empty then only users or groups listed here are allowed to post.
        [AllowExternalSenders <Boolean?>]: Indicates if people external to the organization can send messages to the group. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        [AppRoleAssignments <IMicrosoftGraphAppRoleAssignment[]>]: Represents the app roles a group has been granted for an application. Supports $expand.
        [AssignedLabels <IMicrosoftGraphAssignedLabel[]>]: The list of sensitivity label pairs (label ID, label name) associated with a Microsoft 365 group. Returned only on $select.
          [DisplayName <String>]: The display name of the label. Read-only.
          [LabelId <String>]: The unique identifier of the label.
        [AssignedLicenses <IMicrosoftGraphAssignedLicense[]>]: The licenses that are assigned to the group. Returned only on $select. Supports $filter (eq).Read-only.
        [AutoSubscribeNewMembers <Boolean?>]: Indicates if new members added to the group will be auto-subscribed to receive email notifications. You can set this property in a PATCH request for the group; do not set it in the initial POST request that creates the group. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        [Calendar <IMicrosoftGraphCalendar>]: calendar
        [CalendarView <IMicrosoftGraphEvent[]>]: The calendar view for the calendar. Read-only.
        [Classification <String>]: Describes a classification for the group (such as low, medium or high business impact). Valid values for this property are defined by creating a ClassificationList setting value, based on the template definition.Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith).
        [Conversations <IMicrosoftGraphConversation[]>]: The group's conversations.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [HasAttachments <Boolean?>]: Indicates whether any of the posts within this Conversation has at least one attachment. Supports $filter (eq, ne) and $search.
          [LastDeliveredDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
          [Preview <String>]: A short summary from the body of the latest post in this conversation. Supports $filter (eq, ne, le, ge).
          [Threads <IMicrosoftGraphConversationThread[]>]: A collection of all the conversation threads in the conversation. A navigation property. Read-only. Nullable.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [CcRecipients <IMicrosoftGraphRecipient[]>]: The Cc: recipients for the thread. Returned only on $select.
            [HasAttachments <Boolean?>]: Indicates whether any of the posts within this thread has at least one attachment. Returned by default.
            [IsLocked <Boolean?>]: Indicates if the thread is locked. Returned by default.
            [LastDeliveredDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.Returned by default.
            [Posts <IMicrosoftGraphPost[]>]: 
              [Categories <String[]>]: The categories associated with the item
              [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
              [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
              [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Attachments <IMicrosoftGraphAttachment[]>]: Read-only. Nullable. Supports $expand.
              [Body <IMicrosoftGraphItemBody>]: itemBody
              [ConversationId <String>]: Unique ID of the conversation. Read-only.
              [ConversationThreadId <String>]: Unique ID of the conversation thread. Read-only.
              [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the post. Read-only. Nullable. Supports $expand.
              [From <IMicrosoftGraphRecipient>]: recipient
              [HasAttachments <Boolean?>]: Indicates whether the post has at least one attachment. This is a default property.
              [InReplyTo <IMicrosoftGraphPost>]: post
              [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the post. Read-only. Nullable.
              [NewParticipants <IMicrosoftGraphRecipient[]>]: Conversation participants that were added to the thread as part of this post.
              [ReceivedDateTime <DateTime?>]: Specifies when the post was received. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
              [Sender <IMicrosoftGraphRecipient>]: recipient
              [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the post. Read-only. Nullable.
            [Preview <String>]: A short summary from the body of the latest post in this conversation. Returned by default.
            [ToRecipients <IMicrosoftGraphRecipient[]>]: The To: recipients for the thread. Returned only on $select.
            [Topic <String>]: The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated. Returned by default.
            [UniqueSenders <String[]>]: All the users that sent a message to this thread. Returned by default.
          [Topic <String>]: The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated.
          [UniqueSenders <String[]>]: All the users that sent a message to this Conversation.
        [CreatedDateTime <DateTime?>]: Timestamp of when the group was created. The value cannot be modified and is automatically populated when the group is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Read-only.
        [CreatedOnBehalfOf <IMicrosoftGraphDirectoryObject>]: directoryObject
        [Description <String>]: An optional description for the group. Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith) and $search.
        [DisplayName <String>]: The display name for the group. This property is required when a group is created and cannot be cleared during updates. Maximum length is 256 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values), $search, and $orderBy.
        [Drive <IMicrosoftGraphDrive>]: drive
        [Drives <IMicrosoftGraphDrive[]>]: The group's drives. Read-only.
        [Events <IMicrosoftGraphEvent[]>]: The group's calendar events.
        [ExpirationDateTime <DateTime?>]: Timestamp of when the group is set to expire. Is null for security groups but for Microsoft 365 groups, it represents when the group is set to expire as defined in the groupLifecyclePolicy. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.
        [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the group. Read-only. Nullable.
        [GroupLifecyclePolicies <IMicrosoftGraphGroupLifecyclePolicy[]>]: The collection of lifecycle policies for this group. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AlternateNotificationEmails <String>]: List of email address to send notifications for groups without owners. Multiple email address can be defined by separating email address with a semicolon.
          [GroupLifetimeInDays <Int32?>]: Number of days before a group expires and needs to be renewed. Once renewed, the group expiration is extended by the number of days defined.
          [ManagedGroupTypes <String>]: The group type for which the expiration policy applies. Possible values are All, Selected or None.
        [GroupTypes <String[]>]: Specifies the group type and its membership. If the collection contains Unified, the group is a Microsoft 365 group; otherwise, it's either a security group or distribution group. For details, see groups overview.If the collection includes DynamicMembership, the group has dynamic membership; otherwise, membership is static. Returned by default. Supports $filter (eq, not).
        [HasMembersWithLicenseErrors <Boolean?>]: Indicates whether there are members in this group that have license errors from its group-based license assignment. This property is never returned on a GET operation. You can use it as a $filter argument to get groups that have members with license errors (that is, filter for this property being true). See an example. Supports $filter (eq).
        [HideFromAddressLists <Boolean?>]: True if the group is not displayed in certain parts of the Outlook UI: the Address Book, address lists for selecting message recipients, and the Browse Groups dialog for searching groups; otherwise, false. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        [HideFromOutlookClients <Boolean?>]: True if the group is not displayed in Outlook clients, such as Outlook for Windows and Outlook on the web; otherwise, false. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        [IsArchived <Boolean?>]: When a group is associated with a team this property determines whether the team is in read-only mode.To read this property, use the /group/{groupId}/team endpoint or the Get team API. To update this property, use the archiveTeam and unarchiveTeam APIs.
        [IsAssignableToRole <Boolean?>]: Indicates whether this group can be assigned to an Azure Active Directory role or not. Optional. This property can only be set while creating the group and is immutable. If set to true, the securityEnabled property must also be set to true, visibility must be Hidden, and the group cannot be a dynamic group (that is, groupTypes cannot contain DynamicMembership). Only callers in Global Administrator and Privileged Role Administrator roles can set this property. The caller must also be assigned the RoleManagement.ReadWrite.Directory permission to set this property or update the membership of such groups. For more, see Using a group to manage Azure AD role assignmentsUsing this feature requires a Azure AD Premium P1 license. Returned by default. Supports $filter (eq, ne, not).
        [IsSubscribedByMail <Boolean?>]: Indicates whether the signed-in user is subscribed to receive email conversations. Default value is true. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        [LicenseProcessingState <IMicrosoftGraphLicenseProcessingState>]: licenseProcessingState
          [(Any) <Object>]: This indicates any property can be added to this object.
          [State <String>]: 
        [Mail <String>]: The SMTP address for the group, for example, 'serviceadmins@contoso.onmicrosoft.com'. Returned by default. Read-only. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
        [MailEnabled <Boolean?>]: Specifies whether the group is mail-enabled. Required. Returned by default. Supports $filter (eq, ne, not).
        [MailNickname <String>]: The mail alias for the group, unique for Microsoft 365 groups in the organization. Maximum length is 64 characters. This property can contain only characters in the ASCII character set 0 - 127 except the following: @ () / [] ' ; : <> , SPACE. Required. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
        [MemberOf <IMicrosoftGraphDirectoryObject[]>]: Groups that this group is a member of. HTTP Methods: GET (supported for all groups). Read-only. Nullable. Supports $expand.
        [Members <IMicrosoftGraphDirectoryObject[]>]: The members of this group, who can be users, devices, other groups, or service principals. Supports the List members, Add member, and Remove member operations. Nullable. Supports $expand including nested $select. For example, /groups?$filter=startsWith(displayName,'Role')&$select=id,displayName&$expand=members($select=id,userPrincipalName,displayName).
        [MembersWithLicenseErrors <IMicrosoftGraphDirectoryObject[]>]: A list of group members with license errors from this group-based license assignment. Read-only.
        [MembershipRule <String>]: The rule that determines members for this group if the group is a dynamic group (groupTypes contains DynamicMembership). For more information about the syntax of the membership rule, see Membership Rules syntax. Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith).
        [MembershipRuleProcessingState <String>]: Indicates whether the dynamic membership processing is on or paused. Possible values are On or Paused. Returned by default. Supports $filter (eq, ne, not, in).
        [OnPremisesDomainName <String>]: 
        [OnPremisesLastSyncDateTime <DateTime?>]: Indicates the last time at which the group was synced with the on-premises directory.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Read-only. Supports $filter (eq, ne, not, ge, le, in).
        [OnPremisesNetBiosName <String>]: 
        [OnPremisesProvisioningErrors <IMicrosoftGraphOnPremisesProvisioningError[]>]: Errors when using Microsoft synchronization product during provisioning. Returned by default. Supports $filter (eq, not).
          [Category <String>]: Category of the provisioning error. Note: Currently, there is only one possible value. Possible value: PropertyConflict - indicates a property value is not unique. Other objects contain the same value for the property.
          [OccurredDateTime <DateTime?>]: The date and time at which the error occurred.
          [PropertyCausingError <String>]: Name of the directory property causing the error. Current possible values: UserPrincipalName or ProxyAddress
          [Value <String>]: Value of the property causing the error.
        [OnPremisesSamAccountName <String>]: Contains the on-premises SAM account name synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect.Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith). Read-only.
        [OnPremisesSecurityIdentifier <String>]: Contains the on-premises security identifier (SID) for the group that was synchronized from on-premises to the cloud. Returned by default. Supports $filter (eq including on null values). Read-only.
        [OnPremisesSyncEnabled <Boolean?>]: true if this group is synced from an on-premises directory; false if this group was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Returned by default. Read-only. Supports $filter (eq, ne, not, in, and eq on null values).
        [Onenote <IMicrosoftGraphOnenote>]: onenote
        [Owners <IMicrosoftGraphDirectoryObject[]>]: The owners of the group. Limited to 100 owners. Nullable. If this property is not specified when creating a Microsoft 365 group, the calling user is automatically assigned as the group owner.  Supports $filter (/$count eq 0, /$count ne 0, /$count eq 1, /$count ne 1). Supports $expand including nested $select. For example, /groups?$filter=startsWith(displayName,'Role')&$select=id,displayName&$expand=owners($select=id,userPrincipalName,displayName).
        [PermissionGrants <IMicrosoftGraphResourceSpecificPermissionGrant[]>]: The permission that has been granted for a group to a specific application. Supports $expand.
        [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
        [Photos <IMicrosoftGraphProfilePhoto[]>]: The profile photos owned by the group. Read-only. Nullable.
        [Planner <IMicrosoftGraphPlannerGroup>]: plannerGroup
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Plans <IMicrosoftGraphPlannerPlan[]>]: Read-only. Nullable. Returns the plannerPlans owned by the group.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Buckets <IMicrosoftGraphPlannerBucket[]>]: Read-only. Nullable. Collection of buckets in the plan.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Name <String>]: Name of the bucket.
              [OrderHint <String>]: Hint used to order items of this type in a list view. For details about the supported format, see Using order hints in Planner.
              [PlanId <String>]: Plan ID to which the bucket belongs.
              [Tasks <IMicrosoftGraphPlannerTask[]>]: Read-only. Nullable. The collection of tasks in the bucket.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [ActiveChecklistItemCount <Int32?>]: Number of checklist items with value set to false, representing incomplete items.
                [AppliedCategories <IMicrosoftGraphPlannerAppliedCategories>]: plannerAppliedCategories
                  [(Any) <Object>]: This indicates any property can be added to this object.
                [AssignedToTaskBoardFormat <IMicrosoftGraphPlannerAssignedToTaskBoardTaskFormat>]: plannerAssignedToTaskBoardTaskFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [OrderHintsByAssignee <IMicrosoftGraphPlannerOrderHintsByAssignee>]: plannerOrderHintsByAssignee
                    [(Any) <Object>]: This indicates any property can be added to this object.
                  [UnassignedOrderHint <String>]: Hint value used to order the task on the AssignedTo view of the Task Board when the task is not assigned to anyone, or if the orderHintsByAssignee dictionary does not provide an order hint for the user the task is assigned to. The format is defined as outlined here.
                [AssigneePriority <String>]: Hint used to order items of this type in a list view. The format is defined as outlined here.
                [Assignments <IMicrosoftGraphPlannerAssignments>]: plannerAssignments
                  [(Any) <Object>]: This indicates any property can be added to this object.
                [BucketId <String>]: Bucket ID to which the task belongs. The bucket needs to be in the plan that the task is in. It is 28 characters long and case-sensitive. Format validation is done on the service.
                [BucketTaskBoardFormat <IMicrosoftGraphPlannerBucketTaskBoardTaskFormat>]: plannerBucketTaskBoardTaskFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [OrderHint <String>]: Hint used to order tasks in the bucket view of the task board. For details about the supported format, see Using order hints in Planner.
                [ChecklistItemCount <Int32?>]: Number of checklist items that are present on the task.
                [CompletedBy <IMicrosoftGraphIdentitySet>]: identitySet
                [CompletedDateTime <DateTime?>]: Read-only. Date and time at which the 'percentComplete' of the task is set to '100'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
                [ConversationThreadId <String>]: Thread ID of the conversation on the task. This is the ID of the conversation thread object created in the group.
                [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
                [CreatedDateTime <DateTime?>]: Read-only. Date and time at which the task is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
                [Details <IMicrosoftGraphPlannerTaskDetails>]: plannerTaskDetails
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Checklist <IMicrosoftGraphPlannerChecklistItems>]: plannerChecklistItems
                    [(Any) <Object>]: This indicates any property can be added to this object.
                  [Description <String>]: Description of the task.
                  [PreviewType <String>]: plannerPreviewType
                  [References <IMicrosoftGraphPlannerExternalReferences>]: plannerExternalReferences
                    [(Any) <Object>]: This indicates any property can be added to this object.
                [DueDateTime <DateTime?>]: Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
                [HasDescription <Boolean?>]: Read-only. Value is true if the details object of the task has a non-empty description and false otherwise.
                [OrderHint <String>]: Hint used to order items of this type in a list view. The format is defined as outlined here.
                [PercentComplete <Int32?>]: Percentage of task completion. When set to 100, the task is considered completed.
                [PlanId <String>]: Plan ID to which the task belongs.
                [PreviewType <String>]: plannerPreviewType
                [Priority <Int32?>]: Priority of the task. The valid range of values is between 0 and 10, with the increasing value being lower priority (0 has the highest priority and 10 has the lowest priority).  Currently, Planner interprets values 0 and 1 as 'urgent', 2, 3 and 4 as 'important', 5, 6, and 7 as 'medium', and 8, 9, and 10 as 'low'.  Additionally, Planner sets the value 1 for 'urgent', 3 for 'important', 5 for 'medium', and 9 for 'low'.
                [ProgressTaskBoardFormat <IMicrosoftGraphPlannerProgressTaskBoardTaskFormat>]: plannerProgressTaskBoardTaskFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [OrderHint <String>]: Hint value used to order the task on the progress view of the task board. For details about the supported format, see Using order hints in Planner.
                [ReferenceCount <Int32?>]: Number of external references that exist on the task.
                [StartDateTime <DateTime?>]: Date and time at which the task starts. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
                [Title <String>]: Title of the task.
            [Container <IMicrosoftGraphPlannerPlanContainer>]: plannerPlanContainer
              [(Any) <Object>]: This indicates any property can be added to this object.
              [ContainerId <String>]: The identifier of the resource that contains the plan. Optional.
              [Type <String>]: plannerContainerType
              [Url <String>]: The full canonical URL of the container. Optional.
            [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [CreatedDateTime <DateTime?>]: Read-only. Date and time at which the plan is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
            [Details <IMicrosoftGraphPlannerPlanDetails>]: plannerPlanDetails
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [CategoryDescriptions <IMicrosoftGraphPlannerCategoryDescriptions>]: plannerCategoryDescriptions
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Category1 <String>]: The label associated with Category 1
                [Category10 <String>]: The label associated with Category 10
                [Category11 <String>]: The label associated with Category 11
                [Category12 <String>]: The label associated with Category 12
                [Category13 <String>]: The label associated with Category 13
                [Category14 <String>]: The label associated with Category 14
                [Category15 <String>]: The label associated with Category 15
                [Category16 <String>]: The label associated with Category 16
                [Category17 <String>]: The label associated with Category 17
                [Category18 <String>]: The label associated with Category 18
                [Category19 <String>]: The label associated with Category 19
                [Category2 <String>]: The label associated with Category 2
                [Category20 <String>]: The label associated with Category 20
                [Category21 <String>]: The label associated with Category 21
                [Category22 <String>]: The label associated with Category 22
                [Category23 <String>]: The label associated with Category 23
                [Category24 <String>]: The label associated with Category 24
                [Category25 <String>]: The label associated with Category 25
                [Category3 <String>]: The label associated with Category 3
                [Category4 <String>]: The label associated with Category 4
                [Category5 <String>]: The label associated with Category 5
                [Category6 <String>]: The label associated with Category 6
                [Category7 <String>]: The label associated with Category 7
                [Category8 <String>]: The label associated with Category 8
                [Category9 <String>]: The label associated with Category 9
              [SharedWith <IMicrosoftGraphPlannerUserIds>]: plannerUserIds
                [(Any) <Object>]: This indicates any property can be added to this object.
            [Owner <String>]: 
            [Tasks <IMicrosoftGraphPlannerTask[]>]: Read-only. Nullable. Collection of tasks in the plan.
            [Title <String>]: Required. Title of the plan.
        [PreferredDataLocation <String>]: The preferred data location for the Microsoft 365 group. By default, the group inherits the group creator's preferred data location. To set this property, the calling user must be assigned one of the following Azure AD roles:  Global Administrator  User Account Administrator Directory Writer  Exchange Administrator  SharePoint Administrator  For more information about this property, see OneDrive Online Multi-Geo. Nullable. Returned by default.
        [PreferredLanguage <String>]: The preferred language for a Microsoft 365 group. Should follow ISO 639-1 Code; for example en-US. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
        [ProxyAddresses <String[]>]: Email addresses for the group that direct to the same group mailbox. For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. The any operator is required to filter expressions on multi-valued properties. Returned by default. Read-only. Not nullable. Supports $filter (eq, not, ge, le, startsWith, endsWith, /$count eq 0, /$count ne 0).
        [RejectedSenders <IMicrosoftGraphDirectoryObject[]>]: The list of users or groups that are not allowed to create posts or calendar events in this group. Nullable
        [RenewedDateTime <DateTime?>]: Timestamp of when the group was last renewed. This cannot be modified directly and is only updated via the renew service action. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.
        [SecurityEnabled <Boolean?>]: Specifies whether the group is a security group. Required. Returned by default. Supports $filter (eq, ne, not, in).
        [SecurityIdentifier <String>]: Security identifier of the group, used in Windows scenarios. Returned by default.
        [Settings <IMicrosoftGraphGroupSetting[]>]: Settings that can govern this group's behavior, like whether members can invite guest users to the group. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DisplayName <String>]: Display name of this group of settings, which comes from the associated template.
          [TemplateId <String>]: Unique identifier for the tenant-level groupSettingTemplates object that's been customized for this group-level settings object. Read-only.
          [Values <IMicrosoftGraphSettingValue[]>]: Collection of name-value pairs corresponding to the name and defaultValue properties in the referenced groupSettingTemplates object.
            [Name <String>]: Name of the setting (as defined by the groupSettingTemplate).
            [Value <String>]: Value of the setting.
        [Sites <IMicrosoftGraphSite[]>]: The list of SharePoint sites in this group. Access the default site with /sites/root.
        [Team <IMicrosoftGraphTeam>]: team
        [Theme <String>]: Specifies a Microsoft 365 group's color theme. Possible values are Teal, Purple, Green, Blue, Pink, Orange or Red. Returned by default.
        [Threads <IMicrosoftGraphConversationThread[]>]: The group's conversation threads. Nullable.
        [TransitiveMemberOf <IMicrosoftGraphDirectoryObject[]>]: The groups that a group is a member of, either directly and through nested membership. Nullable.
        [TransitiveMembers <IMicrosoftGraphDirectoryObject[]>]: The direct and transitive members of a group. Nullable.
        [UnseenCount <Int32?>]: Count of conversations that have received new posts since the signed-in user last visited the group. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        [Visibility <String>]: Specifies the group join policy and group content visibility for groups. Possible values are: Private, Public, or HiddenMembership. HiddenMembership can be set only for Microsoft 365 groups, when the groups are created. It can't be updated later. Other values of visibility can be updated after group creation. If visibility value is not specified during group creation on Microsoft Graph, a security group is created as Private by default and Microsoft 365 group is Public. Groups assignable to roles are always Private. See group visibility options to learn more. Returned by default. Nullable.
      [GuestSettings <IMicrosoftGraphTeamGuestSettings>]: teamGuestSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AllowCreateUpdateChannels <Boolean?>]: If set to true, guests can add and update channels.
        [AllowDeleteChannels <Boolean?>]: If set to true, guests can delete channels.
      [IncomingChannels <IMicrosoftGraphChannel[]>]: List of channels shared with the team.
      [InstalledApps <IMicrosoftGraphTeamsAppInstallation[]>]: The apps installed in this team.
      [InternalId <String>]: A unique ID for the team that has been used in a few places such as the audit log/Office 365 Management Activity API.
      [IsArchived <Boolean?>]: Whether this team is in read-only mode.
      [MemberSettings <IMicrosoftGraphTeamMemberSettings>]: teamMemberSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AllowAddRemoveApps <Boolean?>]: If set to true, members can add and remove apps.
        [AllowCreatePrivateChannels <Boolean?>]: If set to true, members can add and update private channels.
        [AllowCreateUpdateChannels <Boolean?>]: If set to true, members can add and update channels.
        [AllowCreateUpdateRemoveConnectors <Boolean?>]: If set to true, members can add, update, and remove connectors.
        [AllowCreateUpdateRemoveTabs <Boolean?>]: If set to true, members can add, update, and remove tabs.
        [AllowDeleteChannels <Boolean?>]: If set to true, members can delete channels.
      [Members <IMicrosoftGraphConversationMember[]>]: Members and owners of the team.
      [MessagingSettings <IMicrosoftGraphTeamMessagingSettings>]: teamMessagingSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AllowChannelMentions <Boolean?>]: If set to true, @channel mentions are allowed.
        [AllowOwnerDeleteMessages <Boolean?>]: If set to true, owners can delete any message.
        [AllowTeamMentions <Boolean?>]: If set to true, @team mentions are allowed.
        [AllowUserDeleteMessages <Boolean?>]: If set to true, users can delete their messages.
        [AllowUserEditMessages <Boolean?>]: If set to true, users can edit their messages.
      [Operations <IMicrosoftGraphTeamsAsyncOperation[]>]: The async operations that ran or are running on this team.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AttemptsCount <Int32?>]: Number of times the operation was attempted before being marked successful or failed.
        [CreatedDateTime <DateTime?>]: Time when the operation was created.
        [Error <IMicrosoftGraphOperationError>]: operationError
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Code <String>]: Operation error code.
          [Message <String>]: Operation error message.
        [LastActionDateTime <DateTime?>]: Time when the async operation was last updated.
        [OperationType <String>]: teamsAsyncOperationType
        [Status <String>]: teamsAsyncOperationStatus
        [TargetResourceId <String>]: The ID of the object that's created or modified as result of this async operation, typically a team.
        [TargetResourceLocation <String>]: The location of the object that's created or modified as result of this async operation. This URL should be treated as an opaque value and not parsed into its component paths.
      [PermissionGrants <IMicrosoftGraphResourceSpecificPermissionGrant[]>]: 
      [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
      [PrimaryChannel <IMicrosoftGraphChannel>]: channel
      [Schedule <IMicrosoftGraphSchedule>]: schedule
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Enabled <Boolean?>]: Indicates whether the schedule is enabled for the team. Required.
        [OfferShiftRequests <IMicrosoftGraphOfferShiftRequest[]>]: The offer requests for shifts in the schedule.
          [AssignedTo <String>]: scheduleChangeRequestActor
          [ManagerActionMessage <String>]: 
          [SenderMessage <String>]: 
          [State <String>]: scheduleChangeState
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [RecipientActionMessage <String>]: Custom message sent by recipient of the offer shift request.
          [RecipientUserId <String>]: User ID of the recipient of the offer shift request.
          [SenderShiftId <String>]: User ID of the sender of the offer shift request.
        [OfferShiftRequestsEnabled <Boolean?>]: Indicates whether offer shift requests are enabled for the schedule.
        [OpenShiftChangeRequests <IMicrosoftGraphOpenShiftChangeRequest[]>]: The open shift requests in the schedule.
          [AssignedTo <String>]: scheduleChangeRequestActor
          [ManagerActionMessage <String>]: 
          [SenderMessage <String>]: 
          [State <String>]: scheduleChangeState
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [OpenShiftId <String>]: ID for the open shift.
        [OpenShifts <IMicrosoftGraphOpenShift[]>]: The set of open shifts in a scheduling group in the schedule.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DraftOpenShift <IMicrosoftGraphOpenShiftItem>]: openShiftItem
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Activities <IMicrosoftGraphShiftActivity[]>]: An incremental part of a shift which can cover details of when and where an employee is during their shift. For example, an assignment or a scheduled break or lunch. Required.
              [Code <String>]: Customer defined code for the shiftActivity. Required.
              [DisplayName <String>]: The name of the shiftActivity. Required.
              [EndDateTime <DateTime?>]: The end date and time for the shiftActivity. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
              [IsPaid <Boolean?>]: Indicates whether the microsoft.graph.user should be paid for the activity during their shift. Required.
              [StartDateTime <DateTime?>]: The start date and time for the shiftActivity. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
              [Theme <String>]: scheduleEntityTheme
            [DisplayName <String>]: The shift label of the shiftItem.
            [Notes <String>]: The shift notes for the shiftItem.
            [EndDateTime <DateTime?>]: 
            [StartDateTime <DateTime?>]: 
            [Theme <String>]: scheduleEntityTheme
            [OpenSlotCount <Int32?>]: Count of the number of slots for the given open shift.
          [SchedulingGroupId <String>]: ID for the scheduling group that the open shift belongs to.
          [SharedOpenShift <IMicrosoftGraphOpenShiftItem>]: openShiftItem
        [OpenShiftsEnabled <Boolean?>]: Indicates whether open shifts are enabled for the schedule.
        [ProvisionStatus <String>]: operationStatus
        [SchedulingGroups <IMicrosoftGraphSchedulingGroup[]>]: The logical grouping of users in the schedule (usually by role).
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DisplayName <String>]: The display name for the schedulingGroup. Required.
          [UserIds <String[]>]: The list of user IDs that are a member of the schedulingGroup. Required.
        [Shifts <IMicrosoftGraphShift[]>]: The shifts in the schedule.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DraftShift <IMicrosoftGraphShiftItem>]: shiftItem
            [(Any) <Object>]: This indicates any property can be added to this object.
            [EndDateTime <DateTime?>]: 
            [StartDateTime <DateTime?>]: 
            [Theme <String>]: scheduleEntityTheme
            [Activities <IMicrosoftGraphShiftActivity[]>]: An incremental part of a shift which can cover details of when and where an employee is during their shift. For example, an assignment or a scheduled break or lunch. Required.
            [DisplayName <String>]: The shift label of the shiftItem.
            [Notes <String>]: The shift notes for the shiftItem.
          [SchedulingGroupId <String>]: ID of the scheduling group the shift is part of. Required.
          [SharedShift <IMicrosoftGraphShiftItem>]: shiftItem
          [UserId <String>]: ID of the user assigned to the shift. Required.
        [SwapShiftsChangeRequests <IMicrosoftGraphSwapShiftsChangeRequest[]>]: The swap requests for shifts in the schedule.
          [RecipientActionMessage <String>]: Custom message sent by recipient of the offer shift request.
          [RecipientUserId <String>]: User ID of the recipient of the offer shift request.
          [SenderShiftId <String>]: User ID of the sender of the offer shift request.
          [AssignedTo <String>]: scheduleChangeRequestActor
          [ManagerActionMessage <String>]: 
          [SenderMessage <String>]: 
          [State <String>]: scheduleChangeState
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [RecipientShiftId <String>]: ShiftId for the recipient user with whom the request is to swap.
        [SwapShiftsRequestsEnabled <Boolean?>]: Indicates whether swap shifts requests are enabled for the schedule.
        [TimeClockEnabled <Boolean?>]: Indicates whether time clock is enabled for the schedule.
        [TimeOffReasons <IMicrosoftGraphTimeOffReason[]>]: The set of reasons for a time off in the schedule.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DisplayName <String>]: The name of the timeOffReason. Required.
          [IconType <String>]: timeOffReasonIconType
          [IsActive <Boolean?>]: Indicates whether the timeOffReason can be used when creating new entities or updating existing ones. Required.
        [TimeOffRequests <IMicrosoftGraphTimeOffRequest[]>]: The time off requests in the schedule.
          [AssignedTo <String>]: scheduleChangeRequestActor
          [ManagerActionMessage <String>]: 
          [SenderMessage <String>]: 
          [State <String>]: scheduleChangeState
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [EndDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
          [StartDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
          [TimeOffReasonId <String>]: The reason for the time off.
        [TimeOffRequestsEnabled <Boolean?>]: Indicates whether time off requests are enabled for the schedule.
        [TimeZone <String>]: Indicates the time zone of the schedule team using tz database format. Required.
        [TimesOff <IMicrosoftGraphTimeOff[]>]: The instances of times off in the schedule.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DraftTimeOff <IMicrosoftGraphTimeOffItem>]: timeOffItem
            [(Any) <Object>]: This indicates any property can be added to this object.
            [EndDateTime <DateTime?>]: 
            [StartDateTime <DateTime?>]: 
            [Theme <String>]: scheduleEntityTheme
            [TimeOffReasonId <String>]: ID of the timeOffReason for this timeOffItem. Required.
          [SharedTimeOff <IMicrosoftGraphTimeOffItem>]: timeOffItem
          [UserId <String>]: ID of the user assigned to the timeOff. Required.
        [WorkforceIntegrationIds <String[]>]: 
      [Specialization <String>]: teamSpecialization
      [Summary <IMicrosoftGraphTeamSummary>]: teamSummary
        [(Any) <Object>]: This indicates any property can be added to this object.
        [GuestsCount <Int32?>]: Count of guests in a team.
        [MembersCount <Int32?>]: Count of members in a team.
        [OwnersCount <Int32?>]: Count of owners in a team.
      [Tags <IMicrosoftGraphTeamworkTag[]>]: The tags associated with the team.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Description <String>]: The description of the tag as it will appear to the user in Microsoft Teams. A teamworkTag can't have more than 200 teamworkTagMembers.
        [DisplayName <String>]: The name of the tag as it will appear to the user in Microsoft Teams.
        [MemberCount <Int32?>]: The number of users assigned to the tag.
        [Members <IMicrosoftGraphTeamworkTagMember[]>]: Users assigned to the tag.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DisplayName <String>]: The member's display name.
          [TenantId <String>]: The ID of the tenant that the tag member is a part of.
          [UserId <String>]: The user ID of the member.
        [TagType <String>]: teamworkTagType
        [TeamId <String>]: ID of the team in which the tag is defined.
      [Template <IMicrosoftGraphTeamsTemplate>]: teamsTemplate
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
      [TenantId <String>]: The ID of the Azure Active Directory tenant.
      [Visibility <String>]: teamVisibilityType
      [WebUrl <String>]: A hyperlink that will go to the team in the Microsoft Teams client. This is the URL that you get when you right-click a team in the Microsoft Teams client and select Get link to team. This URL should be treated as an opaque blob, and not parsed.
    [LastPasswordChangeDateTime <DateTime?>]: The time when this Azure AD user last changed their password or when their password was created, whichever date the latest action was performed. The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned only on $select.
    [LegalAgeGroupClassification <String>]: Used by enterprise applications to determine the legal age group of the user. This property is read-only and calculated based on ageGroup and consentProvidedForMinor properties. Allowed values: null, MinorWithOutParentalConsent, MinorWithParentalConsent, MinorNoParentalConsentRequired, NotAdult and Adult. Refer to the legal age group property definitions for further information. Returned only on $select.
    [LicenseAssignmentStates <IMicrosoftGraphLicenseAssignmentState[]>]: State of license assignments for this user. Also indicates licenses that are directly-assigned and those that the user has inherited through group memberships. Read-only. Returned only on $select.
      [AssignedByGroup <String>]: 
      [DisabledPlans <String[]>]: 
      [Error <String>]: 
      [LastUpdatedDateTime <DateTime?>]: 
      [SkuId <String>]: 
      [State <String>]: 
    [LicenseDetails <IMicrosoftGraphLicenseDetails[]>]: A collection of this user's license details. Read-only.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ServicePlans <IMicrosoftGraphServicePlanInfo[]>]: Information about the service plans assigned with the license. Read-only, Not nullable
        [AppliesTo <String>]: The object the service plan can be assigned to. The possible values are:User - service plan can be assigned to individual users.Company - service plan can be assigned to the entire tenant.
        [ProvisioningStatus <String>]: The provisioning status of the service plan. The possible values are:Success - Service is fully provisioned.Disabled - Service has been disabled.ErrorStatus - The service plan has not been provisioned and is in an error state.PendingInput - Service is not yet provisioned; awaiting service confirmation.PendingActivation - Service is provisioned but requires explicit activation by administrator (for example, Intune_O365 service plan)PendingProvisioning - Microsoft has added a new service to the product SKU and it has not been activated in the tenant, yet.
        [ServicePlanId <String>]: The unique identifier of the service plan.
        [ServicePlanName <String>]: The name of the service plan.
      [SkuId <String>]: Unique identifier (GUID) for the service SKU. Equal to the skuId property on the related SubscribedSku object. Read-only
      [SkuPartNumber <String>]: Unique SKU display name. Equal to the skuPartNumber on the related SubscribedSku object; for example: 'AAD_Premium'. Read-only
    [Mail <String>]: The SMTP address for the user, for example, jeff@contoso.onmicrosoft.com. Changes to this property will also update the user's proxyAddresses collection to include the value as an SMTP address. This property cannot contain accent characters.  NOTE: We do not recommend updating this property for Azure AD B2C user profiles. Use the otherMails property instead. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, endsWith, and eq on null values).
    [MailFolders <IMicrosoftGraphMailFolder[]>]: The user's mail folders. Read-only. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ChildFolderCount <Int32?>]: The number of immediate child mailFolders in the current mailFolder.
      [ChildFolders <IMicrosoftGraphMailFolder[]>]: The collection of child folders in the mailFolder.
      [DisplayName <String>]: The mailFolder's display name.
      [IsHidden <Boolean?>]: Indicates whether the mailFolder is hidden. This property can be set only when creating the folder. Find more information in Hidden mail folders.
      [MessageRules <IMicrosoftGraphMessageRule[]>]: The collection of rules that apply to the user's Inbox folder.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Actions <IMicrosoftGraphMessageRuleActions>]: messageRuleActions
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AssignCategories <String[]>]: A list of categories to be assigned to a message.
          [CopyToFolder <String>]: The ID of a folder that a message is to be copied to.
          [Delete <Boolean?>]: Indicates whether a message should be moved to the Deleted Items folder.
          [ForwardAsAttachmentTo <IMicrosoftGraphRecipient[]>]: The email addresses of the recipients to which a message should be forwarded as an attachment.
          [ForwardTo <IMicrosoftGraphRecipient[]>]: The email addresses of the recipients to which a message should be forwarded.
          [MarkAsRead <Boolean?>]: Indicates whether a message should be marked as read.
          [MarkImportance <String>]: importance
          [MoveToFolder <String>]: The ID of the folder that a message will be moved to.
          [PermanentDelete <Boolean?>]: Indicates whether a message should be permanently deleted and not saved to the Deleted Items folder.
          [RedirectTo <IMicrosoftGraphRecipient[]>]: The email addresses to which a message should be redirected.
          [StopProcessingRules <Boolean?>]: Indicates whether subsequent rules should be evaluated.
        [Conditions <IMicrosoftGraphMessageRulePredicates>]: messageRulePredicates
          [(Any) <Object>]: This indicates any property can be added to this object.
          [BodyContains <String[]>]: Represents the strings that should appear in the body of an incoming message in order for the condition or exception to apply.
          [BodyOrSubjectContains <String[]>]: Represents the strings that should appear in the body or subject of an incoming message in order for the condition or exception to apply.
          [Categories <String[]>]: Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply.
          [FromAddresses <IMicrosoftGraphRecipient[]>]: Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply.
          [HasAttachments <Boolean?>]: Indicates whether an incoming message must have attachments in order for the condition or exception to apply.
          [HeaderContains <String[]>]: Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply.
          [Importance <String>]: importance
          [IsApprovalRequest <Boolean?>]: Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.
          [IsAutomaticForward <Boolean?>]: Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.
          [IsAutomaticReply <Boolean?>]: Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.
          [IsEncrypted <Boolean?>]: Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.
          [IsMeetingRequest <Boolean?>]: Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.
          [IsMeetingResponse <Boolean?>]: Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.
          [IsNonDeliveryReport <Boolean?>]: Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.
          [IsPermissionControlled <Boolean?>]: Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception to apply.
          [IsReadReceipt <Boolean?>]: Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.
          [IsSigned <Boolean?>]: Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.
          [IsVoicemail <Boolean?>]: Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.
          [MessageActionFlag <String>]: messageActionFlag
          [NotSentToMe <Boolean?>]: Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or exception to apply.
          [RecipientContains <String[]>]: Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order for the condition or exception to apply.
          [SenderContains <String[]>]: Represents the strings that appear in the from property of an incoming message in order for the condition or exception to apply.
          [Sensitivity <String>]: sensitivity
          [SentCcMe <Boolean?>]: Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the condition or exception to apply.
          [SentOnlyToMe <Boolean?>]: Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition or exception to apply.
          [SentToAddresses <IMicrosoftGraphRecipient[]>]: Represents the email addresses that an incoming message must have been sent to in order for the condition or exception to apply.
          [SentToMe <Boolean?>]: Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the condition or exception to apply.
          [SentToOrCcMe <Boolean?>]: Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message in order for the condition or exception to apply.
          [SubjectContains <String[]>]: Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply.
          [WithinSizeRange <IMicrosoftGraphSizeRange>]: sizeRange
            [(Any) <Object>]: This indicates any property can be added to this object.
            [MaximumSize <Int32?>]: The maximum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.
            [MinimumSize <Int32?>]: The minimum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.
        [DisplayName <String>]: The display name of the rule.
        [Exceptions <IMicrosoftGraphMessageRulePredicates>]: messageRulePredicates
        [HasError <Boolean?>]: Indicates whether the rule is in an error condition. Read-only.
        [IsEnabled <Boolean?>]: Indicates whether the rule is enabled to be applied to messages.
        [IsReadOnly <Boolean?>]: Indicates if the rule is read-only and cannot be modified or deleted by the rules REST API.
        [Sequence <Int32?>]: Indicates the order in which the rule is executed, among other rules.
      [Messages <IMicrosoftGraphMessage[]>]: The collection of messages in the mailFolder.
        [Categories <String[]>]: The categories associated with the item
        [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
        [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Attachments <IMicrosoftGraphAttachment[]>]: The fileAttachment and itemAttachment attachments for the message.
        [BccRecipients <IMicrosoftGraphRecipient[]>]: The Bcc: recipients for the message.
        [Body <IMicrosoftGraphItemBody>]: itemBody
        [BodyPreview <String>]: The first 255 characters of the message body. It is in text format.
        [CcRecipients <IMicrosoftGraphRecipient[]>]: The Cc: recipients for the message.
        [ConversationId <String>]: The ID of the conversation the email belongs to.
        [ConversationIndex <Byte[]>]: Indicates the position of the message within the conversation.
        [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the message. Nullable.
        [Flag <IMicrosoftGraphFollowupFlag>]: followupFlag
          [(Any) <Object>]: This indicates any property can be added to this object.
          [CompletedDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
          [DueDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
          [FlagStatus <String>]: followupFlagStatus
          [StartDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [From <IMicrosoftGraphRecipient>]: recipient
        [HasAttachments <Boolean?>]: Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>.
        [Importance <String>]: importance
        [InferenceClassification <String>]: inferenceClassificationType
        [InternetMessageHeaders <IMicrosoftGraphInternetMessageHeader[]>]: 
          [Name <String>]: Represents the key in a key-value pair.
          [Value <String>]: The value in a key-value pair.
        [InternetMessageId <String>]: 
        [IsDeliveryReceiptRequested <Boolean?>]: 
        [IsDraft <Boolean?>]: 
        [IsRead <Boolean?>]: 
        [IsReadReceiptRequested <Boolean?>]: 
        [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the message. Nullable.
        [ParentFolderId <String>]: 
        [ReceivedDateTime <DateTime?>]: 
        [ReplyTo <IMicrosoftGraphRecipient[]>]: 
        [Sender <IMicrosoftGraphRecipient>]: recipient
        [SentDateTime <DateTime?>]: 
        [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the message. Nullable.
        [Subject <String>]: 
        [ToRecipients <IMicrosoftGraphRecipient[]>]: 
        [UniqueBody <IMicrosoftGraphItemBody>]: itemBody
        [WebLink <String>]: 
      [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the mailFolder. Read-only. Nullable.
      [ParentFolderId <String>]: The unique identifier for the mailFolder's parent mailFolder.
      [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the mailFolder. Read-only. Nullable.
      [TotalItemCount <Int32?>]: The number of items in the mailFolder.
      [UnreadItemCount <Int32?>]: The number of items in the mailFolder marked as unread.
    [MailNickname <String>]: The mail alias for the user. This property must be specified when a user is created. Maximum length is 64 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [MailboxSettings <IMicrosoftGraphMailboxSettings>]: mailboxSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [ArchiveFolder <String>]: Folder ID of an archive folder for the user.
      [AutomaticRepliesSetting <IMicrosoftGraphAutomaticRepliesSetting>]: automaticRepliesSetting
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ExternalAudience <String>]: externalAudienceScope
        [ExternalReplyMessage <String>]: The automatic reply to send to the specified external audience, if Status is AlwaysEnabled or Scheduled.
        [InternalReplyMessage <String>]: The automatic reply to send to the audience internal to the signed-in user's organization, if Status is AlwaysEnabled or Scheduled.
        [ScheduledEndDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [ScheduledStartDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [Status <String>]: automaticRepliesStatus
      [DateFormat <String>]: The date format for the user's mailbox.
      [DelegateMeetingMessageDeliveryOptions <String>]: delegateMeetingMessageDeliveryOptions
      [Language <IMicrosoftGraphLocaleInfo>]: localeInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DisplayName <String>]: A name representing the user's locale in natural language, for example, 'English (United States)'.
        [Locale <String>]: A locale representation for the user, which includes the user's preferred language and country/region. For example, 'en-us'. The language component follows 2-letter codes as defined in ISO 639-1, and the country component follows 2-letter codes as defined in ISO 3166-1 alpha-2.
      [TimeFormat <String>]: The time format for the user's mailbox.
      [TimeZone <String>]: The default time zone for the user's mailbox.
      [UserPurpose <String>]: userPurpose
      [WorkingHours <IMicrosoftGraphWorkingHours>]: workingHours
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DaysOfWeek <String[]>]: The days of the week on which the user works.
        [EndTime <String>]: The time of the day that the user stops working.
        [StartTime <String>]: The time of the day that the user starts working.
        [TimeZone <IMicrosoftGraphTimeZoneBase>]: timeZoneBase
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Name <String>]: The name of a time zone. It can be a standard time zone name such as 'Hawaii-Aleutian Standard Time', or 'Customized Time Zone' for a custom time zone.
    [ManagedAppRegistrations <IMicrosoftGraphManagedAppRegistration[]>]: Zero or more managed app registrations that belong to the user.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
        [(Any) <Object>]: This indicates any property can be added to this object.
      [ApplicationVersion <String>]: App version
      [AppliedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policys already applied on the registered app when it last synchronized with managment service.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedDateTime <DateTime?>]: The date and time the policy was created.
        [Description <String>]: The policy's description.
        [DisplayName <String>]: Policy display name.
        [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
        [Version <String>]: Version of the entity.
      [CreatedDateTime <DateTime?>]: Date and time of creation
      [DeviceName <String>]: Host device name
      [DeviceTag <String>]: App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.
      [DeviceType <String>]: Host device type
      [FlaggedReasons <ManagedAppFlaggedReason[]>]: Zero or more reasons an app registration is flagged. E.g. app running on rooted device
      [IntendedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policies admin intended for the app as of now.
      [LastSyncDateTime <DateTime?>]: Date and time of last the app synced with management service.
      [ManagementSdkVersion <String>]: App management SDK version
      [Operations <IMicrosoftGraphManagedAppOperation[]>]: Zero or more long running operations triggered on the app registration.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DisplayName <String>]: The operation name.
        [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
        [State <String>]: The current state of the operation
        [Version <String>]: Version of the entity.
      [PlatformVersion <String>]: Operating System version
      [UserId <String>]: The user Id to who this app registration belongs.
      [Version <String>]: Version of the entity.
    [ManagedDevices <IMicrosoftGraphManagedDevice[]>]: The managed devices associated with the user.
    [Manager <IMicrosoftGraphDirectoryObject>]: directoryObject
    [MemberOf <IMicrosoftGraphDirectoryObject[]>]: The groups and directory roles that the user is a member of. Read-only. Nullable. Supports $expand.
    [Messages <IMicrosoftGraphMessage[]>]: The messages in a mailbox or folder. Read-only. Nullable.
    [MobilePhone <String>]: The primary cellular telephone number for the user. Read-only for users synced from on-premises directory. Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values) and $search.
    [MySite <String>]: The URL for the user's personal site. Returned only on $select.
    [Oauth2PermissionGrants <IMicrosoftGraphOAuth2PermissionGrant[]>]: 
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ClientId <String>]: The object id (not appId) of the client service principal for the application which is authorized to act on behalf of a signed-in user when accessing an API. Required. Supports $filter (eq only).
      [ConsentType <String>]: Indicates if authorization is granted for the client application to impersonate all users or only a specific user. AllPrincipals indicates authorization to impersonate all users. Principal indicates authorization to impersonate a specific user. Consent on behalf of all users can be granted by an administrator. Non-admin users may be authorized to consent on behalf of themselves in some cases, for some delegated permissions. Required. Supports $filter (eq only).
      [PrincipalId <String>]: The id of the user on behalf of whom the client is authorized to access the resource, when consentType is Principal. If consentType is AllPrincipals this value is null. Required when consentType is Principal. Supports $filter (eq only).
      [ResourceId <String>]: The id of the resource service principal to which access is authorized. This identifies the API which the client is authorized to attempt to call on behalf of a signed-in user. Supports $filter (eq only).
      [Scope <String>]: A space-separated list of the claim values for delegated permissions which should be included in access tokens for the resource application (the API). For example, openid User.Read GroupMember.Read.All. Each claim value should match the value field of one of the delegated permissions defined by the API, listed in the oauth2PermissionScopes property of the resource service principal. Must not exceed 3850 characters in length.
    [OfficeLocation <String>]: The office location in the user's place of business. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [OnPremisesDistinguishedName <String>]: Contains the on-premises Active Directory distinguished name or DN. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select.
    [OnPremisesDomainName <String>]: Contains the on-premises domainFQDN, also called dnsDomainName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select.
    [OnPremisesExtensionAttributes <IMicrosoftGraphOnPremisesExtensionAttributes>]: onPremisesExtensionAttributes
      [(Any) <Object>]: This indicates any property can be added to this object.
      [ExtensionAttribute1 <String>]: First customizable extension attribute.
      [ExtensionAttribute10 <String>]: Tenth customizable extension attribute.
      [ExtensionAttribute11 <String>]: Eleventh customizable extension attribute.
      [ExtensionAttribute12 <String>]: Twelfth customizable extension attribute.
      [ExtensionAttribute13 <String>]: Thirteenth customizable extension attribute.
      [ExtensionAttribute14 <String>]: Fourteenth customizable extension attribute.
      [ExtensionAttribute15 <String>]: Fifteenth customizable extension attribute.
      [ExtensionAttribute2 <String>]: Second customizable extension attribute.
      [ExtensionAttribute3 <String>]: Third customizable extension attribute.
      [ExtensionAttribute4 <String>]: Fourth customizable extension attribute.
      [ExtensionAttribute5 <String>]: Fifth customizable extension attribute.
      [ExtensionAttribute6 <String>]: Sixth customizable extension attribute.
      [ExtensionAttribute7 <String>]: Seventh customizable extension attribute.
      [ExtensionAttribute8 <String>]: Eighth customizable extension attribute.
      [ExtensionAttribute9 <String>]: Ninth customizable extension attribute.
    [OnPremisesImmutableId <String>]: This property is used to associate an on-premises Active Directory user account to their Azure AD user object. This property must be specified when creating a new user account in the Graph if you are using a federated domain for the user's userPrincipalName (UPN) property. NOTE: The $ and _ characters cannot be used when specifying this property. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in)..
    [OnPremisesLastSyncDateTime <DateTime?>]: Indicates the last time at which the object was synced with the on-premises directory; for example: 2013-02-16T03:04:54Z. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in).
    [OnPremisesProvisioningErrors <IMicrosoftGraphOnPremisesProvisioningError[]>]: Errors when using Microsoft synchronization product during provisioning. Returned only on $select. Supports $filter (eq, not, ge, le).
    [OnPremisesSamAccountName <String>]: Contains the on-premises samAccountName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith).
    [OnPremisesSecurityIdentifier <String>]: Contains the on-premises security identifier (SID) for the user that was synchronized from on-premises to the cloud. Read-only. Returned only on $select.  Supports $filter (eq including on null values).
    [OnPremisesSyncEnabled <Boolean?>]: true if this user object is currently being synced from an on-premises Active Directory (AD); otherwise the user isn't being synced and can be managed in Azure Active Directory (Azure AD). Read-only. Returned only on $select. Supports $filter (eq, ne, not, in, and eq on null values).
    [OnPremisesUserPrincipalName <String>]: Contains the on-premises userPrincipalName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith).
    [Onenote <IMicrosoftGraphOnenote>]: onenote
    [OnlineMeetings <IMicrosoftGraphOnlineMeeting[]>]: Information about a meeting, including the URL used to join a meeting, the attendees' list, and the description.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AllowAttendeeToEnableCamera <Boolean?>]: Indicates whether attendees can turn on their camera.
      [AllowAttendeeToEnableMic <Boolean?>]: Indicates whether attendees can turn on their microphone.
      [AllowMeetingChat <String>]: meetingChatMode
      [AllowParticipantsToChangeName <Boolean?>]: 
      [AllowTeamworkReactions <Boolean?>]: Indicates whether Teams reactions are enabled for the meeting.
      [AllowedPresenters <String>]: onlineMeetingPresenters
      [AttendanceReports <IMicrosoftGraphMeetingAttendanceReport[]>]: The attendance reports of an online meeting. Read-only.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AttendanceRecords <IMicrosoftGraphAttendanceRecord[]>]: List of attendance records of an attendance report. Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AttendanceIntervals <IMicrosoftGraphAttendanceInterval[]>]: List of time periods between joining and leaving a meeting.
            [DurationInSeconds <Int32?>]: Duration of the meeting interval in seconds; that is, the difference between joinDateTime and leaveDateTime.
            [JoinDateTime <DateTime?>]: The time the attendee joined in UTC.
            [LeaveDateTime <DateTime?>]: The time the attendee left in UTC.
          [EmailAddress <String>]: Email address of the user associated with this attendance record.
          [Identity <IMicrosoftGraphIdentity>]: identity
          [Role <String>]: Role of the attendee. Possible values are: None, Attendee, Presenter, and Organizer.
          [TotalAttendanceInSeconds <Int32?>]: Total duration of the attendances in seconds.
        [MeetingEndDateTime <DateTime?>]: UTC time when the meeting ended. Read-only.
        [MeetingStartDateTime <DateTime?>]: UTC time when the meeting started. Read-only.
        [TotalParticipantCount <Int32?>]: Total number of participants. Read-only.
      [AttendeeReport <Byte[]>]: The content stream of the attendee report of a Microsoft Teams live event. Read-only.
      [AudioConferencing <IMicrosoftGraphAudioConferencing>]: audioConferencing
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ConferenceId <String>]: The conference id of the online meeting.
        [DialinUrl <String>]: A URL to the externally-accessible web page that contains dial-in information.
        [TollFreeNumber <String>]: 
        [TollFreeNumbers <String[]>]: List of toll-free numbers that are displayed in the meeting invite.
        [TollNumber <String>]: 
        [TollNumbers <String[]>]: List of toll numbers that are displayed in the meeting invite.
      [BroadcastSettings <IMicrosoftGraphBroadcastMeetingSettings>]: broadcastMeetingSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AllowedAudience <String>]: broadcastMeetingAudience
        [Captions <IMicrosoftGraphBroadcastMeetingCaptionSettings>]: broadcastMeetingCaptionSettings
          [(Any) <Object>]: This indicates any property can be added to this object.
          [IsCaptionEnabled <Boolean?>]: Indicates whether captions are enabled for this Teams live event.
          [SpokenLanguage <String>]: The spoken language.
          [TranslationLanguages <String[]>]: The translation languages (choose up to 6).
        [IsAttendeeReportEnabled <Boolean?>]: Indicates whether attendee report is enabled for this Teams live event. Default value is false.
        [IsQuestionAndAnswerEnabled <Boolean?>]: Indicates whether Q&A is enabled for this Teams live event. Default value is false.
        [IsRecordingEnabled <Boolean?>]: Indicates whether recording is enabled for this Teams live event. Default value is false.
        [IsVideoOnDemandEnabled <Boolean?>]: Indicates whether video on demand is enabled for this Teams live event. Default value is false.
      [ChatInfo <IMicrosoftGraphChatInfo>]: chatInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [MessageId <String>]: The unique identifier of a message in a Microsoft Teams channel.
        [ReplyChainMessageId <String>]: The ID of the reply message.
        [ThreadId <String>]: The unique identifier for a thread in Microsoft Teams.
      [CreationDateTime <DateTime?>]: The meeting creation time in UTC. Read-only.
      [EndDateTime <DateTime?>]: The meeting end time in UTC.
      [ExternalId <String>]: 
      [IsBroadcast <Boolean?>]: Indicates if this is a Teams live event.
      [IsEntryExitAnnounced <Boolean?>]: Indicates whether to announce when callers join or leave.
      [JoinInformation <IMicrosoftGraphItemBody>]: itemBody
      [JoinMeetingIdSettings <IMicrosoftGraphJoinMeetingIdSettings>]: joinMeetingIdSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [IsPasscodeRequired <Boolean?>]: Indicates whether a passcode is required to join a meeting when using joinMeetingId. Optional.
        [JoinMeetingId <String>]: The meeting ID to be used to join a meeting. Optional. Read-only.
        [Passcode <String>]: The passcode to join a meeting.  Optional. Read-only.
      [JoinWebUrl <String>]: The join URL of the online meeting. Read-only.
      [LobbyBypassSettings <IMicrosoftGraphLobbyBypassSettings>]: lobbyBypassSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [IsDialInBypassEnabled <Boolean?>]: Specifies whether or not to always let dial-in callers bypass the lobby. Optional.
        [Scope <String>]: lobbyBypassScope
      [Participants <IMicrosoftGraphMeetingParticipants>]: meetingParticipants
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Attendees <IMicrosoftGraphMeetingParticipantInfo[]>]: 
          [Identity <IMicrosoftGraphIdentitySet>]: identitySet
          [Role <String>]: onlineMeetingRole
          [Upn <String>]: User principal name of the participant.
        [Organizer <IMicrosoftGraphMeetingParticipantInfo>]: meetingParticipantInfo
      [RecordAutomatically <Boolean?>]: Indicates whether to record the meeting automatically.
      [StartDateTime <DateTime?>]: The meeting start time in UTC.
      [Subject <String>]: The subject of the online meeting.
      [VideoTeleconferenceId <String>]: The video teleconferencing ID. Read-only.
      [WatermarkProtection <IMicrosoftGraphWatermarkProtectionValues>]: watermarkProtectionValues
        [(Any) <Object>]: This indicates any property can be added to this object.
        [IsEnabledForContentSharing <Boolean?>]: Indicates whether to apply a watermark to any shared content.
        [IsEnabledForVideo <Boolean?>]: Indicates whether to apply a watermark to everyone's video feed.
    [OtherMails <String[]>]: A list of additional email addresses for the user; for example: ['bob@contoso.com', 'Robert@fabrikam.com']. NOTE: This property cannot contain accent characters. Returned only on $select. Supports $filter (eq, not, ge, le, in, startsWith, endsWith, /$count eq 0, /$count ne 0).
    [Outlook <IMicrosoftGraphOutlookUser>]: outlookUser
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [MasterCategories <IMicrosoftGraphOutlookCategory[]>]: A list of categories defined for the user.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Color <String>]: categoryColor
        [DisplayName <String>]: A unique name that identifies a category in the user's mailbox. After a category is created, the name cannot be changed. Read-only.
    [OwnedDevices <IMicrosoftGraphDirectoryObject[]>]: Devices that are owned by the user. Read-only. Nullable. Supports $expand and $filter (/$count eq 0, /$count ne 0, /$count eq 1, /$count ne 1).
    [OwnedObjects <IMicrosoftGraphDirectoryObject[]>]: Directory objects that are owned by the user. Read-only. Nullable. Supports $expand.
    [PasswordPolicies <String>]: Specifies password policies for the user. This value is an enumeration with one possible value being DisableStrongPassword, which allows weaker passwords than the default policy to be specified. DisablePasswordExpiration can also be specified. The two may be specified together; for example: DisablePasswordExpiration, DisableStrongPassword. Returned only on $select. For more information on the default password policies, see Azure AD pasword policies. Supports $filter (ne, not, and eq on null values).
    [PasswordProfile <IMicrosoftGraphPasswordProfile>]: passwordProfile
      [(Any) <Object>]: This indicates any property can be added to this object.
      [ForceChangePasswordNextSignIn <Boolean?>]: true if the user must change her password on the next login; otherwise false.
      [ForceChangePasswordNextSignInWithMfa <Boolean?>]: If true, at next sign-in, the user must perform a multi-factor authentication (MFA) before being forced to change their password. The behavior is identical to forceChangePasswordNextSignIn except that the user is required to first perform a multi-factor authentication before password change. After a password change, this property will be automatically reset to false. If not set, default is false.
      [Password <String>]: The password for the user. This property is required when a user is created. It can be updated, but the user will be required to change the password on the next login. The password must satisfy minimum requirements as specified by the user’s passwordPolicies property. By default, a strong password is required.
    [PastProjects <String[]>]: A list for the user to enumerate their past projects. Returned only on $select.
    [People <IMicrosoftGraphPerson[]>]: People that are relevant to the user. Read-only. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Birthday <String>]: The person's birthday.
      [CompanyName <String>]: The name of the person's company.
      [Department <String>]: The person's department.
      [DisplayName <String>]: The person's display name.
      [GivenName <String>]: The person's given name.
      [ImAddress <String>]: The instant message voice over IP (VOIP) session initiation protocol (SIP) address for the user. Read-only.
      [IsFavorite <Boolean?>]: True if the user has flagged this person as a favorite.
      [JobTitle <String>]: The person's job title.
      [OfficeLocation <String>]: The location of the person's office.
      [PersonNotes <String>]: Free-form notes that the user has taken about this person.
      [PersonType <IMicrosoftGraphPersonType>]: personType
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Class <String>]: The type of data source, such as Person.
        [Subclass <String>]: The secondary type of data source, such as OrganizationUser.
      [Phones <IMicrosoftGraphPhone[]>]: The person's phone numbers.
      [PostalAddresses <IMicrosoftGraphLocation[]>]: The person's addresses.
      [Profession <String>]: The person's profession.
      [ScoredEmailAddresses <IMicrosoftGraphScoredEmailAddress[]>]: The person's email addresses.
        [Address <String>]: The email address.
        [ItemId <String>]: 
        [RelevanceScore <Double?>]: The relevance score of the email address. A relevance score is used as a sort key, in relation to the other returned results. A higher relevance score value corresponds to a more relevant result. Relevance is determined by the user’s communication and collaboration patterns and business relationships.
        [SelectionLikelihood <String>]: selectionLikelihoodInfo
      [Surname <String>]: The person's surname.
      [UserPrincipalName <String>]: The user principal name (UPN) of the person. The UPN is an Internet-style login name for the person based on the Internet standard RFC 822. By convention, this should map to the person's email name. The general format is alias@domain.
      [Websites <IMicrosoftGraphWebsite[]>]: The person's websites.
        [Address <String>]: The URL of the website.
        [DisplayName <String>]: The display name of the web site.
        [Type <String>]: websiteType
      [YomiCompany <String>]: The phonetic Japanese name of the person's company.
    [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
    [Photos <IMicrosoftGraphProfilePhoto[]>]: 
    [Planner <IMicrosoftGraphPlannerUser>]: plannerUser
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Plans <IMicrosoftGraphPlannerPlan[]>]: Read-only. Nullable. Returns the plannerTasks assigned to the user.
      [Tasks <IMicrosoftGraphPlannerTask[]>]: Read-only. Nullable. Returns the plannerPlans shared with the user.
    [PostalCode <String>]: The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code. Maximum length is 40 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [PreferredDataLocation <String>]: The preferred data location for the user. For more information, see OneDrive Online Multi-Geo.
    [PreferredLanguage <String>]: The preferred language for the user. Should follow ISO 639-1 Code; for example en-US. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values)
    [PreferredName <String>]: The preferred name for the user. Not Supported. This attribute returns an empty string.Returned only on $select.
    [Presence <IMicrosoftGraphPresence>]: presence
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Activity <String>]: The supplemental information to a user's availability. Possible values are Available, Away, BeRightBack, Busy, DoNotDisturb, InACall, InAConferenceCall, Inactive, InAMeeting, Offline, OffWork, OutOfOffice, PresenceUnknown, Presenting, UrgentInterruptionsOnly.
      [Availability <String>]: The base presence information for a user. Possible values are Available, AvailableIdle,  Away, BeRightBack, Busy, BusyIdle, DoNotDisturb, Offline, PresenceUnknown
    [Print <IMicrosoftGraphUserPrint>]: userPrint
      [(Any) <Object>]: This indicates any property can be added to this object.
      [RecentPrinterShares <IMicrosoftGraphPrinterShare[]>]: 
        [Capabilities <IMicrosoftGraphPrinterCapabilities>]: printerCapabilities
          [(Any) <Object>]: This indicates any property can be added to this object.
          [BottomMargins <Int32[]>]: A list of supported bottom margins(in microns) for the printer.
          [Collation <Boolean?>]: True if the printer supports collating when printing muliple copies of a multi-page document; false otherwise.
          [ColorModes <String[]>]: The color modes supported by the printer. Valid values are described in the following table.
          [ContentTypes <String[]>]: A list of supported content (MIME) types that the printer supports. It is not guaranteed that the Universal Print service supports printing all of these MIME types.
          [CopiesPerJob <IMicrosoftGraphIntegerRange>]: integerRange
            [(Any) <Object>]: This indicates any property can be added to this object.
            [End <Int64?>]: The inclusive upper bound of the integer range.
            [Start <Int64?>]: The inclusive lower bound of the integer range.
          [Dpis <Int32[]>]: The list of print resolutions in DPI that are supported by the printer.
          [DuplexModes <String[]>]: The list of duplex modes that are supported by the printer. Valid values are described in the following table.
          [FeedOrientations <String[]>]: The list of feed orientations that are supported by the printer.
          [Finishings <String[]>]: Finishing processes the printer supports for a printed document.
          [InputBins <String[]>]: Supported input bins for the printer.
          [IsColorPrintingSupported <Boolean?>]: True if color printing is supported by the printer; false otherwise. Read-only.
          [IsPageRangeSupported <Boolean?>]: True if the printer supports printing by page ranges; false otherwise.
          [LeftMargins <Int32[]>]: A list of supported left margins(in microns) for the printer.
          [MediaColors <String[]>]: The media (i.e., paper) colors supported by the printer.
          [MediaSizes <String[]>]: The media sizes supported by the printer. Supports standard size names for ISO and ANSI media sizes. Valid values are in the following table.
          [MediaTypes <String[]>]: The media types supported by the printer.
          [MultipageLayouts <String[]>]: The presentation directions supported by the printer. Supported values are described in the following table.
          [Orientations <String[]>]: The print orientations supported by the printer. Valid values are described in the following table.
          [OutputBins <String[]>]: The printer's supported output bins (trays).
          [PagesPerSheet <Int32[]>]: Supported number of Input Pages to impose upon a single Impression.
          [Qualities <String[]>]: The print qualities supported by the printer.
          [RightMargins <Int32[]>]: A list of supported right margins(in microns) for the printer.
          [Scalings <String[]>]: Supported print scalings.
          [SupportsFitPdfToPage <Boolean?>]: True if the printer supports scaling PDF pages to match the print media size; false otherwise.
          [TopMargins <Int32[]>]: A list of supported top margins(in microns) for the printer.
        [Defaults <IMicrosoftGraphPrinterDefaults>]: printerDefaults
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ColorMode <String>]: printColorMode
          [ContentType <String>]: The default content (MIME) type to use when processing documents.
          [CopiesPerJob <Int32?>]: The default number of copies printed per job.
          [Dpi <Int32?>]: The default resolution in DPI to use when printing the job.
          [DuplexMode <String>]: printDuplexMode
          [Finishings <String[]>]: The default set of finishings to apply to print jobs. Valid values are described in the following table.
          [FitPdfToPage <Boolean?>]: The default fitPdfToPage setting. True to fit each page of a PDF document to a physical sheet of media; false to let the printer decide how to lay out impressions.
          [InputBin <String>]: 
          [MediaColor <String>]: The default media (such as paper) color to print the document on.
          [MediaSize <String>]: The default media size to use. Supports standard size names for ISO and ANSI media sizes. Valid values are listed in the printerCapabilities topic.
          [MediaType <String>]: The default media (such as paper) type to print the document on.
          [MultipageLayout <String>]: printMultipageLayout
          [Orientation <String>]: printOrientation
          [OutputBin <String>]: The default output bin to place completed prints into. See the printer's capabilities for a list of supported output bins.
          [PagesPerSheet <Int32?>]: The default number of document pages to print on each sheet.
          [Quality <String>]: printQuality
          [Scaling <String>]: printScaling
        [DisplayName <String>]: The name of the printer/printerShare.
        [IsAcceptingJobs <Boolean?>]: Whether the printer/printerShare is currently accepting new print jobs.
        [Jobs <IMicrosoftGraphPrintJob[]>]: The list of jobs that are queued for printing by the printer/printerShare.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Configuration <IMicrosoftGraphPrintJobConfiguration>]: printJobConfiguration
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Collate <Boolean?>]: Whether the printer should collate pages wehen printing multiple copies of a multi-page document.
            [ColorMode <String>]: printColorMode
            [Copies <Int32?>]: The number of copies that should be printed. Read-only.
            [Dpi <Int32?>]: The resolution to use when printing the job, expressed in dots per inch (DPI). Read-only.
            [DuplexMode <String>]: printDuplexMode
            [FeedOrientation <String>]: printerFeedOrientation
            [Finishings <String[]>]: Finishing processes to use when printing.
            [FitPdfToPage <Boolean?>]: 
            [InputBin <String>]: The input bin (tray) to use when printing. See the printer's capabilities for a list of supported input bins.
            [Margin <IMicrosoftGraphPrintMargin>]: printMargin
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Bottom <Int32?>]: The margin in microns from the bottom edge.
              [Left <Int32?>]: The margin in microns from the left edge.
              [Right <Int32?>]: The margin in microns from the right edge.
              [Top <Int32?>]: The margin in microns from the top edge.
            [MediaSize <String>]: The media size to use when printing. Supports standard size names for ISO and ANSI media sizes.
            [MediaType <String>]: 
            [MultipageLayout <String>]: printMultipageLayout
            [Orientation <String>]: printOrientation
            [OutputBin <String>]: 
            [PageRanges <IMicrosoftGraphIntegerRange[]>]: 
            [PagesPerSheet <Int32?>]: 
            [Quality <String>]: printQuality
            [Scaling <String>]: printScaling
          [CreatedBy <IMicrosoftGraphUserIdentity>]: userIdentity
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
            [Id <String>]: Unique identifier for the identity.
            [IPAddress <String>]: Indicates the client IP address used by user performing the activity (audit log only).
            [UserPrincipalName <String>]: The userPrincipalName attribute of the user.
          [CreatedDateTime <DateTime?>]: The DateTimeOffset when the job was created. Read-only.
          [Documents <IMicrosoftGraphPrintDocument[]>]: 
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [ContentType <String>]: The document's content (MIME) type. Read-only.
            [DisplayName <String>]: The document's name. Read-only.
            [Size <Int64?>]: The document's size in bytes. Read-only.
          [IsFetchable <Boolean?>]: If true, document can be fetched by printer.
          [RedirectedFrom <String>]: Contains the source job URL, if the job has been redirected from another printer.
          [RedirectedTo <String>]: Contains the destination job URL, if the job has been redirected to another printer.
          [Status <IMicrosoftGraphPrintJobStatus>]: printJobStatus
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Description <String>]: A human-readable description of the print job's current processing state. Read-only.
            [Details <String[]>]: Additional details for print job state. Valid values are described in the following table. Read-only.
            [IsAcquiredByPrinter <Boolean?>]: True if the job was acknowledged by a printer; false otherwise. Read-only.
            [State <String>]: printJobProcessingState
          [Tasks <IMicrosoftGraphPrintTask[]>]: A list of printTasks that were triggered by this print job.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Definition <IMicrosoftGraphPrintTaskDefinition>]: printTaskDefinition
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [CreatedBy <IMicrosoftGraphAppIdentity>]: appIdentity
                [(Any) <Object>]: This indicates any property can be added to this object.
                [AppId <String>]: Refers to the Unique GUID representing Application Id in the Azure Active Directory.
                [DisplayName <String>]: Refers to the Application Name displayed in the Azure Portal.
                [ServicePrincipalId <String>]: Refers to the Unique GUID indicating Service Principal Id in Azure Active Directory for the corresponding App.
                [ServicePrincipalName <String>]: Refers to the Service Principal Name is the Application name in the tenant.
              [DisplayName <String>]: The name of the printTaskDefinition.
              [Tasks <IMicrosoftGraphPrintTask[]>]: A list of tasks that have been created based on this definition. The list includes currently running tasks and recently completed tasks. Read-only.
            [ParentUrl <String>]: The URL for the print entity that triggered this task. For example, https://graph.microsoft.com/v1.0/print/printers/{printerId}/jobs/{jobId}. Read-only.
            [Status <IMicrosoftGraphPrintTaskStatus>]: printTaskStatus
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Description <String>]: A human-readable description of the current processing state of the printTask.
              [State <String>]: printTaskProcessingState
            [Trigger <IMicrosoftGraphPrintTaskTrigger>]: printTaskTrigger
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Definition <IMicrosoftGraphPrintTaskDefinition>]: printTaskDefinition
              [Event <String>]: printEvent
        [Location <IMicrosoftGraphPrinterLocation>]: printerLocation
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AltitudeInMeters <Int32?>]: The altitude, in meters, that the printer is located at.
          [Building <String>]: The building that the printer is located in.
          [City <String>]: The city that the printer is located in.
          [CountryOrRegion <String>]: The country or region that the printer is located in.
          [Floor <String>]: The floor that the printer is located on. Only numerical values are supported right now.
          [FloorDescription <String>]: The description of the floor that the printer is located on.
          [Latitude <Double?>]: The latitude that the printer is located at.
          [Longitude <Double?>]: The longitude that the printer is located at.
          [Organization <String[]>]: The organizational hierarchy that the printer belongs to. The elements should be in hierarchical order.
          [PostalCode <String>]: The postal code that the printer is located in.
          [RoomDescription <String>]: The description of the room that the printer is located in.
          [RoomName <String>]: The room that the printer is located in. Only numerical values are supported right now.
          [Site <String>]: The site that the printer is located in.
          [StateOrProvince <String>]: The state or province that the printer is located in.
          [StreetAddress <String>]: The street address where the printer is located.
          [Subdivision <String[]>]: The subdivision that the printer is located in. The elements should be in hierarchical order.
          [Subunit <String[]>]: 
        [Manufacturer <String>]: The manufacturer of the printer/printerShare.
        [Model <String>]: The model name of the printer/printerShare.
        [Status <IMicrosoftGraphPrinterStatus>]: printerStatus
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Description <String>]: A human-readable description of the printer's current processing state. Read-only.
          [Details <String[]>]: The list of details describing why the printer is in the current state. Valid values are described in the following table. Read-only.
          [State <String>]: printerProcessingState
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AllowAllUsers <Boolean?>]: If true, all users and groups will be granted access to this printer share. This supersedes the allow lists defined by the allowedUsers and allowedGroups navigation properties.
        [AllowedGroups <IMicrosoftGraphGroup[]>]: The groups whose users have access to print using the printer.
        [AllowedUsers <IMicrosoftGraphUser[]>]: The users who have access to print using the printer.
        [CreatedDateTime <DateTime?>]: The DateTimeOffset when the printer share was created. Read-only.
        [Printer <IMicrosoftGraphPrinter>]: printer
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Capabilities <IMicrosoftGraphPrinterCapabilities>]: printerCapabilities
          [Defaults <IMicrosoftGraphPrinterDefaults>]: printerDefaults
          [DisplayName <String>]: The name of the printer/printerShare.
          [IsAcceptingJobs <Boolean?>]: Whether the printer/printerShare is currently accepting new print jobs.
          [Jobs <IMicrosoftGraphPrintJob[]>]: The list of jobs that are queued for printing by the printer/printerShare.
          [Location <IMicrosoftGraphPrinterLocation>]: printerLocation
          [Manufacturer <String>]: The manufacturer of the printer/printerShare.
          [Model <String>]: The model name of the printer/printerShare.
          [Status <IMicrosoftGraphPrinterStatus>]: printerStatus
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Connectors <IMicrosoftGraphPrintConnector[]>]: The connectors that are associated with the printer.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [AppVersion <String>]: The connector's version.
            [DisplayName <String>]: The name of the connector.
            [FullyQualifiedDomainName <String>]: The connector machine's hostname.
            [Location <IMicrosoftGraphPrinterLocation>]: printerLocation
            [OperatingSystem <String>]: The connector machine's operating system version.
            [RegisteredDateTime <DateTime?>]: The DateTimeOffset when the connector was registered.
          [HasPhysicalDevice <Boolean?>]: True if the printer has a physical device for printing. Read-only.
          [IsShared <Boolean?>]: True if the printer is shared; false otherwise. Read-only.
          [LastSeenDateTime <DateTime?>]: The most recent dateTimeOffset when a printer interacted with Universal Print. Read-only.
          [RegisteredDateTime <DateTime?>]: The DateTimeOffset when the printer was registered. Read-only.
          [Shares <IMicrosoftGraphPrinterShare[]>]: The list of printerShares that are associated with the printer. Currently, only one printerShare can be associated with the printer. Read-only. Nullable.
          [TaskTriggers <IMicrosoftGraphPrintTaskTrigger[]>]: A list of task triggers that are associated with the printer.
        [ViewPoint <IMicrosoftGraphPrinterShareViewpoint>]: printerShareViewpoint
          [(Any) <Object>]: This indicates any property can be added to this object.
          [LastUsedDateTime <DateTime?>]: Date and time when the printer was last used by the signed-in user. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
    [ProvisionedPlans <IMicrosoftGraphProvisionedPlan[]>]: The plans that are provisioned for the user. Read-only. Not nullable. Returned only on $select. Supports $filter (eq, not, ge, le).
      [CapabilityStatus <String>]: For example, 'Enabled'.
      [ProvisioningStatus <String>]: For example, 'Success'.
      [Service <String>]: The name of the service; for example, 'AccessControlS2S'
    [ProxyAddresses <String[]>]: For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. Changes to the mail property will also update this collection to include the value as an SMTP address. For more information, see mail and proxyAddresses properties. The proxy address prefixed with SMTP (capitalized) is the primary proxy address while those prefixed with smtp are the secondary proxy addresses. For Azure AD B2C accounts, this property has a limit of ten unique addresses. Read-only in Microsoft Graph; you can update this property only through the Microsoft 365 admin center. Not nullable. Returned only on $select. Supports $filter (eq, not, ge, le, startsWith, endsWith, /$count eq 0, /$count ne 0).
    [RegisteredDevices <IMicrosoftGraphDirectoryObject[]>]: Devices that are registered for the user. Read-only. Nullable. Supports $expand.
    [Responsibilities <String[]>]: A list for the user to enumerate their responsibilities. Returned only on $select.
    [Schools <String[]>]: A list for the user to enumerate the schools they have attended. Returned only on $select.
    [ScopedRoleMemberOf <IMicrosoftGraphScopedRoleMembership[]>]: 
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AdministrativeUnitId <String>]: Unique identifier for the administrative unit that the directory role is scoped to
      [RoleId <String>]: Unique identifier for the directory role that the member is in.
      [RoleMemberInfo <IMicrosoftGraphIdentity>]: identity
    [SecurityIdentifier <String>]: Security identifier (SID) of the user, used in Windows scenarios. Read-only. Returned by default. Supports $select and $filter (eq, not, ge, le, startsWith).
    [Settings <IMicrosoftGraphUserSettings>]: userSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ContributionToContentDiscoveryAsOrganizationDisabled <Boolean?>]: Reflects the organization level setting controlling delegate access to the trending API. When set to true, the organization doesn't have access to Office Delve. The relevancy of the content displayed in Microsoft 365, for example in Suggested sites in SharePoint Home and the Discover view in OneDrive for Business is affected for the whole organization. This setting is read-only and can only be changed by administrators in the SharePoint admin center.
      [ContributionToContentDiscoveryDisabled <Boolean?>]: When set to true, the delegate access to the user's trending API is disabled. When set to true, documents in the user's Office Delve are disabled. When set to true, the relevancy of the content displayed in Microsoft 365, for example in Suggested sites in SharePoint Home and the Discover view in OneDrive for Business is affected. Users can control this setting in Office Delve.
      [ShiftPreferences <IMicrosoftGraphShiftPreferences>]: shiftPreferences
        [(Any) <Object>]: This indicates any property can be added to this object.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Availability <IMicrosoftGraphShiftAvailability[]>]: Availability of the user to be scheduled for work and its recurrence pattern.
          [Recurrence <IMicrosoftGraphPatternedRecurrence>]: patternedRecurrence
          [TimeSlots <IMicrosoftGraphTimeRange[]>]: The time slot(s) preferred by the user.
            [EndTime <String>]: End time for the time range.
            [StartTime <String>]: Start time for the time range.
          [TimeZone <String>]: Specifies the time zone for the indicated time.
    [ShowInAddressList <Boolean?>]: Do not use in Microsoft Graph. Manage this property through the Microsoft 365 admin center instead. Represents whether the user should be included in the Outlook global address list. See Known issue.
    [SignInActivity <IMicrosoftGraphSignInActivity>]: signInActivity
      [(Any) <Object>]: This indicates any property can be added to this object.
      [LastNonInteractiveSignInDateTime <DateTime?>]: The last non-interactive sign-in date for a specific user. You can use this field to calculate the last time a client attempted to sign into the directory on behalf of a user. Because some users may use clients to access tenant resources rather than signing into your tenant directly, you can use the non-interactive sign-in date to along with lastSignInDateTime to identify inactive users. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is: '2014-01-01T00:00:00Z'. Azure AD maintains non-interactive sign-ins going back to May 2020. For more information about using the value of this property, see Manage inactive user accounts in Azure AD.
      [LastNonInteractiveSignInRequestId <String>]: Request identifier of the last non-interactive sign-in performed by this user.
      [LastSignInDateTime <DateTime?>]: The last interactive sign-in date and time for a specific user. You can use this field to calculate the last time a user attempted to sign into the directory with an interactive authentication method. This field can be used to build reports, such as inactive users. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is: '2014-01-01T00:00:00Z'. Azure AD maintains interactive sign-ins going back to April 2020. For more information about using the value of this property, see Manage inactive user accounts in Azure AD.
      [LastSignInRequestId <String>]: Request identifier of the last interactive sign-in performed by this user.
    [SignInSessionsValidFromDateTime <DateTime?>]: Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications will get an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft Graph).  If this happens, the application will need to acquire a new refresh token by making a request to the authorize endpoint. Read-only. Use revokeSignInSessions to reset. Returned only on $select.
    [Skills <String[]>]: A list for the user to enumerate their skills. Returned only on $select.
    [State <String>]: The state or province in the user's address. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [StreetAddress <String>]: The street address of the user's place of business. Maximum length is 1024 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [Surname <String>]: The user's surname (family name or last name). Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [Teamwork <IMicrosoftGraphUserTeamwork>]: userTeamwork
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AssociatedTeams <IMicrosoftGraphAssociatedTeamInfo[]>]: The list of associatedTeamInfo objects that a user is associated with.
        [DisplayName <String>]: The name of the team.
        [Team <IMicrosoftGraphTeam>]: team
        [TenantId <String>]: The ID of the Azure Active Directory tenant.
        [Id <String>]: The unique idenfier for an entity. Read-only.
      [InstalledApps <IMicrosoftGraphUserScopeTeamsAppInstallation[]>]: The apps installed in the personal scope of this user.
        [ConsentedPermissionSet <IMicrosoftGraphTeamsAppPermissionSet>]: teamsAppPermissionSet
        [TeamsApp <IMicrosoftGraphTeamsApp>]: teamsApp
        [TeamsAppDefinition <IMicrosoftGraphTeamsAppDefinition>]: teamsAppDefinition
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Chat <IMicrosoftGraphChat>]: chat
    [Todo <IMicrosoftGraphTodo>]: todo
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Lists <IMicrosoftGraphTodoTaskList[]>]: The task lists in the users mailbox.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DisplayName <String>]: The name of the task list.
        [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the task list. Nullable.
        [IsOwner <Boolean?>]: True if the user is owner of the given task list.
        [IsShared <Boolean?>]: True if the task list is shared with other users
        [Tasks <IMicrosoftGraphTodoTask[]>]: The tasks in this task list. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AttachmentSessions <IMicrosoftGraphAttachmentSession[]>]: 
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Content <Byte[]>]: The content streams that are uploaded.
            [ExpirationDateTime <DateTime?>]: The date and time in UTC when the upload session will expire. The complete file must be uploaded before this expiration time is reached.
            [NextExpectedRanges <String[]>]: Indicates a single value {start} that represents the location in the file where the next upload should begin.
          [Attachments <IMicrosoftGraphAttachmentBase[]>]: A collection of file attachments for the task.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [ContentType <String>]: The MIME type.
            [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
            [Name <String>]: The display name of the attachment. This does not need to be the actual file name.
            [Size <Int32?>]: The length of the attachment in bytes.
          [Body <IMicrosoftGraphItemBody>]: itemBody
          [BodyLastModifiedDateTime <DateTime?>]: The date and time when the task body was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
          [Categories <String[]>]: The categories associated with the task. Each category corresponds to the displayName property of an outlookCategory that the user has defined.
          [ChecklistItems <IMicrosoftGraphChecklistItem[]>]: A collection of checklistItems linked to a task.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [CheckedDateTime <DateTime?>]: The date and time when the checklistItem was finished.
            [CreatedDateTime <DateTime?>]: The date and time when the checklistItem was created.
            [DisplayName <String>]: Field indicating the title of checklistItem.
            [IsChecked <Boolean?>]: State indicating whether the item is checked off or not.
          [CompletedDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
          [CreatedDateTime <DateTime?>]: The date and time when the task was created. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
          [DueDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
          [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the task. Nullable.
          [HasAttachments <Boolean?>]: Indicates whether the task has attachments.
          [Importance <String>]: importance
          [IsReminderOn <Boolean?>]: Set to true if an alert is set to remind the user of the task.
          [LastModifiedDateTime <DateTime?>]: The date and time when the task was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
          [LinkedResources <IMicrosoftGraphLinkedResource[]>]: A collection of resources linked to the task.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [ApplicationName <String>]: The app name of the source that sends the linkedResource.
            [DisplayName <String>]: The title of the linkedResource.
            [ExternalId <String>]: ID of the object that is associated with this task on the third-party/partner system.
            [WebUrl <String>]: Deep link to the linkedResource.
          [Recurrence <IMicrosoftGraphPatternedRecurrence>]: patternedRecurrence
          [ReminderDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
          [StartDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
          [Status <String>]: taskStatus
          [Title <String>]: A brief description of the task.
        [WellknownListName <String>]: wellknownListName
    [TransitiveMemberOf <IMicrosoftGraphDirectoryObject[]>]: The groups, including nested groups, and directory roles that a user is a member of. Nullable.
    [UsageLocation <String>]: A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries.  Examples include: US, JP, and GB. Not nullable. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [UserPrincipalName <String>]: The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain must be present in the tenant's collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization.NOTE: This property cannot contain accent characters. Only the following characters are allowed A - Z, a - z, 0 - 9, ' . - _ ! # ^ ~. For the complete list of allowed characters, see username policies. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, endsWith) and $orderBy.
    [UserType <String>]: A string value that can be used to classify user types in your directory, such as Member and Guest. Returned only on $select. Supports $filter (eq, ne, not, in, and eq on null values). NOTE: For more information about the permissions for member and guest users, see What are the default user permissions in Azure Active Directory?
  [WindowsProtectionState <IMicrosoftGraphWindowsProtectionState>]: Device protection status entity.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AntiMalwareVersion <String>]: Current anti malware version
    [DetectedMalwareState <IMicrosoftGraphWindowsDeviceMalwareState[]>]: Device malware list
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AdditionalInformationUrl <String>]: Information URL to learn more about the malware
      [Category <WindowsMalwareCategory?>]: Malware category id
      [DetectionCount <Int32?>]: Number of times the malware is detected
      [DisplayName <String>]: Malware name
      [ExecutionState <WindowsMalwareExecutionState?>]: Malware execution status
      [InitialDetectionDateTime <DateTime?>]: Initial detection datetime of the malware
      [LastStateChangeDateTime <DateTime?>]: The last time this particular threat was changed
      [Severity <WindowsMalwareSeverity?>]: Malware severity
      [State <WindowsMalwareState?>]: Malware current status
      [ThreatState <WindowsMalwareThreatState?>]: Malware threat status
    [DeviceState <WindowsDeviceHealthState?>]: Computer endpoint protection state
    [EngineVersion <String>]: Current endpoint protection engine's version
    [FullScanOverdue <Boolean?>]: When TRUE indicates full scan is overdue, when FALSE indicates full scan is not overdue. Defaults to setting on client device.
    [FullScanRequired <Boolean?>]: When TRUE indicates full scan is required, when FALSE indicates full scan is not required. Defaults to setting on client device.
    [IsVirtualMachine <Boolean?>]: When TRUE indicates the device is a virtual machine, when FALSE indicates the device is not a virtual machine. Defaults to setting on client device.
    [LastFullScanDateTime <DateTime?>]: Last quick scan datetime
    [LastFullScanSignatureVersion <String>]: Last full scan signature version
    [LastQuickScanDateTime <DateTime?>]: Last quick scan datetime
    [LastQuickScanSignatureVersion <String>]: Last quick scan signature version
    [LastReportedDateTime <DateTime?>]: Last device health status reported time
    [MalwareProtectionEnabled <Boolean?>]: When TRUE indicates anti malware is enabled when FALSE indicates anti malware is not enabled.
    [NetworkInspectionSystemEnabled <Boolean?>]: When TRUE indicates network inspection system enabled, when FALSE indicates network inspection system is not enabled. Defaults to setting on client device.
    [ProductStatus <WindowsDefenderProductStatus?>]: Product Status of Windows Defender
    [QuickScanOverdue <Boolean?>]: When TRUE indicates quick scan is overdue, when FALSE indicates quick scan is not overdue. Defaults to setting on client device.
    [RealTimeProtectionEnabled <Boolean?>]: When TRUE indicates real time protection is enabled, when FALSE indicates real time protection is not enabled. Defaults to setting on client device.
    [RebootRequired <Boolean?>]: When TRUE indicates reboot is required, when FALSE indicates when TRUE indicates reboot is not required. Defaults to setting on client device.
    [SignatureUpdateOverdue <Boolean?>]: When TRUE indicates signature is out of date, when FALSE indicates signature is not out of date. Defaults to setting on client device.
    [SignatureVersion <String>]: Current malware definitions version
    [TamperProtectionEnabled <Boolean?>]: When TRUE indicates the Windows Defender tamper protection feature is enabled, when FALSE indicates the Windows Defender tamper protection feature is not enabled. Defaults to setting on client device.

CONFIGURATIONMANAGERCLIENTENABLEDFEATURES <IMicrosoftGraphConfigurationManagerClientEnabledFeatures>: configuration Manager client enabled features
  [(Any) <Object>]: This indicates any property can be added to this object.
  [CompliancePolicy <Boolean?>]: Whether compliance policy is managed by Intune
  [DeviceConfiguration <Boolean?>]: Whether device configuration is managed by Intune
  [Inventory <Boolean?>]: Whether inventory is managed by Intune
  [ModernApps <Boolean?>]: Whether modern application is managed by Intune
  [ResourceAccess <Boolean?>]: Whether resource access is managed by Intune
  [WindowsUpdateForBusiness <Boolean?>]: Whether Windows Update for Business is managed by Intune

DEVICECATEGORY <IMicrosoftGraphDeviceCategory>: Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Description <String>]: Optional description for the device category.
  [DisplayName <String>]: Display name for the device category.

DEVICECOMPLIANCEPOLICYSTATES <IMicrosoftGraphDeviceCompliancePolicyState[]>: Device compliance policy states for this device.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceCompliancePolicySettingState[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

DEVICECONFIGURATIONSTATES <IMicrosoftGraphDeviceConfigurationState[]>: Device configuration states for this device.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceConfigurationSettingState[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

DEVICEHEALTHATTESTATIONSTATE <IMicrosoftGraphDeviceHealthAttestationState>: deviceHealthAttestationState
  [(Any) <Object>]: This indicates any property can be added to this object.
  [AttestationIdentityKey <String>]: TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.
  [BitLockerStatus <String>]: On or Off of BitLocker Drive Encryption
  [BootAppSecurityVersion <String>]: The security version number of the Boot Application
  [BootDebugging <String>]: When bootDebugging is enabled, the device is used in development and testing
  [BootManagerSecurityVersion <String>]: The security version number of the Boot Application
  [BootManagerVersion <String>]: The version of the Boot Manager
  [BootRevisionListInfo <String>]: The Boot Revision List that was loaded during initial boot on the attested device
  [CodeIntegrity <String>]: When code integrity is enabled, code execution is restricted to integrity verified code
  [CodeIntegrityCheckVersion <String>]: The version of the Boot Manager
  [CodeIntegrityPolicy <String>]: The Code Integrity policy that is controlling the security of the boot environment
  [ContentNamespaceUrl <String>]: The DHA report version. (Namespace version)
  [ContentVersion <String>]: The HealthAttestation state schema version
  [DataExcutionPolicy <String>]: DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
  [DeviceHealthAttestationStatus <String>]: The DHA report version. (Namespace version)
  [EarlyLaunchAntiMalwareDriverProtection <String>]: ELAM provides protection for the computers in your network when they start up
  [HealthAttestationSupportedStatus <String>]: This attribute indicates if DHA is supported for the device
  [HealthStatusMismatchInfo <String>]: This attribute appears if DHA-Service detects an integrity issue
  [IssuedDateTime <DateTime?>]: The DateTime when device was evaluated or issued to MDM
  [LastUpdateDateTime <String>]: The Timestamp of the last update.
  [OperatingSystemKernelDebugging <String>]: When operatingSystemKernelDebugging is enabled, the device is used in development and testing
  [OperatingSystemRevListInfo <String>]: The Operating System Revision List that was loaded during initial boot on the attested device
  [Pcr0 <String>]: The measurement that is captured in PCR[0]
  [PcrHashAlgorithm <String>]: Informational attribute that identifies the HASH algorithm that was used by TPM
  [ResetCount <Int64?>]: The number of times a PC device has hibernated or resumed
  [RestartCount <Int64?>]: The number of times a PC device has rebooted
  [SafeMode <String>]: Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
  [SecureBoot <String>]: When Secure Boot is enabled, the core components must have the correct cryptographic signatures
  [SecureBootConfigurationPolicyFingerPrint <String>]: Fingerprint of the Custom Secure Boot Configuration Policy
  [TestSigning <String>]: When test signing is allowed, the device does not enforce signature validation during boot
  [TpmVersion <String>]: The security version number of the Boot Application
  [VirtualSecureMode <String>]: VSM is a container that protects high value assets from a compromised kernel
  [WindowsPe <String>]: Operating system running with limited services that is used to prepare a computer for Windows

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy

LOGCOLLECTIONREQUESTS <IMicrosoftGraphDeviceLogCollectionResponse[]>: List of log collection requests
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [EnrolledByUser <String>]: The User Principal Name (UPN) of the user that enrolled the device.
  [ExpirationDateTimeUtc <DateTime?>]: The DateTime of the expiration of the logs.
  [InitiatedByUserPrincipalName <String>]: The UPN for who initiated the request.
  [ManagedDeviceId <String>]: Indicates Intune device unique identifier.
  [ReceivedDateTimeUtc <DateTime?>]: The DateTime the request was received.
  [RequestedDateTimeUtc <DateTime?>]: The DateTime of the request.
  [SizeInKb <Double?>]: The size of the logs in KB. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
  [Status <AppLogUploadState?>]: AppLogUploadStatus

USERS <IMicrosoftGraphUser[]>: The primary users associated with the managed device.
  [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AboutMe <String>]: A freeform text entry field for the user to describe themselves. Returned only on $select.
  [AccountEnabled <Boolean?>]: true if the account is enabled; otherwise, false. This property is required when a user is created. Returned only on $select. Supports $filter (eq, ne, not, and in).
  [Activities <IMicrosoftGraphUserActivity[]>]: The user's activities across devices. Read-only. Nullable.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ActivationUrl <String>]: Required. URL used to launch the activity in the best native experience represented by the appId. Might launch a web-based app if no native app exists.
    [ActivitySourceHost <String>]: Required. URL for the domain representing the cross-platform identity mapping for the app. Mapping is stored either as a JSON file hosted on the domain or configurable via Windows Dev Center. The JSON file is named cross-platform-app-identifiers and is hosted at root of your HTTPS domain, either at the top level domain or include a sub domain. For example: https://contoso.com or https://myapp.contoso.com but NOT https://myapp.contoso.com/somepath. You must have a unique file and domain (or sub domain) per cross-platform app identity. For example, a separate file and domain is needed for Word vs. PowerPoint.
    [AppActivityId <String>]: Required. The unique activity ID in the context of the app - supplied by caller and immutable thereafter.
    [AppDisplayName <String>]: Optional. Short text description of the app used to generate the activity for use in cases when the app is not installed on the user’s local device.
    [ContentInfo <IMicrosoftGraphJson>]: Json
      [(Any) <Object>]: This indicates any property can be added to this object.
    [ContentUrl <String>]: Optional. Used in the event the content can be rendered outside of a native or web-based app experience (for example, a pointer to an item in an RSS feed).
    [CreatedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was created on the server.
    [ExpirationDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object expired on the server.
    [FallbackUrl <String>]: Optional. URL used to launch the activity in a web-based app, if available.
    [HistoryItems <IMicrosoftGraphActivityHistoryItem[]>]: Optional. NavigationProperty/Containment; navigation property to the activity's historyItems.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ActiveDurationSeconds <Int32?>]: Optional. The duration of active user engagement. if not supplied, this is calculated from the startedDateTime and lastActiveDateTime.
      [Activity <IMicrosoftGraphUserActivity>]: userActivity
      [CreatedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was created on the server.
      [ExpirationDateTime <DateTime?>]: Optional. UTC DateTime when the historyItem will undergo hard-delete. Can be set by the client.
      [LastActiveDateTime <DateTime?>]: Optional. UTC DateTime when the historyItem (activity session) was last understood as active or finished - if null, historyItem status should be Ongoing.
      [LastModifiedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was modified on the server.
      [StartedDateTime <DateTime?>]: Required. UTC DateTime when the historyItem (activity session) was started. Required for timeline history.
      [Status <String>]: status
      [UserTimezone <String>]: Optional. The timezone in which the user's device used to generate the activity was located at activity creation time. Values supplied as Olson IDs in order to support cross-platform representation.
    [LastModifiedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was modified on the server.
    [Status <String>]: status
    [UserTimezone <String>]: Optional. The timezone in which the user's device used to generate the activity was located at activity creation time; values supplied as Olson IDs in order to support cross-platform representation.
    [VisualElements <IMicrosoftGraphVisualInfo>]: visualInfo
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Attribution <IMicrosoftGraphImageInfo>]: imageInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AddImageQuery <Boolean?>]: Optional; parameter used to indicate the server is able to render image dynamically in response to parameterization. For example – a high contrast image
        [AlternateText <String>]: Optional; alt-text accessible content for the image
        [AlternativeText <String>]: 
        [IconUrl <String>]: Optional; URI that points to an icon which represents the application used to generate the activity
      [BackgroundColor <String>]: Optional. Background color used to render the activity in the UI - brand color for the application source of the activity. Must be a valid hex color
      [Content <IMicrosoftGraphJson>]: Json
      [Description <String>]: Optional. Longer text description of the user's unique activity (example: document name, first sentence, and/or metadata)
      [DisplayText <String>]: Required. Short text description of the user's unique activity (for example, document name in cases where an activity refers to document creation)
  [AgeGroup <String>]: Sets the age group of the user. Allowed values: null, Minor, NotAdult and Adult. Refer to the legal age group property definitions for further information. Returned only on $select. Supports $filter (eq, ne, not, and in).
  [AgreementAcceptances <IMicrosoftGraphAgreementAcceptance[]>]: The user's terms of use acceptance statuses. Read-only. Nullable.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AgreementFileId <String>]: The identifier of the agreement file accepted by the user.
    [AgreementId <String>]: The identifier of the agreement.
    [DeviceDisplayName <String>]: The display name of the device used for accepting the agreement.
    [DeviceId <String>]: The unique identifier of the device used for accepting the agreement. Supports $filter (eq) and eq for null values.
    [DeviceOSType <String>]: The operating system used to accept the agreement.
    [DeviceOSVersion <String>]: The operating system version of the device used to accept the agreement.
    [ExpirationDateTime <DateTime?>]: The expiration date time of the acceptance. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Supports $filter (eq, ge, le) and eq for null values.
    [RecordedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
    [State <String>]: agreementAcceptanceState
    [UserDisplayName <String>]: Display name of the user when the acceptance was recorded.
    [UserEmail <String>]: Email of the user when the acceptance was recorded.
    [UserId <String>]: The identifier of the user who accepted the agreement. Supports $filter (eq).
    [UserPrincipalName <String>]: UPN of the user when the acceptance was recorded.
  [AppRoleAssignments <IMicrosoftGraphAppRoleAssignment[]>]: Represents the app roles a user has been granted for an application. Supports $expand.
    [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AppRoleId <String>]: The identifier (id) for the app role which is assigned to the principal. This app role must be exposed in the appRoles property on the resource application's service principal (resourceId). If the resource application has not declared any app roles, a default app role ID of 00000000-0000-0000-0000-000000000000 can be specified to signal that the principal is assigned to the resource app without any specific app roles. Required on create.
    [CreatedDateTime <DateTime?>]: The time when the app role assignment was created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
    [PrincipalDisplayName <String>]: The display name of the user, group, or service principal that was granted the app role assignment. Read-only. Supports $filter (eq and startswith).
    [PrincipalId <String>]: The unique identifier (id) for the user, security group, or service principal being granted the app role. Security groups with dynamic memberships are supported. Required on create.
    [PrincipalType <String>]: The type of the assigned principal. This can either be User, Group, or ServicePrincipal. Read-only.
    [ResourceDisplayName <String>]: The display name of the resource app's service principal to which the assignment is made.
    [ResourceId <String>]: The unique identifier (id) for the resource service principal for which the assignment is made. Required on create. Supports $filter (eq only).
  [AssignedLicenses <IMicrosoftGraphAssignedLicense[]>]: The licenses that are assigned to the user, including inherited (group-based) licenses. This property doesn't differentiate directly-assigned and inherited licenses. Use the licenseAssignmentStates property to identify the directly-assigned and inherited licenses.  Not nullable. Returned only on $select. Supports $filter (eq, not, /$count eq 0, /$count ne 0).
    [DisabledPlans <String[]>]: A collection of the unique identifiers for plans that have been disabled.
    [SkuId <String>]: The unique identifier for the SKU.
  [AssignedPlans <IMicrosoftGraphAssignedPlan[]>]: The plans that are assigned to the user. Read-only. Not nullable. Returned only on $select. Supports $filter (eq and not).
    [AssignedDateTime <DateTime?>]: The date and time at which the plan was assigned. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
    [CapabilityStatus <String>]: Condition of the capability assignment. The possible values are Enabled, Warning, Suspended, Deleted, LockedOut. See a detailed description of each value.
    [Service <String>]: The name of the service; for example, exchange.
    [ServicePlanId <String>]: A GUID that identifies the service plan. For a complete list of GUIDs and their equivalent friendly service names, see Product names and service plan identifiers for licensing.
  [Authentication <IMicrosoftGraphAuthentication>]: authentication
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [EmailMethods <IMicrosoftGraphEmailAuthenticationMethod[]>]: The email address registered to a user for authentication.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [EmailAddress <String>]: The email address registered to this user.
    [Fido2Methods <IMicrosoftGraphFido2AuthenticationMethod[]>]: Represents the FIDO2 security keys registered to a user for authentication.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AaGuid <String>]: Authenticator Attestation GUID, an identifier that indicates the type (e.g. make and model) of the authenticator.
      [AttestationCertificates <String[]>]: The attestation certificate(s) attached to this security key.
      [AttestationLevel <String>]: attestationLevel
      [CreatedDateTime <DateTime?>]: The timestamp when this key was registered to the user.
      [DisplayName <String>]: The display name of the key as given by the user.
      [Model <String>]: The manufacturer-assigned model of the FIDO2 security key.
    [Methods <IMicrosoftGraphAuthenticationMethod[]>]: Represents all authentication methods registered to a user.
      [Id <String>]: The unique idenfier for an entity. Read-only.
    [MicrosoftAuthenticatorMethods <IMicrosoftGraphMicrosoftAuthenticatorAuthenticationMethod[]>]: The details of the Microsoft Authenticator app registered to a user for authentication.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedDateTime <DateTime?>]: The date and time that this app was registered. This property is null if the device is not registered for passwordless Phone Sign-In.
      [Device <IMicrosoftGraphDevice>]: device
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AccountEnabled <Boolean?>]: true if the account is enabled; otherwise, false. Required. Default is true.  Supports $filter (eq, ne, not, in). Only callers in Global Administrator and Cloud Device Administrator roles can set this property.
        [AlternativeSecurityIds <IMicrosoftGraphAlternativeSecurityId[]>]: For internal use only. Not nullable. Supports $filter (eq, not, ge, le).
          [IdentityProvider <String>]: For internal use only.
          [Key <Byte[]>]: For internal use only.
          [Type <Int32?>]: For internal use only.
        [ApproximateLastSignInDateTime <DateTime?>]: The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Supports $filter (eq, ne, not, ge, le, and eq on null values) and $orderBy.
        [ComplianceExpirationDateTime <DateTime?>]: The timestamp when the device is no longer deemed compliant. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        [DeviceCategory <String>]: User-defined property set by Intune to automatically add devices to groups and simplify managing devices.
        [DeviceId <String>]: Unique identifier set by Azure Device Registration Service at the time of registration. This is an alternate key that can be used to reference the device object. Supports $filter (eq, ne, not, startsWith).
        [DeviceMetadata <String>]: For internal use only. Set to null.
        [DeviceOwnership <String>]: Ownership of the device. This property is set by Intune. Possible values are: unknown, company, personal.
        [DeviceVersion <Int32?>]: For internal use only.
        [DisplayName <String>]: The display name for the device. Required. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values), $search, and $orderBy.
        [EnrollmentProfileName <String>]: Enrollment profile applied to the device. For example, Apple Device Enrollment Profile, Device enrollment - Corporate device identifiers, or Windows Autopilot profile name. This property is set by Intune.
        [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the device. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
        [IsCompliant <Boolean?>]: true if the device complies with Mobile Device Management (MDM) policies; otherwise, false. Read-only. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices. Supports $filter (eq, ne, not).
        [IsManaged <Boolean?>]: true if the device is managed by a Mobile Device Management (MDM) app; otherwise, false. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices. Supports $filter (eq, ne, not).
        [MdmAppId <String>]: Application identifier used to register device into MDM. Read-only. Supports $filter (eq, ne, not, startsWith).
        [MemberOf <IMicrosoftGraphDirectoryObject[]>]: Groups and administrative units that this device is a member of. Read-only. Nullable. Supports $expand.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
        [OnPremisesLastSyncDateTime <DateTime?>]: The last time at which the object was synced with the on-premises directory. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z Read-only. Supports $filter (eq, ne, not, ge, le, in).
        [OnPremisesSyncEnabled <Boolean?>]: true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only. Supports $filter (eq, ne, not, in, and eq on null values).
        [OperatingSystem <String>]: The type of operating system on the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values).
        [OperatingSystemVersion <String>]: The version of the operating system on the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values).
        [PhysicalIds <String[]>]: For internal use only. Not nullable. Supports $filter (eq, not, ge, le, startsWith,/$count eq 0, /$count ne 0).
        [ProfileType <String>]: The profile type of the device. Possible values: RegisteredDevice (default), SecureVM, Printer, Shared, IoT.
        [RegisteredOwners <IMicrosoftGraphDirectoryObject[]>]: The user that cloud joined the device or registered their personal device. The registered owner is set at the time of registration. Read-only. Nullable. Supports $expand.
        [RegisteredUsers <IMicrosoftGraphDirectoryObject[]>]: Collection of registered users of the device. For cloud joined devices and registered personal devices, registered users are set to the same value as registered owners at the time of registration. Read-only. Nullable. Supports $expand.
        [RegistrationDateTime <DateTime?>]: Date and time of when the device was registered. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        [SystemLabels <String[]>]: List of labels applied to the device by the system. Supports $filter (/$count eq 0, /$count ne 0).
        [TransitiveMemberOf <IMicrosoftGraphDirectoryObject[]>]: Groups and administrative units that the device is a member of. This operation is transitive. Supports $expand.
        [TrustType <String>]: Type of trust for the joined device. Read-only. Possible values:  Workplace (indicates bring your own personal devices), AzureAd (Cloud only joined devices), ServerAd (on-premises domain joined devices joined to Azure AD). For more details, see Introduction to device management in Azure Active Directory
      [DeviceTag <String>]: Tags containing app metadata.
      [DisplayName <String>]: The name of the device on which this app is registered.
      [PhoneAppVersion <String>]: Numerical version of this instance of the Authenticator app.
    [Operations <IMicrosoftGraphLongRunningOperation[]>]: Represents the status of a long-running operation.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedDateTime <DateTime?>]: The start time of the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
      [LastActionDateTime <DateTime?>]: The time of the last action in the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
      [ResourceLocation <String>]: URI of the resource that the operation is performed on.
      [Status <String>]: longRunningOperationStatus
      [StatusDetail <String>]: Details about the status of the operation.
    [PasswordMethods <IMicrosoftGraphPasswordAuthenticationMethod[]>]: Represents the password that's registered to a user for authentication. For security, the password itself will never be returned in the object, but action can be taken to reset a password.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedDateTime <DateTime?>]: The date and time when this password was last updated. This property is currently not populated. Read-only. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
      [Password <String>]: For security, the password is always returned as null from a LIST or GET operation.
    [PhoneMethods <IMicrosoftGraphPhoneAuthenticationMethod[]>]: The phone numbers registered to a user for authentication.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [PhoneNumber <String>]: The phone number to text or call for authentication. Phone numbers use the format +{country code} {number}x{extension}, with extension optional. For example, +1 5555551234 or +1 5555551234x123 are valid. Numbers are rejected when creating or updating if they do not match the required format.
      [PhoneType <String>]: authenticationPhoneType
      [SmsSignInState <String>]: authenticationMethodSignInState
    [SoftwareOathMethods <IMicrosoftGraphSoftwareOathAuthenticationMethod[]>]: The software OATH TOTP applications registered to a user for authentication.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [SecretKey <String>]: The secret key of the method. Always returns null.
    [TemporaryAccessPassMethods <IMicrosoftGraphTemporaryAccessPassAuthenticationMethod[]>]: Represents a Temporary Access Pass registered to a user for authentication through time-limited passcodes.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedDateTime <DateTime?>]: The date and time when the Temporary Access Pass was created.
      [IsUsable <Boolean?>]: The state of the authentication method that indicates whether it's currently usable by the user.
      [IsUsableOnce <Boolean?>]: Determines whether the pass is limited to a one-time use. If true, the pass can be used once; if false, the pass can be used multiple times within the Temporary Access Pass lifetime.
      [LifetimeInMinutes <Int32?>]: The lifetime of the Temporary Access Pass in minutes starting at startDateTime. Must be between 10 and 43200 inclusive (equivalent to 30 days).
      [MethodUsabilityReason <String>]: Details about the usability state (isUsable). Reasons can include: EnabledByPolicy, DisabledByPolicy, Expired, NotYetValid, OneTimeUsed.
      [StartDateTime <DateTime?>]: The date and time when the Temporary Access Pass becomes available to use and when isUsable is true is enforced.
      [TemporaryAccessPass <String>]: The Temporary Access Pass used to authenticate. Returned only on creation of a new temporaryAccessPassAuthenticationMethod object; Hidden in subsequent read operations and returned as null with GET.
    [WindowsHelloForBusinessMethods <IMicrosoftGraphWindowsHelloForBusinessAuthenticationMethod[]>]: Represents the Windows Hello for Business authentication method registered to a user for authentication.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedDateTime <DateTime?>]: The date and time that this Windows Hello for Business key was registered.
      [Device <IMicrosoftGraphDevice>]: device
      [DisplayName <String>]: The name of the device on which Windows Hello for Business is registered
      [KeyStrength <String>]: authenticationMethodKeyStrength
  [AuthorizationInfo <IMicrosoftGraphAuthorizationInfo>]: authorizationInfo
    [(Any) <Object>]: This indicates any property can be added to this object.
    [CertificateUserIds <String[]>]: 
  [Birthday <DateTime?>]: The birthday of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned only on $select.
  [BusinessPhones <String[]>]: The telephone numbers for the user. NOTE: Although this is a string collection, only one number can be set for this property. Read-only for users synced from on-premises directory. Returned by default. Supports $filter (eq, not, ge, le, startsWith).
  [Calendar <IMicrosoftGraphCalendar>]: calendar
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AllowedOnlineMeetingProviders <String[]>]: Represent the online meeting service providers that can be used to create online meetings in this calendar. Possible values are: unknown, skypeForBusiness, skypeForConsumer, teamsForBusiness.
    [CalendarPermissions <IMicrosoftGraphCalendarPermission[]>]: The permissions of the users with whom the calendar is shared.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AllowedRoles <String[]>]: List of allowed sharing or delegating permission levels for the calendar. Possible values are: none, freeBusyRead, limitedRead, read, write, delegateWithoutPrivateEventAccess, delegateWithPrivateEventAccess, custom.
      [EmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Address <String>]: The email address of the person or entity.
        [Name <String>]: The display name of the person or entity.
      [IsInsideOrganization <Boolean?>]: True if the user in context (sharee or delegate) is inside the same organization as the calendar owner.
      [IsRemovable <Boolean?>]: True if the user can be removed from the list of sharees or delegates for the specified calendar, false otherwise. The 'My organization' user determines the permissions other people within your organization have to the given calendar. You cannot remove 'My organization' as a sharee to a calendar.
      [Role <String>]: calendarRoleType
    [CalendarView <IMicrosoftGraphEvent[]>]: The calendar view for the calendar. Navigation property. Read-only.
      [Categories <String[]>]: The categories associated with the item
      [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
      [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AllowNewTimeProposals <Boolean?>]: true if the meeting organizer allows invitees to propose a new time when responding; otherwise, false. Optional. Default is true.
      [Attachments <IMicrosoftGraphAttachment[]>]: The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [ContentType <String>]: The MIME type.
        [IsInline <Boolean?>]: true if the attachment is an inline attachment; otherwise, false.
        [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [Name <String>]: The attachment's file name.
        [Size <Int32?>]: The length of the attachment in bytes.
      [Attendees <IMicrosoftGraphAttendee[]>]: The collection of attendees for the event.
        [Type <String>]: attendeeType
        [EmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
        [ProposedNewTime <IMicrosoftGraphTimeSlot>]: timeSlot
          [(Any) <Object>]: This indicates any property can be added to this object.
          [End <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DateTime <String>]: A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000).
            [TimeZone <String>]: Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values.
          [Start <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [Status <IMicrosoftGraphResponseStatus>]: responseStatus
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Response <String>]: responseType
          [Time <DateTime?>]: The date and time when the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [Body <IMicrosoftGraphItemBody>]: itemBody
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Content <String>]: The content of the item.
        [ContentType <String>]: bodyType
      [BodyPreview <String>]: The preview of the message associated with the event. It is in text format.
      [Calendar <IMicrosoftGraphCalendar>]: calendar
      [End <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
      [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the event. Nullable.
      [HasAttachments <Boolean?>]: Set to true if the event has attachments.
      [HideAttendees <Boolean?>]: When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. Default is false.
      [ICalUId <String>]: A unique identifier for an event across calendars. This ID is different for each occurrence in a recurring series. Read-only.
      [Importance <String>]: importance
      [Instances <IMicrosoftGraphEvent[]>]: The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions that have been modified, but does not include occurrences that have been cancelled from the series. Navigation property. Read-only. Nullable.
      [IsAllDay <Boolean?>]: 
      [IsCancelled <Boolean?>]: 
      [IsDraft <Boolean?>]: 
      [IsOnlineMeeting <Boolean?>]: 
      [IsOrganizer <Boolean?>]: 
      [IsReminderOn <Boolean?>]: 
      [Location <IMicrosoftGraphLocation>]: location
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Address <IMicrosoftGraphPhysicalAddress>]: physicalAddress
          [(Any) <Object>]: This indicates any property can be added to this object.
          [City <String>]: The city.
          [CountryOrRegion <String>]: The country or region. It's a free-format string value, for example, 'United States'.
          [PostalCode <String>]: The postal code.
          [State <String>]: The state.
          [Street <String>]: The street.
        [Coordinates <IMicrosoftGraphOutlookGeoCoordinates>]: outlookGeoCoordinates
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Accuracy <Double?>]: The accuracy of the latitude and longitude. As an example, the accuracy can be measured in meters, such as the latitude and longitude are accurate to within 50 meters.
          [Altitude <Double?>]: The altitude of the location.
          [AltitudeAccuracy <Double?>]: The accuracy of the altitude.
          [Latitude <Double?>]: The latitude of the location.
          [Longitude <Double?>]: The longitude of the location.
        [DisplayName <String>]: The name associated with the location.
        [LocationEmailAddress <String>]: Optional email address of the location.
        [LocationType <String>]: locationType
        [LocationUri <String>]: Optional URI representing the location.
        [UniqueId <String>]: For internal use only.
        [UniqueIdType <String>]: locationUniqueIdType
      [Locations <IMicrosoftGraphLocation[]>]: 
      [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the event. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Value <String[]>]: A collection of property values.
      [OnlineMeeting <IMicrosoftGraphOnlineMeetingInfo>]: onlineMeetingInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ConferenceId <String>]: The ID of the conference.
        [JoinUrl <String>]: The external link that launches the online meeting. This is a URL that clients will launch into a browser and will redirect the user to join the meeting.
        [Phones <IMicrosoftGraphPhone[]>]: All of the phone numbers associated with this conference.
          [Language <String>]: 
          [Number <String>]: The phone number.
          [Region <String>]: 
          [Type <String>]: phoneType
        [QuickDial <String>]: The pre-formatted quickdial for this call.
        [TollFreeNumbers <String[]>]: The toll free numbers that can be used to join the conference.
        [TollNumber <String>]: The toll number that can be used to join the conference.
      [OnlineMeetingProvider <String>]: onlineMeetingProviderType
      [OnlineMeetingUrl <String>]: 
      [Organizer <IMicrosoftGraphRecipient>]: recipient
        [(Any) <Object>]: This indicates any property can be added to this object.
        [EmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
      [OriginalEndTimeZone <String>]: 
      [OriginalStart <DateTime?>]: 
      [OriginalStartTimeZone <String>]: 
      [Recurrence <IMicrosoftGraphPatternedRecurrence>]: patternedRecurrence
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Pattern <IMicrosoftGraphRecurrencePattern>]: recurrencePattern
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DayOfMonth <Int32?>]: The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly.
          [DaysOfWeek <String[]>]: A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly.
          [FirstDayOfWeek <String>]: dayOfWeek
          [Index <String>]: weekIndex
          [Interval <Int32?>]: The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required.
          [Month <Int32?>]: The month in which the event occurs.  This is a number from 1 to 12.
          [Type <String>]: recurrencePatternType
        [Range <IMicrosoftGraphRecurrenceRange>]: recurrenceRange
          [(Any) <Object>]: This indicates any property can be added to this object.
          [EndDate <DateTime?>]: The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate.
          [NumberOfOccurrences <Int32?>]: The number of times to repeat the event. Required and must be positive if type is numbered.
          [RecurrenceTimeZone <String>]: Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used.
          [StartDate <DateTime?>]: The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.
          [Type <String>]: recurrenceRangeType
      [ReminderMinutesBeforeStart <Int32?>]: 
      [ResponseRequested <Boolean?>]: 
      [ResponseStatus <IMicrosoftGraphResponseStatus>]: responseStatus
      [Sensitivity <String>]: sensitivity
      [SeriesMasterId <String>]: 
      [ShowAs <String>]: freeBusyStatus
      [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the event. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Value <String>]: A property value.
      [Start <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
      [Subject <String>]: 
      [TransactionId <String>]: 
      [Type <String>]: eventType
      [WebLink <String>]: 
    [CanEdit <Boolean?>]: true if the user can write to the calendar, false otherwise. This property is true for the user who created the calendar. This property is also true for a user who has been shared a calendar and granted write access.
    [CanShare <Boolean?>]: true if the user has the permission to share the calendar, false otherwise. Only the user who created the calendar can share it.
    [CanViewPrivateItems <Boolean?>]: true if the user can read calendar items that have been marked private, false otherwise.
    [ChangeKey <String>]: Identifies the version of the calendar object. Every time the calendar is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
    [Color <String>]: calendarColor
    [DefaultOnlineMeetingProvider <String>]: onlineMeetingProviderType
    [Events <IMicrosoftGraphEvent[]>]: The events in the calendar. Navigation property. Read-only.
    [HexColor <String>]: The calendar color, expressed in a hex color code of three hexadecimal values, each ranging from 00 to FF and representing the red, green, or blue components of the color in the RGB color space. If the user has never explicitly set a color for the calendar, this property is empty. Read-only.
    [IsDefaultCalendar <Boolean?>]: true if this is the default calendar where new events are created by default, false otherwise.
    [IsRemovable <Boolean?>]: Indicates whether this user calendar can be deleted from the user mailbox.
    [IsTallyingResponses <Boolean?>]: Indicates whether this user calendar supports tracking of meeting responses. Only meeting invites sent from users' primary calendars support tracking of meeting responses.
    [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the calendar. Read-only. Nullable.
    [Name <String>]: The calendar name.
    [Owner <IMicrosoftGraphEmailAddress>]: emailAddress
    [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the calendar. Read-only. Nullable.
  [CalendarGroups <IMicrosoftGraphCalendarGroup[]>]: The user's calendar groups. Read-only. Nullable.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Calendars <IMicrosoftGraphCalendar[]>]: The calendars in the calendar group. Navigation property. Read-only. Nullable.
    [ChangeKey <String>]: Identifies the version of the calendar group. Every time the calendar group is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
    [ClassId <String>]: The class identifier. Read-only.
    [Name <String>]: The group name.
  [CalendarView <IMicrosoftGraphEvent[]>]: The calendar view for the calendar. Read-only. Nullable.
  [Calendars <IMicrosoftGraphCalendar[]>]: The user's calendars. Read-only. Nullable.
  [Chats <IMicrosoftGraphChat[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ChatType <String>]: chatType
    [CreatedDateTime <DateTime?>]: Date and time at which the chat was created. Read-only.
    [InstalledApps <IMicrosoftGraphTeamsAppInstallation[]>]: A collection of all the apps in the chat. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ConsentedPermissionSet <IMicrosoftGraphTeamsAppPermissionSet>]: teamsAppPermissionSet
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ResourceSpecificPermissions <IMicrosoftGraphTeamsAppResourceSpecificPermission[]>]: A collection of resource-specific permissions.
          [PermissionType <String>]: teamsAppResourceSpecificPermissionType
          [PermissionValue <String>]: The name of the resource-specific permission.
      [TeamsApp <IMicrosoftGraphTeamsApp>]: teamsApp
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AppDefinitions <IMicrosoftGraphTeamsAppDefinition[]>]: The details for each version of the app.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Authorization <IMicrosoftGraphTeamsAppAuthorization>]: teamsAppAuthorization
            [(Any) <Object>]: This indicates any property can be added to this object.
            [RequiredPermissionSet <IMicrosoftGraphTeamsAppPermissionSet>]: teamsAppPermissionSet
          [Bot <IMicrosoftGraphTeamworkBot>]: teamworkBot
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
          [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Application <IMicrosoftGraphIdentity>]: identity
              [(Any) <Object>]: This indicates any property can be added to this object.
              [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
              [Id <String>]: Unique identifier for the identity.
            [Device <IMicrosoftGraphIdentity>]: identity
            [User <IMicrosoftGraphIdentity>]: identity
          [Description <String>]: Verbose description of the application.
          [DisplayName <String>]: The name of the app provided by the app developer.
          [LastModifiedDateTime <DateTime?>]: 
          [PublishingState <String>]: teamsAppPublishingState
          [ShortDescription <String>]: Short description of the application.
          [TeamsAppId <String>]: The ID from the Teams app manifest.
          [Version <String>]: The version number of the application.
        [DisplayName <String>]: The name of the catalog app provided by the app developer in the Microsoft Teams zip app package.
        [DistributionMethod <String>]: teamsAppDistributionMethod
        [ExternalId <String>]: The ID of the catalog provided by the app developer in the Microsoft Teams zip app package.
      [TeamsAppDefinition <IMicrosoftGraphTeamsAppDefinition>]: teamsAppDefinition
    [LastMessagePreview <IMicrosoftGraphChatMessageInfo>]: chatMessageInfo
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Body <IMicrosoftGraphItemBody>]: itemBody
      [CreatedDateTime <DateTime?>]: Date time object representing the time at which message was created.
      [EventDetail <IMicrosoftGraphEventMessageDetail>]: eventMessageDetail
        [(Any) <Object>]: This indicates any property can be added to this object.
      [From <IMicrosoftGraphChatMessageFromIdentitySet>]: chatMessageFromIdentitySet
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Application <IMicrosoftGraphIdentity>]: identity
        [Device <IMicrosoftGraphIdentity>]: identity
        [User <IMicrosoftGraphIdentity>]: identity
      [IsDeleted <Boolean?>]: If set to true, the original message has been deleted.
      [MessageType <String>]: chatMessageType
    [LastUpdatedDateTime <DateTime?>]: Date and time at which the chat was renamed or list of members were last changed. Read-only.
    [Members <IMicrosoftGraphConversationMember[]>]: A collection of all the members in the chat. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DisplayName <String>]: The display name of the user.
      [Roles <String[]>]: The roles for that user. This property contains additional qualifiers only when relevant - for example, if the member has owner privileges, the roles property contains owner as one of the values. Similarly, if the member is an in-tenant guest, the roles property contains guest as one of the values. A basic member should not have any values specified in the roles property. An Out-of-tenant external member is assigned the owner role.
      [VisibleHistoryStartDateTime <DateTime?>]: The timestamp denoting how far back a conversation's history is shared with the conversation member. This property is settable only for members of a chat.
    [Messages <IMicrosoftGraphChatMessage[]>]: A collection of all the messages in the chat. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Attachments <IMicrosoftGraphChatMessageAttachment[]>]: References to attached objects like files, tabs, meetings etc.
        [Content <String>]: The content of the attachment. If the attachment is a rich card, set the property to the rich card object. This property and contentUrl are mutually exclusive.
        [ContentType <String>]: The media type of the content attachment. It can have the following values: reference: Attachment is a link to another file. Populate the contentURL with the link to the object.Any contentTypes supported by the Bot Framework's Attachment objectapplication/vnd.microsoft.card.codesnippet: A code snippet. application/vnd.microsoft.card.announcement: An announcement header.
        [ContentUrl <String>]: URL for the content of the attachment. Supported protocols: http, https, file and data.
        [Id <String>]: Read-only. Unique id of the attachment.
        [Name <String>]: Name of the attachment.
        [TeamsAppId <String>]: The ID of the Teams app that is associated with the attachment. The property is specifically used to attribute a Teams message card to the specified app.
        [ThumbnailUrl <String>]: URL to a thumbnail image that the channel can use if it supports using an alternative, smaller form of content or contentUrl. For example, if you set contentType to application/word and set contentUrl to the location of the Word document, you might include a thumbnail image that represents the document. The channel could display the thumbnail image instead of the document. When the user clicks the image, the channel would open the document.
      [Body <IMicrosoftGraphItemBody>]: itemBody
      [ChannelIdentity <IMicrosoftGraphChannelIdentity>]: channelIdentity
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ChannelId <String>]: The identity of the channel in which the message was posted.
        [TeamId <String>]: The identity of the team in which the message was posted.
      [ChatId <String>]: If the message was sent in a chat, represents the identity of the chat.
      [CreatedDateTime <DateTime?>]: Timestamp of when the chat message was created.
      [DeletedDateTime <DateTime?>]: Read only. Timestamp at which the chat message was deleted, or null if not deleted.
      [Etag <String>]: Read-only. Version number of the chat message.
      [EventDetail <IMicrosoftGraphEventMessageDetail>]: eventMessageDetail
      [From <IMicrosoftGraphChatMessageFromIdentitySet>]: chatMessageFromIdentitySet
      [HostedContents <IMicrosoftGraphChatMessageHostedContent[]>]: Content in a message hosted by Microsoft Teams - for example, images or code snippets.
        [ContentBytes <Byte[]>]: Write only. Bytes for the hosted content (such as images).
        [ContentType <String>]: Write only. Content type. sicj as image/png, image/jpg.
        [Id <String>]: The unique idenfier for an entity. Read-only.
      [Importance <String>]: chatMessageImportance
      [LastEditedDateTime <DateTime?>]: Read only. Timestamp when edits to the chat message were made. Triggers an 'Edited' flag in the Teams UI. If no edits are made the value is null.
      [LastModifiedDateTime <DateTime?>]: Read only. Timestamp when the chat message is created (initial setting) or modified, including when a reaction is added or removed.
      [Locale <String>]: Locale of the chat message set by the client. Always set to en-us.
      [Mentions <IMicrosoftGraphChatMessageMention[]>]: List of entities mentioned in the chat message. Supported entities are: user, bot, team, and channel.
        [Id <Int32?>]: Index of an entity being mentioned in the specified chatMessage. Matches the {index} value in the corresponding <at id='{index}'> tag in the message body.
        [MentionText <String>]: String used to represent the mention. For example, a user's display name, a team name.
        [Mentioned <IMicrosoftGraphChatMessageMentionedIdentitySet>]: chatMessageMentionedIdentitySet
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Application <IMicrosoftGraphIdentity>]: identity
          [Device <IMicrosoftGraphIdentity>]: identity
          [User <IMicrosoftGraphIdentity>]: identity
          [Conversation <IMicrosoftGraphTeamworkConversationIdentity>]: teamworkConversationIdentity
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
            [Id <String>]: Unique identifier for the identity.
            [ConversationIdentityType <String>]: teamworkConversationIdentityType
      [MessageHistory <IMicrosoftGraphChatMessageHistoryItem[]>]: List of activity history of a message item, including modification time and actions, such as reactionAdded, reactionRemoved, or reaction changes, on the message.
        [Actions <String>]: chatMessageActions
        [ModifiedDateTime <DateTime?>]: The date and time when the message was modified.
        [Reaction <IMicrosoftGraphChatMessageReaction>]: chatMessageReaction
          [(Any) <Object>]: This indicates any property can be added to this object.
          [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
          [ReactionType <String>]: Supported values are like, angry, sad, laugh, heart, surprised.
          [User <IMicrosoftGraphChatMessageReactionIdentitySet>]: chatMessageReactionIdentitySet
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Application <IMicrosoftGraphIdentity>]: identity
            [Device <IMicrosoftGraphIdentity>]: identity
            [User <IMicrosoftGraphIdentity>]: identity
      [MessageType <String>]: chatMessageType
      [PolicyViolation <IMicrosoftGraphChatMessagePolicyViolation>]: chatMessagePolicyViolation
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DlpAction <String>]: chatMessagePolicyViolationDlpActionTypes
        [JustificationText <String>]: Justification text provided by the sender of the message when overriding a policy violation.
        [PolicyTip <IMicrosoftGraphChatMessagePolicyViolationPolicyTip>]: chatMessagePolicyViolationPolicyTip
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ComplianceUrl <String>]: The URL a user can visit to read about the data loss prevention policies for the organization. (ie, policies about what users shouldn't say in chats)
          [GeneralText <String>]: Explanatory text shown to the sender of the message.
          [MatchedConditionDescriptions <String[]>]: The list of improper data in the message that was detected by the data loss prevention app. Each DLP app defines its own conditions, examples include 'Credit Card Number' and 'Social Security Number'.
        [UserAction <String>]: chatMessagePolicyViolationUserActionTypes
        [VerdictDetails <String>]: chatMessagePolicyViolationVerdictDetailsTypes
      [Reactions <IMicrosoftGraphChatMessageReaction[]>]: Reactions for this chat message (for example, Like).
      [Replies <IMicrosoftGraphChatMessage[]>]: Replies for a specified message. Supports $expand for channel messages.
      [ReplyToId <String>]: Read-only. ID of the parent chat message or root chat message of the thread. (Only applies to chat messages in channels, not chats.)
      [Subject <String>]: The subject of the chat message, in plaintext.
      [Summary <String>]: Summary text of the chat message that could be used for push notifications and summary views or fall back views. Only applies to channel chat messages, not chat messages in a chat.
      [WebUrl <String>]: Read-only. Link to the message in Microsoft Teams.
    [OnlineMeetingInfo <IMicrosoftGraphTeamworkOnlineMeetingInfo>]: teamworkOnlineMeetingInfo
      [(Any) <Object>]: This indicates any property can be added to this object.
      [CalendarEventId <String>]: The identifier of the calendar event associated with the meeting.
      [JoinWebUrl <String>]: The URL that users click to join or uniquely identify the meeting.
      [Organizer <IMicrosoftGraphTeamworkUserIdentity>]: teamworkUserIdentity
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
        [Id <String>]: Unique identifier for the identity.
        [UserIdentityType <String>]: teamworkUserIdentityType
    [PermissionGrants <IMicrosoftGraphResourceSpecificPermissionGrant[]>]: 
      [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ClientAppId <String>]: ID of the service principal of the Azure AD app that has been granted access. Read-only.
      [ClientId <String>]: ID of the Azure AD app that has been granted access. Read-only.
      [Permission <String>]: The name of the resource-specific permission. Read-only.
      [PermissionType <String>]: The type of permission. Possible values are: Application, Delegated. Read-only.
      [ResourceAppId <String>]: ID of the Azure AD app that is hosting the resource. Read-only.
    [PinnedMessages <IMicrosoftGraphPinnedChatMessageInfo[]>]: A collection of all the pinned messages in the chat. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Message <IMicrosoftGraphChatMessage>]: chatMessage
    [Tabs <IMicrosoftGraphTeamsTab[]>]: A collection of all the tabs in the chat. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Configuration <IMicrosoftGraphTeamsTabConfiguration>]: teamsTabConfiguration
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ContentUrl <String>]: Url used for rendering tab contents in Teams. Required.
        [EntityId <String>]: Identifier for the entity hosted by the tab provider.
        [RemoveUrl <String>]: Url called by Teams client when a Tab is removed using the Teams Client.
        [WebsiteUrl <String>]: Url for showing tab contents outside of Teams.
      [DisplayName <String>]: Name of the tab.
      [TeamsApp <IMicrosoftGraphTeamsApp>]: teamsApp
      [WebUrl <String>]: Deep link URL of the tab instance. Read only.
    [TenantId <String>]: The identifier of the tenant in which the chat was created. Read-only.
    [Topic <String>]: (Optional) Subject or topic for the chat. Only available for group chats.
    [Viewpoint <IMicrosoftGraphChatViewpoint>]: chatViewpoint
      [(Any) <Object>]: This indicates any property can be added to this object.
      [IsHidden <Boolean?>]: Indicates whether the chat is hidden for the current user.
      [LastMessageReadDateTime <DateTime?>]: Represents the dateTime up until which the current user has read chatMessages in a specific chat.
    [WebUrl <String>]: The URL for the chat in Microsoft Teams. The URL should be treated as an opaque blob, and not parsed. Read-only.
  [City <String>]: The city in which the user is located. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [CompanyName <String>]: The company name which the user is associated. This property can be useful for describing the company that an external user comes from. The maximum length is 64 characters.Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [ConsentProvidedForMinor <String>]: Sets whether consent has been obtained for minors. Allowed values: null, Granted, Denied and NotRequired. Refer to the legal age group property definitions for further information. Returned only on $select. Supports $filter (eq, ne, not, and in).
  [ContactFolders <IMicrosoftGraphContactFolder[]>]: The user's contacts folders. Read-only. Nullable.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ChildFolders <IMicrosoftGraphContactFolder[]>]: The collection of child folders in the folder. Navigation property. Read-only. Nullable.
    [Contacts <IMicrosoftGraphContact[]>]: The contacts in the folder. Navigation property. Read-only. Nullable.
      [Categories <String[]>]: The categories associated with the item
      [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
      [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AssistantName <String>]: The name of the contact's assistant.
      [Birthday <DateTime?>]: The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [BusinessAddress <IMicrosoftGraphPhysicalAddress>]: physicalAddress
      [BusinessHomePage <String>]: The business home page of the contact.
      [BusinessPhones <String[]>]: The contact's business phone numbers.
      [Children <String[]>]: The names of the contact's children.
      [CompanyName <String>]: The name of the contact's company.
      [Department <String>]: The contact's department.
      [DisplayName <String>]: The contact's display name. You can specify the display name in a create or update operation. Note that later updates to other properties may cause an automatically generated value to overwrite the displayName value you have specified. To preserve a pre-existing value, always include it as displayName in an update operation.
      [EmailAddresses <IMicrosoftGraphEmailAddress[]>]: The contact's email addresses.
      [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the contact. Read-only. Nullable.
      [FileAs <String>]: The name the contact is filed under.
      [Generation <String>]: The contact's generation.
      [GivenName <String>]: The contact's given name.
      [HomeAddress <IMicrosoftGraphPhysicalAddress>]: physicalAddress
      [HomePhones <String[]>]: The contact's home phone numbers.
      [ImAddresses <String[]>]: 
      [Initials <String>]: 
      [JobTitle <String>]: 
      [Manager <String>]: 
      [MiddleName <String>]: 
      [MobilePhone <String>]: 
      [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the contact. Read-only. Nullable.
      [NickName <String>]: 
      [OfficeLocation <String>]: 
      [OtherAddress <IMicrosoftGraphPhysicalAddress>]: physicalAddress
      [ParentFolderId <String>]: 
      [PersonalNotes <String>]: 
      [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Height <Int32?>]: The height of the photo. Read-only.
        [Width <Int32?>]: The width of the photo. Read-only.
      [Profession <String>]: 
      [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the contact. Read-only. Nullable.
      [SpouseName <String>]: 
      [Surname <String>]: 
      [Title <String>]: 
      [YomiCompanyName <String>]: 
      [YomiGivenName <String>]: 
      [YomiSurname <String>]: 
    [DisplayName <String>]: The folder's display name.
    [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the contactFolder. Read-only. Nullable.
    [ParentFolderId <String>]: The ID of the folder's parent folder.
    [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the contactFolder. Read-only. Nullable.
  [Contacts <IMicrosoftGraphContact[]>]: The user's contacts. Read-only. Nullable.
  [Country <String>]: The country/region in which the user is located; for example, US or UK. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [CreatedDateTime <DateTime?>]: The date and time the user was created, in ISO 8601 format and in UTC time. The value cannot be modified and is automatically populated when the entity is created. Nullable. For on-premises users, the value represents when they were first created in Azure AD. Property is null for some users created before June 2018 and on-premises users that were synced to Azure AD before June 2018. Read-only. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in).
  [CreatedObjects <IMicrosoftGraphDirectoryObject[]>]: Directory objects that were created by the user. Read-only. Nullable.
  [CreationType <String>]: Indicates whether the user account was created through one of the following methods:  As a regular school or work account (null). As an external account (Invitation). As a local account for an Azure Active Directory B2C tenant (LocalAccount). Through self-service sign-up by an internal user using email verification (EmailVerified). Through self-service sign-up by an external user signing up through a link that is part of a user flow (SelfServiceSignUp). Read-only.Returned only on $select. Supports $filter (eq, ne, not, in).
  [CustomSecurityAttributes <IMicrosoftGraphCustomSecurityAttributeValue>]: customSecurityAttributeValue
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Department <String>]: The name for the department in which the user works. Maximum length is 64 characters. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, and eq on null values).
  [DeviceEnrollmentLimit <Int32?>]: The limit on the maximum number of devices that the user is permitted to enroll. Allowed values are 5 or 1000.
  [DeviceManagementTroubleshootingEvents <IMicrosoftGraphDeviceManagementTroubleshootingEvent[]>]: The list of troubleshooting events for this user.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [CorrelationId <String>]: Id used for tracing the failure in the service.
    [EventDateTime <DateTime?>]: Time when the event occurred .
  [DirectReports <IMicrosoftGraphDirectoryObject[]>]: The users and contacts that report to the user. (The users and contacts that have their manager property set to this user.) Read-only. Nullable. Supports $expand.
  [DisplayName <String>]: The name displayed in the address book for the user. This is usually the combination of the user's first name, middle initial and last name. This property is required when a user is created and it cannot be cleared during updates. Maximum length is 256 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values), $orderBy, and $search.
  [Drive <IMicrosoftGraphDrive>]: drive
    [(Any) <Object>]: This indicates any property can be added to this object.
    [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
    [CreatedByUser <IMicrosoftGraphUser>]: user
    [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
    [Description <String>]: Provides a user-visible description of the item. Optional.
    [ETag <String>]: ETag for the item. Read-only.
    [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
    [LastModifiedByUser <IMicrosoftGraphUser>]: user
    [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
    [Name <String>]: The name of the item. Read-write.
    [ParentReference <IMicrosoftGraphItemReference>]: itemReference
      [(Any) <Object>]: This indicates any property can be added to this object.
      [DriveId <String>]: Unique identifier of the drive instance that contains the driveItem. Only returned if the item is located in a [drive][]. Read-only.
      [DriveType <String>]: Identifies the type of drive. Only returned if the item is located in a [drive][]. See [drive][] resource for values.
      [Id <String>]: Unique identifier of the driveItem in the drive or a listItem in a list. Read-only.
      [Name <String>]: The name of the item being referenced. Read-only.
      [Path <String>]: Path that can be used to navigate to the item. Read-only.
      [ShareId <String>]: A unique identifier for a shared resource that can be accessed via the [Shares][] API.
      [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ListId <String>]: The unique identifier (guid) for the item's list in SharePoint.
        [ListItemId <String>]: An integer identifier for the item within the containing list.
        [ListItemUniqueId <String>]: The unique identifier (guid) for the item within OneDrive for Business or a SharePoint site.
        [SiteId <String>]: The unique identifier (guid) for the item's site collection (SPSite).
        [SiteUrl <String>]: The SharePoint URL for the site that contains the item.
        [TenantId <String>]: The unique identifier (guid) for the tenancy.
        [WebId <String>]: The unique identifier (guid) for the item's site (SPWeb).
      [SiteId <String>]: For OneDrive for Business and SharePoint, this property represents the ID of the site that contains the parent document library of the driveItem resource or the parent list of the listItem resource. The value is the same as the id property of that [site][] resource. It is an opaque string that consists of three identifiers of the site. For OneDrive, this property is not populated.
    [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Bundles <IMicrosoftGraphDriveItem[]>]: Collection of [bundles][bundle] (albums and multi-select-shared sets of items). Only in personal OneDrive.
      [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [CreatedByUser <IMicrosoftGraphUser>]: user
      [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
      [Description <String>]: Provides a user-visible description of the item. Optional.
      [ETag <String>]: ETag for the item. Read-only.
      [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [LastModifiedByUser <IMicrosoftGraphUser>]: user
      [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
      [Name <String>]: The name of the item. Read-write.
      [ParentReference <IMicrosoftGraphItemReference>]: itemReference
      [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Analytics <IMicrosoftGraphItemAnalytics>]: itemAnalytics
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AllTime <IMicrosoftGraphItemActivityStat>]: itemActivityStat
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Access <IMicrosoftGraphItemActionStat>]: itemActionStat
            [(Any) <Object>]: This indicates any property can be added to this object.
            [ActionCount <Int32?>]: The number of times the action took place. Read-only.
            [ActorCount <Int32?>]: The number of distinct actors that performed the action. Read-only.
          [Activities <IMicrosoftGraphItemActivity[]>]: Exposes the itemActivities represented in this itemActivityStat resource.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Access <IMicrosoftGraphAccessAction>]: accessAction
              [(Any) <Object>]: This indicates any property can be added to this object.
            [ActivityDateTime <DateTime?>]: Details about when the activity took place. Read-only.
            [Actor <IMicrosoftGraphIdentitySet>]: identitySet
            [DriveItem <IMicrosoftGraphDriveItem>]: driveItem
          [Create <IMicrosoftGraphItemActionStat>]: itemActionStat
          [Delete <IMicrosoftGraphItemActionStat>]: itemActionStat
          [Edit <IMicrosoftGraphItemActionStat>]: itemActionStat
          [EndDateTime <DateTime?>]: When the interval ends. Read-only.
          [IncompleteData <IMicrosoftGraphIncompleteData>]: incompleteData
            [(Any) <Object>]: This indicates any property can be added to this object.
            [MissingDataBeforeDateTime <DateTime?>]: The service does not have source data before the specified time.
            [WasThrottled <Boolean?>]: Some data was not recorded due to excessive activity.
          [IsTrending <Boolean?>]: Indicates whether the item is 'trending.' Read-only.
          [Move <IMicrosoftGraphItemActionStat>]: itemActionStat
          [StartDateTime <DateTime?>]: When the interval starts. Read-only.
        [ItemActivityStats <IMicrosoftGraphItemActivityStat[]>]: 
        [LastSevenDays <IMicrosoftGraphItemActivityStat>]: itemActivityStat
      [Audio <IMicrosoftGraphAudio>]: audio
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Album <String>]: The title of the album for this audio file.
        [AlbumArtist <String>]: The artist named on the album for the audio file.
        [Artist <String>]: The performing artist for the audio file.
        [Bitrate <Int64?>]: Bitrate expressed in kbps.
        [Composers <String>]: The name of the composer of the audio file.
        [Copyright <String>]: Copyright information for the audio file.
        [Disc <Int32?>]: The number of the disc this audio file came from.
        [DiscCount <Int32?>]: The total number of discs in this album.
        [Duration <Int64?>]: Duration of the audio file, expressed in milliseconds
        [Genre <String>]: The genre of this audio file.
        [HasDrm <Boolean?>]: Indicates if the file is protected with digital rights management.
        [IsVariableBitrate <Boolean?>]: Indicates if the file is encoded with a variable bitrate.
        [Title <String>]: The title of the audio file.
        [Track <Int32?>]: The number of the track on the original disc for this audio file.
        [TrackCount <Int32?>]: The total number of tracks on the original disc for this audio file.
        [Year <Int32?>]: The year the audio file was recorded.
      [Bundle <IMicrosoftGraphBundle>]: bundle
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Album <IMicrosoftGraphAlbum>]: album
          [(Any) <Object>]: This indicates any property can be added to this object.
          [CoverImageItemId <String>]: Unique identifier of the [driveItem][] that is the cover of the album.
        [ChildCount <Int32?>]: Number of children contained immediately within this container.
      [CTag <String>]: An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.
      [Children <IMicrosoftGraphDriveItem[]>]: Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
      [Content <Byte[]>]: The content stream, if the item represents a file.
      [Deleted <IMicrosoftGraphDeleted>]: deleted
        [(Any) <Object>]: This indicates any property can be added to this object.
        [State <String>]: Represents the state of the deleted item.
      [File <IMicrosoftGraphFile>]: file
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Hashes <IMicrosoftGraphHashes>]: hashes
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Crc32Hash <String>]: The CRC32 value of the file in little endian (if available). Read-only.
          [QuickXorHash <String>]: A proprietary hash of the file that can be used to determine if the contents of the file have changed (if available). Read-only.
          [Sha1Hash <String>]: SHA1 hash for the contents of the file (if available). Read-only.
          [Sha256Hash <String>]: SHA256 hash for the contents of the file (if available). Read-only.
        [MimeType <String>]: The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file was uploaded. Read-only.
        [ProcessingMetadata <Boolean?>]: 
      [FileSystemInfo <IMicrosoftGraphFileSystemInfo>]: fileSystemInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [CreatedDateTime <DateTime?>]: The UTC date and time the file was created on a client.
        [LastAccessedDateTime <DateTime?>]: The UTC date and time the file was last accessed. Available for the recent file list only.
        [LastModifiedDateTime <DateTime?>]: The UTC date and time the file was last modified on a client.
      [Folder <IMicrosoftGraphFolder>]: folder
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ChildCount <Int32?>]: Number of children contained immediately within this container.
        [View <IMicrosoftGraphFolderView>]: folderView
          [(Any) <Object>]: This indicates any property can be added to this object.
          [SortBy <String>]: The method by which the folder should be sorted.
          [SortOrder <String>]: If true, indicates that items should be sorted in descending order. Otherwise, items should be sorted ascending.
          [ViewType <String>]: The type of view that should be used to represent the folder.
      [Image <IMicrosoftGraphImage>]: image
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Height <Int32?>]: Optional. Height of the image, in pixels. Read-only.
        [Width <Int32?>]: Optional. Width of the image, in pixels. Read-only.
      [ListItem <IMicrosoftGraphListItem>]: listItem
        [(Any) <Object>]: This indicates any property can be added to this object.
        [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [CreatedByUser <IMicrosoftGraphUser>]: user
        [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
        [Description <String>]: Provides a user-visible description of the item. Optional.
        [ETag <String>]: ETag for the item. Read-only.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [LastModifiedByUser <IMicrosoftGraphUser>]: user
        [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
        [Name <String>]: The name of the item. Read-write.
        [ParentReference <IMicrosoftGraphItemReference>]: itemReference
        [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Analytics <IMicrosoftGraphItemAnalytics>]: itemAnalytics
        [ContentType <IMicrosoftGraphContentTypeInfo>]: contentTypeInfo
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The ID of the content type.
          [Name <String>]: The name of the content type.
        [DocumentSetVersions <IMicrosoftGraphDocumentSetVersion[]>]: Version information for a document set version created by a user.
          [Fields <IMicrosoftGraphFieldValueSet>]: fieldValueSet
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [LastModifiedDateTime <DateTime?>]: Date and time the version was last modified. Read-only.
          [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Level <String>]: The state of publication for this document. Either published or checkout. Read-only.
            [VersionId <String>]: The unique identifier for the version that is visible to the current caller. Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Comment <String>]: Comment about the captured version.
          [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [CreatedDateTime <DateTime?>]: Date and time when this version was created.
          [Items <IMicrosoftGraphDocumentSetVersionItem[]>]: Items within the document set that are captured as part of this version.
            [ItemId <String>]: The unique identifier for the item.
            [Title <String>]: The title of the item.
            [VersionId <String>]: The version ID of the item.
          [ShouldCaptureMinorVersion <Boolean?>]: If true, minor versions of items are also captured; otherwise, only major versions will be captured. Default value is false.
        [DriveItem <IMicrosoftGraphDriveItem>]: driveItem
        [Fields <IMicrosoftGraphFieldValueSet>]: fieldValueSet
        [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
        [Versions <IMicrosoftGraphListItemVersion[]>]: The list of previous versions of the list item.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [LastModifiedDateTime <DateTime?>]: Date and time the version was last modified. Read-only.
          [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Fields <IMicrosoftGraphFieldValueSet>]: fieldValueSet
      [Location <IMicrosoftGraphGeoCoordinates>]: geoCoordinates
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Altitude <Double?>]: Optional. The altitude (height), in feet,  above sea level for the item. Read-only.
        [Latitude <Double?>]: Optional. The latitude, in decimal, for the item. Read-only.
        [Longitude <Double?>]: Optional. The longitude, in decimal, for the item. Read-only.
      [Malware <IMicrosoftGraphMalware>]: malware
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Description <String>]: Contains the virus details for the malware facet.
      [Package <IMicrosoftGraphPackage>]: package
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Type <String>]: A string indicating the type of package. While oneNote is the only currently defined value, you should expect other package types to be returned and handle them accordingly.
      [PendingOperations <IMicrosoftGraphPendingOperations>]: pendingOperations
        [(Any) <Object>]: This indicates any property can be added to this object.
        [PendingContentUpdate <IMicrosoftGraphPendingContentUpdate>]: pendingContentUpdate
          [(Any) <Object>]: This indicates any property can be added to this object.
          [QueuedDateTime <DateTime?>]: Date and time the pending binary operation was queued in UTC time. Read-only.
      [Permissions <IMicrosoftGraphPermission[]>]: The set of permissions for the item. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [ExpirationDateTime <DateTime?>]: A format of yyyy-MM-ddTHH:mm:ssZ of DateTimeOffset indicates the expiration time of the permission. DateTime.MinValue indicates there is no expiration set for this permission. Optional.
        [GrantedTo <IMicrosoftGraphIdentitySet>]: identitySet
        [GrantedToIdentities <IMicrosoftGraphIdentitySet[]>]: 
        [GrantedToIdentitiesV2 <IMicrosoftGraphSharePointIdentitySet[]>]: For link type permissions, the details of the users to whom permission was granted. Read-only.
          [Application <IMicrosoftGraphIdentity>]: identity
          [Device <IMicrosoftGraphIdentity>]: identity
          [User <IMicrosoftGraphIdentity>]: identity
          [Group <IMicrosoftGraphIdentity>]: identity
          [SiteGroup <IMicrosoftGraphSharePointIdentity>]: sharePointIdentity
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
            [Id <String>]: Unique identifier for the identity.
            [LoginName <String>]: The sign in name of the SharePoint identity.
          [SiteUser <IMicrosoftGraphSharePointIdentity>]: sharePointIdentity
        [GrantedToV2 <IMicrosoftGraphSharePointIdentitySet>]: sharePointIdentitySet
        [HasPassword <Boolean?>]: Indicates whether the password is set for this permission. This property only appears in the response. Optional. Read-only. For OneDrive Personal only..
        [InheritedFrom <IMicrosoftGraphItemReference>]: itemReference
        [Invitation <IMicrosoftGraphSharingInvitation>]: sharingInvitation
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Email <String>]: The email address provided for the recipient of the sharing invitation. Read-only.
          [InvitedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [RedeemedBy <String>]: 
          [SignInRequired <Boolean?>]: If true the recipient of the invitation needs to sign in in order to access the shared item. Read-only.
        [Link <IMicrosoftGraphSharingLink>]: sharingLink
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Application <IMicrosoftGraphIdentity>]: identity
          [PreventsDownload <Boolean?>]: If true then the user can only use this link to view the item on the web, and cannot use it to download the contents of the item. Only for OneDrive for Business and SharePoint.
          [Scope <String>]: The scope of the link represented by this permission. Value anonymous indicates the link is usable by anyone, organization indicates the link is only usable for users signed into the same tenant.
          [Type <String>]: The type of the link created.
          [WebHtml <String>]: For embed links, this property contains the HTML code for an <iframe> element that will embed the item in a webpage.
          [WebUrl <String>]: A URL that opens the item in the browser on the OneDrive website.
        [Roles <String[]>]: The type of permission, for example, read. See below for the full list of roles. Read-only.
        [ShareId <String>]: A unique token that can be used to access this shared item via the shares API. Read-only.
      [Photo <IMicrosoftGraphPhoto>]: photo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [CameraMake <String>]: Camera manufacturer. Read-only.
        [CameraModel <String>]: Camera model. Read-only.
        [ExposureDenominator <Double?>]: The denominator for the exposure time fraction from the camera. Read-only.
        [ExposureNumerator <Double?>]: The numerator for the exposure time fraction from the camera. Read-only.
        [FNumber <Double?>]: The F-stop value from the camera. Read-only.
        [FocalLength <Double?>]: The focal length from the camera. Read-only.
        [Iso <Int32?>]: The ISO value from the camera. Read-only.
        [Orientation <Int32?>]: The orientation value from the camera. Writable on OneDrive Personal.
        [TakenDateTime <DateTime?>]: Represents the date and time the photo was taken. Read-only.
      [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
      [RemoteItem <IMicrosoftGraphRemoteItem>]: remoteItem
        [(Any) <Object>]: This indicates any property can be added to this object.
        [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
        [File <IMicrosoftGraphFile>]: file
        [FileSystemInfo <IMicrosoftGraphFileSystemInfo>]: fileSystemInfo
        [Folder <IMicrosoftGraphFolder>]: folder
        [Id <String>]: Unique identifier for the remote item in its drive. Read-only.
        [Image <IMicrosoftGraphImage>]: image
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
        [Name <String>]: Optional. Filename of the remote item. Read-only.
        [Package <IMicrosoftGraphPackage>]: package
        [ParentReference <IMicrosoftGraphItemReference>]: itemReference
        [Shared <IMicrosoftGraphShared>]: shared
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Owner <IMicrosoftGraphIdentitySet>]: identitySet
          [Scope <String>]: Indicates the scope of how the item is shared: anonymous, organization, or users. Read-only.
          [SharedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [SharedDateTime <DateTime?>]: The UTC date and time when the item was shared. Read-only.
        [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
        [Size <Int64?>]: Size of the remote item. Read-only.
        [SpecialFolder <IMicrosoftGraphSpecialFolder>]: specialFolder
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Name <String>]: The unique identifier for this item in the /drive/special collection
        [Video <IMicrosoftGraphVideo>]: video
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AudioBitsPerSample <Int32?>]: Number of audio bits per sample.
          [AudioChannels <Int32?>]: Number of audio channels.
          [AudioFormat <String>]: Name of the audio format (AAC, MP3, etc.).
          [AudioSamplesPerSecond <Int32?>]: Number of audio samples per second.
          [Bitrate <Int32?>]: Bit rate of the video in bits per second.
          [Duration <Int64?>]: Duration of the file in milliseconds.
          [FourCc <String>]: 'Four character code' name of the video format.
          [FrameRate <Double?>]: Frame rate of the video.
          [Height <Int32?>]: Height of the video, in pixels.
          [Width <Int32?>]: Width of the video, in pixels.
        [WebDavUrl <String>]: DAV compatible URL for the item.
        [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
      [Root <IMicrosoftGraphRoot>]: root
        [(Any) <Object>]: This indicates any property can be added to this object.
      [SearchResult <IMicrosoftGraphSearchResult>]: searchResult
        [(Any) <Object>]: This indicates any property can be added to this object.
        [OnClickTelemetryUrl <String>]: A callback URL that can be used to record telemetry information. The application should issue a GET on this URL if the user interacts with this item to improve the quality of results.
      [Shared <IMicrosoftGraphShared>]: shared
      [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
      [Size <Int64?>]: Size of the item in bytes. Read-only.
      [SpecialFolder <IMicrosoftGraphSpecialFolder>]: specialFolder
      [Subscriptions <IMicrosoftGraphSubscription[]>]: The set of subscriptions on the item. Only supported on the root of a drive.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [ApplicationId <String>]: Optional. Identifier of the application used to create the subscription. Read-only.
        [ChangeType <String>]: Required. Indicates the type of change in the subscribed resource that will raise a change notification. The supported values are: created, updated, deleted. Multiple values can be combined using a comma-separated list. Note:  Drive root item and list change notifications support only the updated changeType. User and group change notifications support updated and deleted changeType. Use updated to receive notifications when user or group is created, updated or soft deleted.  Use deleted to receive notifications when user or group is permanently deleted.
        [ClientState <String>]: Required. Specifies the value of the clientState property sent by the service in each change notification. The maximum length is 128 characters. The client can check that the change notification came from the service by comparing the value of the clientState property sent with the subscription with the value of the clientState property received with each change notification.
        [CreatorId <String>]: Optional. Identifier of the user or service principal that created the subscription. If the app used delegated permissions to create the subscription, this field contains the id of the signed-in user the app called on behalf of. If the app used application permissions, this field contains the id of the service principal corresponding to the app. Read-only.
        [EncryptionCertificate <String>]: Optional. A base64-encoded representation of a certificate with a public key used to encrypt resource data in change notifications. Optional but required when includeResourceData is true.
        [EncryptionCertificateId <String>]: Optional. A custom app-provided identifier to help identify the certificate needed to decrypt resource data.
        [ExpirationDateTime <DateTime?>]: Required. Specifies the date and time when the webhook subscription expires. The time is in UTC, and can be an amount of time from subscription creation that varies for the resource subscribed to. For the maximum supported subscription length of time, see the table below.
        [IncludeResourceData <Boolean?>]: Optional. When set to true, change notifications include resource data (such as content of a chat message).
        [LatestSupportedTlsVersion <String>]: Optional. Specifies the latest version of Transport Layer Security (TLS) that the notification endpoint, specified by notificationUrl, supports. The possible values are: v10, v11, v12, v13. For subscribers whose notification endpoint supports a version lower than the currently recommended version (TLS 1.2), specifying this property by a set timeline allows them to temporarily use their deprecated version of TLS before completing their upgrade to TLS 1.2. For these subscribers, not setting this property per the timeline would result in subscription operations failing. For subscribers whose notification endpoint already supports TLS 1.2, setting this property is optional. In such cases, Microsoft Graph defaults the property to v1_2.
        [LifecycleNotificationUrl <String>]: Required for Teams resources if  the expirationDateTime value is more than 1 hour from now; optional otherwise. The URL of the endpoint that receives lifecycle notifications, including subscriptionRemoved, reauthorizationRequired, and missed notifications. This URL must make use of the HTTPS protocol. For more information, see Reduce missing subscriptions and change notifications.
        [NotificationQueryOptions <String>]: Optional. OData query options for specifying value for the targeting resource. Clients receive notifications when resource reaches the state matching the query options provided here. With this new property in the subscription creation payload along with all existing properties, Webhooks will deliver notifications whenever a resource reaches the desired state mentioned in the notificationQueryOptions property. For example, when the print job is completed or when a print job resource isFetchable property value becomes true etc.  Supported only for Universal Print Service. For more information, see Subscribe to change notifications from cloud printing APIs using Microsoft Graph.
        [NotificationUrl <String>]: Required. The URL of the endpoint that will receive the change notifications. This URL must make use of the HTTPS protocol. Any query string parameter included in the notificationUrl property will be included in the HTTP POST request when Microsoft Graph sends the change notifications.
        [NotificationUrlAppId <String>]: Optional. The app ID that the subscription service can use to generate the validation token. This allows the client to validate the authenticity of the notification received.
        [Resource <String>]: Required. Specifies the resource that will be monitored for changes. Do not include the base URL (https://graph.microsoft.com/v1.0/). See the possible resource path values for each supported resource.
      [Thumbnails <IMicrosoftGraphThumbnailSet[]>]: Collection containing [ThumbnailSet][] objects associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Large <IMicrosoftGraphThumbnail>]: thumbnail
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Content <Byte[]>]: The content stream for the thumbnail.
          [Height <Int32?>]: The height of the thumbnail, in pixels.
          [SourceItemId <String>]: The unique identifier of the item that provided the thumbnail. This is only available when a folder thumbnail is requested.
          [Url <String>]: The URL used to fetch the thumbnail content.
          [Width <Int32?>]: The width of the thumbnail, in pixels.
        [Medium <IMicrosoftGraphThumbnail>]: thumbnail
        [Small <IMicrosoftGraphThumbnail>]: thumbnail
        [Source <IMicrosoftGraphThumbnail>]: thumbnail
      [Versions <IMicrosoftGraphDriveItemVersion[]>]: The list of previous versions of the item. For more info, see [getting previous versions][]. Read-only. Nullable.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [LastModifiedDateTime <DateTime?>]: Date and time the version was last modified. Read-only.
        [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Content <Byte[]>]: The content stream for this version of the item.
        [Size <Int64?>]: Indicates the size of the content stream for this version of the item.
      [Video <IMicrosoftGraphVideo>]: video
      [WebDavUrl <String>]: WebDAV compatible URL for the item.
      [Workbook <IMicrosoftGraphWorkbook>]: workbook
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Application <IMicrosoftGraphWorkbookApplication>]: workbookApplication
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [CalculationMode <String>]: Returns the calculation mode used in the workbook. Possible values are: Automatic, AutomaticExceptTables, Manual.
        [Comments <IMicrosoftGraphWorkbookComment[]>]: Represents a collection of comments in a workbook.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Content <String>]: The content of comment.
          [ContentType <String>]: Indicates the type for the comment.
          [Replies <IMicrosoftGraphWorkbookCommentReply[]>]: 
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Content <String>]: The content of a comment reply.
            [ContentType <String>]: Indicates the type for the comment reply.
        [Functions <IMicrosoftGraphWorkbookFunctions>]: workbookFunctions
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
        [Names <IMicrosoftGraphWorkbookNamedItem[]>]: Represents a collection of workbooks scoped named items (named ranges and constants). Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Comment <String>]: Represents the comment associated with this name.
          [Name <String>]: The name of the object. Read-only.
          [Scope <String>]: Indicates whether the name is scoped to the workbook or to a specific worksheet. Read-only.
          [Type <String>]: Indicates what type of reference is associated with the name. The possible values are: String, Integer, Double, Boolean, Range. Read-only.
          [Value <IMicrosoftGraphJson>]: Json
          [Visible <Boolean?>]: Specifies whether the object is visible or not.
          [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Charts <IMicrosoftGraphWorkbookChart[]>]: Returns collection of charts that are part of the worksheet. Read-only.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Axes <IMicrosoftGraphWorkbookChartAxes>]: workbookChartAxes
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [CategoryAxis <IMicrosoftGraphWorkbookChartAxis>]: workbookChartAxis
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Format <IMicrosoftGraphWorkbookChartAxisFormat>]: workbookChartAxisFormat
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Bold <Boolean?>]: Represents the bold status of font.
                      [Color <String>]: HTML color code representation of the text color. E.g. #FF0000 represents Red.
                      [Italic <Boolean?>]: Represents the italic status of the font.
                      [Name <String>]: Font name (e.g. 'Calibri')
                      [Size <Double?>]: Size of the font (e.g. 11)
                      [Underline <String>]: Type of underline applied to the font. The possible values are: None, Single.
                    [Line <IMicrosoftGraphWorkbookChartLineFormat>]: workbookChartLineFormat
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Color <String>]: HTML color code representing the color of lines in the chart.
                  [MajorGridlines <IMicrosoftGraphWorkbookChartGridlines>]: workbookChartGridlines
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Format <IMicrosoftGraphWorkbookChartGridlinesFormat>]: workbookChartGridlinesFormat
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Line <IMicrosoftGraphWorkbookChartLineFormat>]: workbookChartLineFormat
                    [Visible <Boolean?>]: Boolean value representing if the axis gridlines are visible or not.
                  [MajorUnit <IMicrosoftGraphJson>]: Json
                  [Maximum <IMicrosoftGraphJson>]: Json
                  [Minimum <IMicrosoftGraphJson>]: Json
                  [MinorGridlines <IMicrosoftGraphWorkbookChartGridlines>]: workbookChartGridlines
                  [MinorUnit <IMicrosoftGraphJson>]: Json
                  [Title <IMicrosoftGraphWorkbookChartAxisTitle>]: workbookChartAxisTitle
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Format <IMicrosoftGraphWorkbookChartAxisTitleFormat>]: workbookChartAxisTitleFormat
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                    [Text <String>]: Represents the axis title.
                    [Visible <Boolean?>]: A boolean that specifies the visibility of an axis title.
                [SeriesAxis <IMicrosoftGraphWorkbookChartAxis>]: workbookChartAxis
                [ValueAxis <IMicrosoftGraphWorkbookChartAxis>]: workbookChartAxis
              [DataLabels <IMicrosoftGraphWorkbookChartDataLabels>]: workbookChartDataLabels
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Format <IMicrosoftGraphWorkbookChartDataLabelFormat>]: workbookChartDataLabelFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                [Position <String>]: DataLabelPosition value that represents the position of the data label. The possible values are: None, Center, InsideEnd, InsideBase, OutsideEnd, Left, Right, Top, Bottom, BestFit, Callout.
                [Separator <String>]: String representing the separator used for the data labels on a chart.
                [ShowBubbleSize <Boolean?>]: Boolean value representing if the data label bubble size is visible or not.
                [ShowCategoryName <Boolean?>]: Boolean value representing if the data label category name is visible or not.
                [ShowLegendKey <Boolean?>]: Boolean value representing if the data label legend key is visible or not.
                [ShowPercentage <Boolean?>]: Boolean value representing if the data label percentage is visible or not.
                [ShowSeriesName <Boolean?>]: Boolean value representing if the data label series name is visible or not.
                [ShowValue <Boolean?>]: Boolean value representing if the data label value is visible or not.
              [Format <IMicrosoftGraphWorkbookChartAreaFormat>]: workbookChartAreaFormat
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
              [Height <Double?>]: Represents the height, in points, of the chart object.
              [Left <Double?>]: The distance, in points, from the left side of the chart to the worksheet origin.
              [Legend <IMicrosoftGraphWorkbookChartLegend>]: workbookChartLegend
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Format <IMicrosoftGraphWorkbookChartLegendFormat>]: workbookChartLegendFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                  [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                [Overlay <Boolean?>]: Boolean value for whether the chart legend should overlap with the main body of the chart.
                [Position <String>]: Represents the position of the legend on the chart. The possible values are: Top, Bottom, Left, Right, Corner, Custom.
                [Visible <Boolean?>]: A boolean value the represents the visibility of a ChartLegend object.
              [Name <String>]: Represents the name of a chart object.
              [Series <IMicrosoftGraphWorkbookChartSeries[]>]: Represents either a single series or collection of series in the chart. Read-only.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Format <IMicrosoftGraphWorkbookChartSeriesFormat>]: workbookChartSeriesFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                  [Line <IMicrosoftGraphWorkbookChartLineFormat>]: workbookChartLineFormat
                [Name <String>]: Represents the name of a series in a chart.
                [Points <IMicrosoftGraphWorkbookChartPoint[]>]: Represents a collection of all points in the series. Read-only.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Format <IMicrosoftGraphWorkbookChartPointFormat>]: workbookChartPointFormat
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                  [Value <IMicrosoftGraphJson>]: Json
              [Title <IMicrosoftGraphWorkbookChartTitle>]: workbookChartTitle
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Format <IMicrosoftGraphWorkbookChartTitleFormat>]: workbookChartTitleFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                  [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                [Overlay <Boolean?>]: Boolean value representing if the chart title will overlay the chart or not.
                [Text <String>]: Represents the title text of a chart.
                [Visible <Boolean?>]: A boolean value the represents the visibility of a chart title object.
              [Top <Double?>]: Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).
              [Width <Double?>]: Represents the width, in points, of the chart object.
              [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
            [Name <String>]: The display name of the worksheet.
            [Names <IMicrosoftGraphWorkbookNamedItem[]>]: Returns collection of names that are associated with the worksheet. Read-only.
            [PivotTables <IMicrosoftGraphWorkbookPivotTable[]>]: Collection of PivotTables that are part of the worksheet.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Name <String>]: Name of the PivotTable.
              [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
            [Position <Int32?>]: The zero-based position of the worksheet within the workbook.
            [Protection <IMicrosoftGraphWorkbookWorksheetProtection>]: workbookWorksheetProtection
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Options <IMicrosoftGraphWorkbookWorksheetProtectionOptions>]: workbookWorksheetProtectionOptions
                [(Any) <Object>]: This indicates any property can be added to this object.
                [AllowAutoFilter <Boolean?>]: Represents the worksheet protection option of allowing using auto filter feature.
                [AllowDeleteColumns <Boolean?>]: Represents the worksheet protection option of allowing deleting columns.
                [AllowDeleteRows <Boolean?>]: Represents the worksheet protection option of allowing deleting rows.
                [AllowFormatCells <Boolean?>]: Represents the worksheet protection option of allowing formatting cells.
                [AllowFormatColumns <Boolean?>]: Represents the worksheet protection option of allowing formatting columns.
                [AllowFormatRows <Boolean?>]: Represents the worksheet protection option of allowing formatting rows.
                [AllowInsertColumns <Boolean?>]: Represents the worksheet protection option of allowing inserting columns.
                [AllowInsertHyperlinks <Boolean?>]: Represents the worksheet protection option of allowing inserting hyperlinks.
                [AllowInsertRows <Boolean?>]: Represents the worksheet protection option of allowing inserting rows.
                [AllowPivotTables <Boolean?>]: Represents the worksheet protection option of allowing using pivot table feature.
                [AllowSort <Boolean?>]: Represents the worksheet protection option of allowing using sort feature.
              [Protected <Boolean?>]: Indicates if the worksheet is protected.  Read-only.
            [Tables <IMicrosoftGraphWorkbookTable[]>]: Collection of tables that are part of the worksheet. Read-only.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Columns <IMicrosoftGraphWorkbookTableColumn[]>]: Represents a collection of all the columns in the table. Read-only.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Filter <IMicrosoftGraphWorkbookFilter>]: workbookFilter
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Criteria <IMicrosoftGraphWorkbookFilterCriteria>]: workbookFilterCriteria
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Color <String>]: 
                    [Criterion1 <String>]: 
                    [Criterion2 <String>]: 
                    [DynamicCriteria <String>]: 
                    [FilterOn <String>]: 
                    [Icon <IMicrosoftGraphWorkbookIcon>]: workbookIcon
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Index <Int32?>]: Represents the index of the icon in the given set.
                      [Set <String>]: Represents the set that the icon is part of. The possible values are: Invalid, ThreeArrows, ThreeArrowsGray, ThreeFlags, ThreeTrafficLights1, ThreeTrafficLights2, ThreeSigns, ThreeSymbols, ThreeSymbols2, FourArrows, FourArrowsGray, FourRedToBlack, FourRating, FourTrafficLights, FiveArrows, FiveArrowsGray, FiveRating, FiveQuarters, ThreeStars, ThreeTriangles, FiveBoxes.
                    [Operator <String>]: 
                    [Values <IMicrosoftGraphJson>]: Json
                [Index <Int32?>]: Returns the index number of the column within the columns collection of the table. Zero-indexed. Read-only.
                [Name <String>]: Returns the name of the table column.
                [Values <IMicrosoftGraphJson>]: Json
              [HighlightFirstColumn <Boolean?>]: Indicates whether the first column contains special formatting.
              [HighlightLastColumn <Boolean?>]: Indicates whether the last column contains special formatting.
              [LegacyId <String>]: Legacy Id used in older Excle clients. The value of the identifier remains the same even when the table is renamed. This property should be interpreted as an opaque string value and should not be parsed to any other type. Read-only.
              [Name <String>]: Name of the table.
              [Rows <IMicrosoftGraphWorkbookTableRow[]>]: Represents a collection of all the rows in the table. Read-only.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Index <Int32?>]: Returns the index number of the row within the rows collection of the table. Zero-indexed. Read-only.
                [Values <IMicrosoftGraphJson>]: Json
              [ShowBandedColumns <Boolean?>]: Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.
              [ShowBandedRows <Boolean?>]: Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.
              [ShowFilterButton <Boolean?>]: Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.
              [ShowHeaders <Boolean?>]: Indicates whether the header row is visible or not. This value can be set to show or remove the header row.
              [ShowTotals <Boolean?>]: Indicates whether the total row is visible or not. This value can be set to show or remove the total row.
              [Sort <IMicrosoftGraphWorkbookTableSort>]: workbookTableSort
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Fields <IMicrosoftGraphWorkbookSortField[]>]: Represents the current conditions used to last sort the table. Read-only.
                  [Ascending <Boolean?>]: Represents whether the sorting is done in an ascending fashion.
                  [Color <String>]: Represents the color that is the target of the condition if the sorting is on font or cell color.
                  [DataOption <String>]: Represents additional sorting options for this field. The possible values are: Normal, TextAsNumber.
                  [Icon <IMicrosoftGraphWorkbookIcon>]: workbookIcon
                  [Key <Int32?>]: Represents the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row).
                  [SortOn <String>]: Represents the type of sorting of this condition. The possible values are: Value, CellColor, FontColor, Icon.
                [MatchCase <Boolean?>]: Represents whether the casing impacted the last sort of the table. Read-only.
                [Method <String>]: Represents Chinese character ordering method last used to sort the table. The possible values are: PinYin, StrokeCount. Read-only.
              [Style <String>]: Constant value that represents the Table style. The possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified.
              [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
            [Visibility <String>]: The Visibility of the worksheet. The possible values are: Visible, Hidden, VeryHidden.
        [Operations <IMicrosoftGraphWorkbookOperation[]>]: The status of workbook operations. Getting an operation collection is not supported, but you can get the status of a long-running operation if the Location header is returned in the response. Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Error <IMicrosoftGraphWorkbookOperationError>]: workbookOperationError
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Code <String>]: The error code.
            [InnerError <IMicrosoftGraphWorkbookOperationError>]: workbookOperationError
            [Message <String>]: The error message.
          [ResourceLocation <String>]: The resource URI for the result.
          [Status <String>]: workbookOperationStatus
        [Tables <IMicrosoftGraphWorkbookTable[]>]: Represents a collection of tables associated with the workbook. Read-only.
        [Worksheets <IMicrosoftGraphWorkbookWorksheet[]>]: Represents a collection of worksheets associated with the workbook. Read-only.
    [DriveType <String>]: Describes the type of drive represented by this resource. OneDrive personal drives will return personal. OneDrive for Business will return business. SharePoint document libraries will return documentLibrary. Read-only.
    [Following <IMicrosoftGraphDriveItem[]>]: The list of items the user is following. Only in OneDrive for Business.
    [Items <IMicrosoftGraphDriveItem[]>]: All items contained in the drive. Read-only. Nullable.
    [List <IMicrosoftGraphList>]: list
      [(Any) <Object>]: This indicates any property can be added to this object.
      [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [CreatedByUser <IMicrosoftGraphUser>]: user
      [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
      [Description <String>]: Provides a user-visible description of the item. Optional.
      [ETag <String>]: ETag for the item. Read-only.
      [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [LastModifiedByUser <IMicrosoftGraphUser>]: user
      [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
      [Name <String>]: The name of the item. Read-write.
      [ParentReference <IMicrosoftGraphItemReference>]: itemReference
      [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Columns <IMicrosoftGraphColumnDefinition[]>]: The collection of field definitions for this list.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Boolean <IMicrosoftGraphBooleanColumn>]: booleanColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
        [Calculated <IMicrosoftGraphCalculatedColumn>]: calculatedColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Format <String>]: For dateTime output types, the format of the value. Possible values are: dateOnly or dateTime.
          [Formula <String>]: The formula used to compute the value for this column.
          [OutputType <String>]: The output type used to format values in this column. Possible values are: boolean, currency, dateTime, number, or text.
        [Choice <IMicrosoftGraphChoiceColumn>]: choiceColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AllowTextEntry <Boolean?>]: If true, allows custom values that aren't in the configured choices.
          [Choices <String[]>]: The list of values available for this column.
          [DisplayAs <String>]: How the choices are to be presented in the UX. Must be one of checkBoxes, dropDownMenu, or radioButtons
        [ColumnGroup <String>]: For site columns, the name of the group this column belongs to. Helps organize related columns.
        [ContentApprovalStatus <IMicrosoftGraphContentApprovalStatusColumn>]: contentApprovalStatusColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
        [Currency <IMicrosoftGraphCurrencyColumn>]: currencyColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Locale <String>]: Specifies the locale from which to infer the currency symbol.
        [DateTime <IMicrosoftGraphDateTimeColumn>]: dateTimeColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DisplayAs <String>]: How the value should be presented in the UX. Must be one of default, friendly, or standard. See below for more details. If unspecified, treated as default.
          [Format <String>]: Indicates whether the value should be presented as a date only or a date and time. Must be one of dateOnly or dateTime
        [DefaultValue <IMicrosoftGraphDefaultColumnValue>]: defaultColumnValue
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Formula <String>]: The formula used to compute the default value for the column.
          [Value <String>]: The direct value to use as the default value for the column.
        [Description <String>]: The user-facing description of the column.
        [DisplayName <String>]: The user-facing name of the column.
        [EnforceUniqueValues <Boolean?>]: If true, no two list items may have the same value for this column.
        [Geolocation <IMicrosoftGraphGeolocationColumn>]: geolocationColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
        [Hidden <Boolean?>]: Specifies whether the column is displayed in the user interface.
        [HyperlinkOrPicture <IMicrosoftGraphHyperlinkOrPictureColumn>]: hyperlinkOrPictureColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [IsPicture <Boolean?>]: Specifies whether the display format used for URL columns is an image or a hyperlink.
        [Indexed <Boolean?>]: Specifies whether the column values can be used for sorting and searching.
        [IsDeletable <Boolean?>]: Indicates whether this column can be deleted.
        [IsReorderable <Boolean?>]: Indicates whether values in the column can be reordered. Read-only.
        [IsSealed <Boolean?>]: Specifies whether the column can be changed.
        [Lookup <IMicrosoftGraphLookupColumn>]: lookupColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AllowMultipleValues <Boolean?>]: Indicates whether multiple values can be selected from the source.
          [AllowUnlimitedLength <Boolean?>]: Indicates whether values in the column should be able to exceed the standard limit of 255 characters.
          [ColumnName <String>]: The name of the lookup source column.
          [ListId <String>]: The unique identifier of the lookup source list.
          [PrimaryLookupColumnId <String>]: If specified, this column is a secondary lookup, pulling an additional field from the list item looked up by the primary lookup. Use the list item looked up by the primary as the source for the column named here.
        [Name <String>]: The API-facing name of the column as it appears in the [fields][] on a [listItem][]. For the user-facing name, see displayName.
        [Number <IMicrosoftGraphNumberColumn>]: numberColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DecimalPlaces <String>]: How many decimal places to display. See below for information about the possible values.
          [DisplayAs <String>]: How the value should be presented in the UX. Must be one of number or percentage. If unspecified, treated as number.
          [Maximum <Double?>]: The maximum permitted value.
          [Minimum <Double?>]: The minimum permitted value.
        [PersonOrGroup <IMicrosoftGraphPersonOrGroupColumn>]: personOrGroupColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AllowMultipleSelection <Boolean?>]: Indicates whether multiple values can be selected from the source.
          [ChooseFromType <String>]: Whether to allow selection of people only, or people and groups. Must be one of peopleAndGroups or peopleOnly.
          [DisplayAs <String>]: How to display the information about the person or group chosen. See below.
        [PropagateChanges <Boolean?>]: If 'true', changes to this column will be propagated to lists that implement the column.
        [ReadOnly <Boolean?>]: Specifies whether the column values can be modified.
        [Required <Boolean?>]: Specifies whether the column value isn't optional.
        [SourceColumn <IMicrosoftGraphColumnDefinition>]: columnDefinition
        [SourceContentType <IMicrosoftGraphContentTypeInfo>]: contentTypeInfo
        [Term <IMicrosoftGraphTermColumn>]: termColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AllowMultipleValues <Boolean?>]: Specifies whether the column will allow more than one value.
          [ParentTerm <IMicrosoftGraphTermStoreTerm>]: term
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Children <IMicrosoftGraphTermStoreTerm[]>]: Children of current term.
            [CreatedDateTime <DateTime?>]: Date and time of term creation. Read-only.
            [Descriptions <IMicrosoftGraphTermStoreLocalizedDescription[]>]: Description about term that is dependent on the languageTag.
              [Description <String>]: The description in the localized language.
              [LanguageTag <String>]: The language tag for the label.
            [Labels <IMicrosoftGraphTermStoreLocalizedLabel[]>]: Label metadata for a term.
              [IsDefault <Boolean?>]: Indicates whether the label is the default label.
              [LanguageTag <String>]: The language tag for the label.
              [Name <String>]: The name of the label.
            [LastModifiedDateTime <DateTime?>]: Last date and time of term modification. Read-only.
            [Properties <IMicrosoftGraphKeyValue[]>]: Collection of properties on the term.
              [Key <String>]: Key for the key-value pair.
              [Value <String>]: Value for the key-value pair.
            [Relations <IMicrosoftGraphTermStoreRelation[]>]: To indicate which terms are related to the current term as either pinned or reused.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [FromTerm <IMicrosoftGraphTermStoreTerm>]: term
              [Relationship <String>]: relationType
              [Set <IMicrosoftGraphTermStoreSet>]: set
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Children <IMicrosoftGraphTermStoreTerm[]>]: Children terms of set in term [store].
                [CreatedDateTime <DateTime?>]: Date and time of set creation. Read-only.
                [Description <String>]: Description that gives details on the term usage.
                [LocalizedNames <IMicrosoftGraphTermStoreLocalizedName[]>]: Name of the set for each languageTag.
                  [LanguageTag <String>]: The language tag for the label.
                  [Name <String>]: The name in the localized language.
                [ParentGroup <IMicrosoftGraphTermStoreGroup>]: group
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [CreatedDateTime <DateTime?>]: Date and time of the group creation. Read-only.
                  [Description <String>]: Description that gives details on the term usage.
                  [DisplayName <String>]: Name of the group.
                  [ParentSiteId <String>]: ID of the parent site of this group.
                  [Scope <String>]: termGroupScope
                  [Sets <IMicrosoftGraphTermStoreSet[]>]: All sets under the group in a term [store].
                [Properties <IMicrosoftGraphKeyValue[]>]: Custom properties for the set.
                [Relations <IMicrosoftGraphTermStoreRelation[]>]: Indicates which terms have been pinned or reused directly under the set.
                [Terms <IMicrosoftGraphTermStoreTerm[]>]: All the terms under the set.
              [ToTerm <IMicrosoftGraphTermStoreTerm>]: term
            [Set <IMicrosoftGraphTermStoreSet>]: set
          [ShowFullyQualifiedName <Boolean?>]: Specifies whether to display the entire term path or only the term label.
          [TermSet <IMicrosoftGraphTermStoreSet>]: set
        [Text <IMicrosoftGraphTextColumn>]: textColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AllowMultipleLines <Boolean?>]: Whether to allow multiple lines of text.
          [AppendChangesToExistingText <Boolean?>]: Whether updates to this column should replace existing text, or append to it.
          [LinesForEditing <Int32?>]: The size of the text box.
          [MaxLength <Int32?>]: The maximum number of characters for the value.
          [TextType <String>]: The type of text being stored. Must be one of plain or richText
        [Thumbnail <IMicrosoftGraphThumbnailColumn>]: thumbnailColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
        [Type <String>]: columnTypes
        [Validation <IMicrosoftGraphColumnValidation>]: columnValidation
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DefaultLanguage <String>]: Default BCP 47 language tag for the description.
          [Descriptions <IMicrosoftGraphDisplayNameLocalization[]>]: Localized messages that explain what is needed for this column's value to be considered valid. User will be prompted with this message if validation fails.
            [DisplayName <String>]: If present, the value of this field contains the displayName string that has been set for the language present in the languageTag field.
            [LanguageTag <String>]: Provides the language culture-code and friendly name of the language that the displayName field has been provided in.
          [Formula <String>]: The formula to validate column value. For examples, see Examples of common formulas in lists.
      [ContentTypes <IMicrosoftGraphContentType[]>]: The collection of content types present in this list.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AssociatedHubsUrls <String[]>]: List of canonical URLs for hub sites with which this content type is associated to. This will contain all hub sites where this content type is queued to be enforced or is already enforced. Enforcing a content type means that the content type will be applied to the lists in the enforced sites.
        [Base <IMicrosoftGraphContentType>]: contentType
        [BaseTypes <IMicrosoftGraphContentType[]>]: The collection of content types that are ancestors of this content type.
        [ColumnLinks <IMicrosoftGraphColumnLink[]>]: The collection of columns that are required by this content type.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Name <String>]: The name of the column  in this content type.
        [ColumnPositions <IMicrosoftGraphColumnDefinition[]>]: Column order information in a content type.
        [Columns <IMicrosoftGraphColumnDefinition[]>]: The collection of column definitions for this contentType.
        [Description <String>]: The descriptive text for the item.
        [DocumentSet <IMicrosoftGraphDocumentSet>]: documentSet
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AllowedContentTypes <IMicrosoftGraphContentTypeInfo[]>]: Content types allowed in document set.
          [DefaultContents <IMicrosoftGraphDocumentSetContent[]>]: Default contents of document set.
            [ContentType <IMicrosoftGraphContentTypeInfo>]: contentTypeInfo
            [FileName <String>]: Name of the file in resource folder that should be added as a default content or a template in the document set.
            [FolderName <String>]: Folder name in which the file will be placed when a new document set is created in the library.
          [PropagateWelcomePageChanges <Boolean?>]: Specifies whether to push welcome page changes to inherited content types.
          [SharedColumns <IMicrosoftGraphColumnDefinition[]>]: 
          [ShouldPrefixNameToFile <Boolean?>]: Indicates whether to add the name of the document set to each file name.
          [WelcomePageColumns <IMicrosoftGraphColumnDefinition[]>]: 
          [WelcomePageUrl <String>]: Welcome page absolute URL.
        [DocumentTemplate <IMicrosoftGraphDocumentSetContent>]: documentSetContent
        [Group <String>]: The name of the group this content type belongs to. Helps organize related content types.
        [Hidden <Boolean?>]: Indicates whether the content type is hidden in the list's 'New' menu.
        [InheritedFrom <IMicrosoftGraphItemReference>]: itemReference
        [IsBuiltIn <Boolean?>]: Specifies if a content type is a built-in content type.
        [Name <String>]: The name of the content type.
        [Order <IMicrosoftGraphContentTypeOrder>]: contentTypeOrder
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Default <Boolean?>]: Indicates whether this is the default content type
          [Position <Int32?>]: Specifies the position in which the content type appears in the selection UI.
        [ParentId <String>]: The unique identifier of the content type.
        [PropagateChanges <Boolean?>]: If true, any changes made to the content type will be pushed to inherited content types and lists that implement the content type.
        [ReadOnly <Boolean?>]: If true, the content type can't be modified unless this value is first set to false.
        [Sealed <Boolean?>]: If true, the content type can't be modified by users or through push-down operations. Only site collection administrators can seal or unseal content types.
      [DisplayName <String>]: The displayable title of the list.
      [Drive <IMicrosoftGraphDrive>]: drive
      [Items <IMicrosoftGraphListItem[]>]: All items contained in the list.
      [List <IMicrosoftGraphListInfo>]: listInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ContentTypesEnabled <Boolean?>]: If true, indicates that content types are enabled for this list.
        [Hidden <Boolean?>]: If true, indicates that the list is not normally visible in the SharePoint user experience.
        [Template <String>]: An enumerated value that represents the base list template used in creating the list. Possible values include documentLibrary, genericList, task, survey, announcements, contacts, and more.
      [Operations <IMicrosoftGraphRichLongRunningOperation[]>]: The collection of long-running operations on the list.
        [CreatedDateTime <DateTime?>]: The start time of the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        [LastActionDateTime <DateTime?>]: The time of the last action in the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        [ResourceLocation <String>]: URI of the resource that the operation is performed on.
        [Status <String>]: longRunningOperationStatus
        [StatusDetail <String>]: Details about the status of the operation.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Error <IMicrosoftGraphPublicError>]: publicError
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Code <String>]: Represents the error code.
          [Details <IMicrosoftGraphPublicErrorDetail[]>]: Details of the error.
            [Code <String>]: The error code.
            [Message <String>]: The error message.
            [Target <String>]: The target of the error.
          [InnerError <IMicrosoftGraphPublicInnerError>]: publicInnerError
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Code <String>]: The error code.
            [Details <IMicrosoftGraphPublicErrorDetail[]>]: A collection of error details.
            [Message <String>]: The error message.
            [Target <String>]: The target of the error.
          [Message <String>]: A non-localized message for the developer.
          [Target <String>]: The target of the error.
        [PercentageComplete <Int32?>]: A value between 0 and 100 that indicates the progress of the operation.
        [ResourceId <String>]: The unique identifier for the result.
        [Type <String>]: The type of the operation.
      [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
      [Subscriptions <IMicrosoftGraphSubscription[]>]: The set of subscriptions on the list.
      [System <IMicrosoftGraphSystemFacet>]: systemFacet
        [(Any) <Object>]: This indicates any property can be added to this object.
    [Owner <IMicrosoftGraphIdentitySet>]: identitySet
    [Quota <IMicrosoftGraphQuota>]: quota
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Deleted <Int64?>]: Total space consumed by files in the recycle bin, in bytes. Read-only.
      [Remaining <Int64?>]: Total space remaining before reaching the quota limit, in bytes. Read-only.
      [State <String>]: Enumeration value that indicates the state of the storage space. Read-only.
      [StoragePlanInformation <IMicrosoftGraphStoragePlanInformation>]: storagePlanInformation
        [(Any) <Object>]: This indicates any property can be added to this object.
        [UpgradeAvailable <Boolean?>]: Indicates whether there are higher storage quota plans available. Read-only.
      [Total <Int64?>]: Total allowed storage space, in bytes. Read-only.
      [Used <Int64?>]: Total space used, in bytes. Read-only.
    [Root <IMicrosoftGraphDriveItem>]: driveItem
    [SharePointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
    [Special <IMicrosoftGraphDriveItem[]>]: Collection of common folders available in OneDrive. Read-only. Nullable.
    [System <IMicrosoftGraphSystemFacet>]: systemFacet
  [Drives <IMicrosoftGraphDrive[]>]: A collection of drives available for this user. Read-only.
  [EmployeeExperience <IMicrosoftGraphEmployeeExperienceUser>]: employeeExperienceUser
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [LearningCourseActivities <IMicrosoftGraphLearningCourseActivity[]>]: 
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CompletedDateTime <DateTime?>]: Date and time when the assignment was completed. Optional.
      [CompletionPercentage <Int32?>]: The percentage completion value of the course activity. Optional.
      [ExternalcourseActivityId <String>]: A course activity ID generated by the provider. Optional.
      [LearnerUserId <String>]: The user ID of the learner to whom the activity is assigned. Required.
      [LearningContentId <String>]: The ID of the learning content created in Viva Learning. Required.
      [LearningProviderId <String>]: The registration ID of the provider. Required.
      [Status <String>]: courseStatus
  [EmployeeHireDate <DateTime?>]: The date and time when the user was hired or will start work in case of a future hire. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in).
  [EmployeeId <String>]: The employee identifier assigned to the user by the organization. The maximum length is 16 characters. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
  [EmployeeLeaveDateTime <DateTime?>]: The date and time when the user left or will leave the organization. To read this property, the calling app must be assigned the User-LifeCycleInfo.Read.All permission. To write this property, the calling app must be assigned the User.Read.All and User-LifeCycleInfo.ReadWrite.All permissions. To read this property in delegated scenarios, the admin needs one of the following Azure AD roles: Lifecycle Workflows Administrator, Global Reader, or Global Administrator. To write this property in delegated scenarios, the admin needs the Global Administrator role. Supports $filter (eq, ne, not , ge, le, in). For more information, see Configure the employeeLeaveDateTime property for a user.
  [EmployeeOrgData <IMicrosoftGraphEmployeeOrgData>]: employeeOrgData
    [(Any) <Object>]: This indicates any property can be added to this object.
    [CostCenter <String>]: The cost center associated with the user. Returned only on $select. Supports $filter.
    [Division <String>]: The name of the division in which the user works. Returned only on $select. Supports $filter.
  [EmployeeType <String>]: Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith).
  [Events <IMicrosoftGraphEvent[]>]: The user's events. Default is to show Events under the Default Calendar. Read-only. Nullable.
  [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the user. Read-only. Supports $expand. Nullable.
  [ExternalUserState <String>]: For an external user invited to the tenant using the invitation API, this property represents the invited user's invitation status. For invited users, the state can be PendingAcceptance or Accepted, or null for all other users. Returned only on $select. Supports $filter (eq, ne, not , in).
  [ExternalUserStateChangeDateTime <DateTime?>]: Shows the timestamp for the latest change to the externalUserState property. Returned only on $select. Supports $filter (eq, ne, not , in).
  [FaxNumber <String>]: The fax number of the user. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
  [FollowedSites <IMicrosoftGraphSite[]>]: 
    [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
    [CreatedByUser <IMicrosoftGraphUser>]: user
    [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
    [Description <String>]: Provides a user-visible description of the item. Optional.
    [ETag <String>]: ETag for the item. Read-only.
    [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
    [LastModifiedByUser <IMicrosoftGraphUser>]: user
    [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
    [Name <String>]: The name of the item. Read-write.
    [ParentReference <IMicrosoftGraphItemReference>]: itemReference
    [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Analytics <IMicrosoftGraphItemAnalytics>]: itemAnalytics
    [Columns <IMicrosoftGraphColumnDefinition[]>]: The collection of column definitions reusable across lists under this site.
    [ContentTypes <IMicrosoftGraphContentType[]>]: The collection of content types defined for this site.
    [DisplayName <String>]: The full title for the site. Read-only.
    [Drive <IMicrosoftGraphDrive>]: drive
    [Drives <IMicrosoftGraphDrive[]>]: The collection of drives (document libraries) under this site.
    [Error <IMicrosoftGraphPublicError>]: publicError
    [ExternalColumns <IMicrosoftGraphColumnDefinition[]>]: 
    [Items <IMicrosoftGraphBaseItem[]>]: Used to address any item contained in this site. This collection can't be enumerated.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [CreatedByUser <IMicrosoftGraphUser>]: user
      [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
      [Description <String>]: Provides a user-visible description of the item. Optional.
      [ETag <String>]: ETag for the item. Read-only.
      [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [LastModifiedByUser <IMicrosoftGraphUser>]: user
      [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
      [Name <String>]: The name of the item. Read-write.
      [ParentReference <IMicrosoftGraphItemReference>]: itemReference
      [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
    [Lists <IMicrosoftGraphList[]>]: The collection of lists under this site.
    [Onenote <IMicrosoftGraphOnenote>]: onenote
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Notebooks <IMicrosoftGraphNotebook[]>]: The collection of OneNote notebooks that are owned by the user or group. Read-only. Nullable.
        [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [DisplayName <String>]: The name of the notebook.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [LastModifiedDateTime <DateTime?>]: The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        [Self <String>]: The endpoint where you can get details about the page. Read-only.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [IsDefault <Boolean?>]: Indicates whether this is the user's default notebook. Read-only.
        [IsShared <Boolean?>]: Indicates whether the notebook is shared. If true, the contents of the notebook can be seen by people other than the owner. Read-only.
        [Links <IMicrosoftGraphNotebookLinks>]: notebookLinks
          [(Any) <Object>]: This indicates any property can be added to this object.
          [OneNoteClientUrl <IMicrosoftGraphExternalLink>]: externalLink
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Href <String>]: The URL of the link.
          [OneNoteWebUrl <IMicrosoftGraphExternalLink>]: externalLink
        [SectionGroups <IMicrosoftGraphSectionGroup[]>]: The section groups in the notebook. Read-only. Nullable.
          [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [DisplayName <String>]: The name of the notebook.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [LastModifiedDateTime <DateTime?>]: The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [Self <String>]: The endpoint where you can get details about the page. Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [ParentNotebook <IMicrosoftGraphNotebook>]: notebook
          [ParentSectionGroup <IMicrosoftGraphSectionGroup>]: sectionGroup
          [SectionGroups <IMicrosoftGraphSectionGroup[]>]: The section groups in the section. Read-only. Nullable.
          [SectionGroupsUrl <String>]: The URL for the sectionGroups navigation property, which returns all the section groups in the section group. Read-only.
          [Sections <IMicrosoftGraphOnenoteSection[]>]: The sections in the section group. Read-only. Nullable.
            [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [DisplayName <String>]: The name of the notebook.
            [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [LastModifiedDateTime <DateTime?>]: The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
            [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
            [Self <String>]: The endpoint where you can get details about the page. Read-only.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [IsDefault <Boolean?>]: Indicates whether this is the user's default section. Read-only.
            [Links <IMicrosoftGraphSectionLinks>]: sectionLinks
              [(Any) <Object>]: This indicates any property can be added to this object.
              [OneNoteClientUrl <IMicrosoftGraphExternalLink>]: externalLink
              [OneNoteWebUrl <IMicrosoftGraphExternalLink>]: externalLink
            [Pages <IMicrosoftGraphOnenotePage[]>]: The collection of pages in the section.  Read-only. Nullable.
              [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
              [Self <String>]: The endpoint where you can get details about the page. Read-only.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Content <Byte[]>]: The page's HTML content.
              [ContentUrl <String>]: The URL for the page's HTML content.  Read-only.
              [CreatedByAppId <String>]: The unique identifier of the application that created the page. Read-only.
              [LastModifiedDateTime <DateTime?>]: The date and time when the page was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
              [Level <Int32?>]: The indentation level of the page. Read-only.
              [Links <IMicrosoftGraphPageLinks>]: pageLinks
                [(Any) <Object>]: This indicates any property can be added to this object.
                [OneNoteClientUrl <IMicrosoftGraphExternalLink>]: externalLink
                [OneNoteWebUrl <IMicrosoftGraphExternalLink>]: externalLink
              [Order <Int32?>]: The order of the page within its parent section. Read-only.
              [ParentNotebook <IMicrosoftGraphNotebook>]: notebook
              [ParentSection <IMicrosoftGraphOnenoteSection>]: onenoteSection
              [Title <String>]: The title of the page.
              [UserTags <String[]>]: 
            [PagesUrl <String>]: The pages endpoint where you can get details for all the pages in the section. Read-only.
            [ParentNotebook <IMicrosoftGraphNotebook>]: notebook
            [ParentSectionGroup <IMicrosoftGraphSectionGroup>]: sectionGroup
          [SectionsUrl <String>]: The URL for the sections navigation property, which returns all the sections in the section group. Read-only.
        [SectionGroupsUrl <String>]: The URL for the sectionGroups navigation property, which returns all the section groups in the notebook. Read-only.
        [Sections <IMicrosoftGraphOnenoteSection[]>]: The sections in the notebook. Read-only. Nullable.
        [SectionsUrl <String>]: The URL for the sections navigation property, which returns all the sections in the notebook. Read-only.
        [UserRole <String>]: onenoteUserRole
      [Operations <IMicrosoftGraphOnenoteOperation[]>]: The status of OneNote operations. Getting an operations collection is not supported, but you can get the status of long-running operations if the Operation-Location header is returned in the response. Read-only. Nullable.
        [CreatedDateTime <DateTime?>]: The start time of the operation.
        [LastActionDateTime <DateTime?>]: The time of the last action of the operation.
        [Status <String>]: operationStatus
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Error <IMicrosoftGraphOnenoteOperationError>]: onenoteOperationError
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Code <String>]: The error code.
          [Message <String>]: The error message.
        [PercentComplete <String>]: The operation percent complete if the operation is still in running status.
        [ResourceId <String>]: The resource id.
        [ResourceLocation <String>]: The resource URI for the object. For example, the resource URI for a copied page or section.
      [Pages <IMicrosoftGraphOnenotePage[]>]: The pages in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
      [Resources <IMicrosoftGraphOnenoteResource[]>]: The image and other file resources in OneNote pages. Getting a resources collection is not supported, but you can get the binary content of a specific resource. Read-only. Nullable.
        [Self <String>]: The endpoint where you can get details about the page. Read-only.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Content <Byte[]>]: The content stream
        [ContentUrl <String>]: The URL for downloading the content
      [SectionGroups <IMicrosoftGraphSectionGroup[]>]: The section groups in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
      [Sections <IMicrosoftGraphOnenoteSection[]>]: The sections in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
    [Operations <IMicrosoftGraphRichLongRunningOperation[]>]: The collection of long-running operations on the site.
    [Permissions <IMicrosoftGraphPermission[]>]: The permissions associated with the site. Nullable.
    [Root <IMicrosoftGraphRoot>]: root
    [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
    [SiteCollection <IMicrosoftGraphSiteCollection>]: siteCollection
      [(Any) <Object>]: This indicates any property can be added to this object.
      [DataLocationCode <String>]: The geographic region code for where this site collection resides. Read-only.
      [Hostname <String>]: The hostname for the site collection. Read-only.
      [Root <IMicrosoftGraphRoot>]: root
    [Sites <IMicrosoftGraphSite[]>]: The collection of the sub-sites under this site.
    [TermStore <IMicrosoftGraphTermStore>]: store
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DefaultLanguageTag <String>]: Default language of the term store.
      [Groups <IMicrosoftGraphTermStoreGroup[]>]: Collection of all groups available in the term store.
      [LanguageTags <String[]>]: List of languages for the term store.
      [Sets <IMicrosoftGraphTermStoreSet[]>]: Collection of all sets available in the term store. This relationship can only be used to load a specific term set.
    [TermStores <IMicrosoftGraphTermStore[]>]: The collection of termStores under this site.
  [GivenName <String>]: The given name (first name) of the user. Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
  [HireDate <DateTime?>]: The hire date of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned only on $select.  Note: This property is specific to SharePoint Online. We recommend using the native employeeHireDate property to set and update hire date values using Microsoft Graph APIs.
  [Identities <IMicrosoftGraphObjectIdentity[]>]: Represents the identities that can be used to sign in to this user account. An identity can be provided by Microsoft (also known as a local account), by organizations, or by social identity providers such as Facebook, Google, and Microsoft, and tied to a user account. May contain multiple items with the same signInType value. Returned only on $select. Supports $filter (eq) including on null values, only where the signInType is not userPrincipalName.
    [Issuer <String>]: Specifies the issuer of the identity, for example facebook.com.For local accounts (where signInType is not federated), this property is the local B2C tenant default domain name, for example contoso.onmicrosoft.com.For external users from other Azure AD organization, this will be the domain of the federated organization, for example contoso.com.Supports $filter. 512 character limit.
    [IssuerAssignedId <String>]: Specifies the unique identifier assigned to the user by the issuer. The combination of issuer and issuerAssignedId must be unique within the organization. Represents the sign-in name for the user, when signInType is set to emailAddress or userName (also known as local accounts).When signInType is set to: emailAddress, (or a custom string that starts with emailAddress like emailAddress1) issuerAssignedId must be a valid email addressuserName, issuerAssignedId must begin with alphabetical character or number, and can only contain alphanumeric characters and the following symbols: - or Supports $filter. 64 character limit.
    [SignInType <String>]: Specifies the user sign-in types in your directory, such as emailAddress, userName, federated, or userPrincipalName. federated represents a unique identifier for a user from an issuer, that can be in any format chosen by the issuer. Setting or updating a userPrincipalName identity will update the value of the userPrincipalName property on the user object. The validations performed on the userPrincipalName property on the user object, for example, verified domains and acceptable characters, will be performed when setting or updating a userPrincipalName identity. Additional validation is enforced on issuerAssignedId when the sign-in type is set to emailAddress or userName. This property can also be set to any custom string.
  [ImAddresses <String[]>]: The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only. Returned only on $select. Supports $filter (eq, not, ge, le, startsWith).
  [InferenceClassification <IMicrosoftGraphInferenceClassification>]: inferenceClassification
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Overrides <IMicrosoftGraphInferenceClassificationOverride[]>]: A set of overrides for a user to always classify messages from specific senders in certain ways: focused, or other. Read-only. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ClassifyAs <String>]: inferenceClassificationType
      [SenderEmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
  [Insights <IMicrosoftGraphOfficeGraphInsights>]: officeGraphInsights
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Shared <IMicrosoftGraphSharedInsight[]>]: Calculated relationship identifying documents shared with or by the user. This includes URLs, file attachments, and reference attachments to OneDrive for Business and SharePoint files found in Outlook messages and meetings. This also includes URLs and reference attachments to Teams conversations. Ordered by recency of share.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [LastShared <IMicrosoftGraphSharingDetail>]: sharingDetail
        [(Any) <Object>]: This indicates any property can be added to this object.
        [SharedBy <IMicrosoftGraphInsightIdentity>]: insightIdentity
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Address <String>]: The email address of the user who shared the item.
          [DisplayName <String>]: The display name of the user who shared the item.
          [Id <String>]: The id of the user who shared the item.
        [SharedDateTime <DateTime?>]: The date and time the file was last shared. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        [SharingReference <IMicrosoftGraphResourceReference>]: resourceReference
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The item's unique identifier.
          [Type <String>]: A string value that can be used to classify the item, such as 'microsoft.graph.driveItem'
          [WebUrl <String>]: A URL leading to the referenced item.
        [SharingSubject <String>]: The subject with which the document was shared.
        [SharingType <String>]: Determines the way the document was shared, can be by a 'Link', 'Attachment', 'Group', 'Site'.
      [LastSharedMethod <IMicrosoftGraphEntity>]: entity
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
      [Resource <IMicrosoftGraphEntity>]: entity
      [ResourceReference <IMicrosoftGraphResourceReference>]: resourceReference
      [ResourceVisualization <IMicrosoftGraphResourceVisualization>]: resourceVisualization
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ContainerDisplayName <String>]: A string describing where the item is stored. For example, the name of a SharePoint site or the user name identifying the owner of the OneDrive storing the item.
        [ContainerType <String>]: Can be used for filtering by the type of container in which the file is stored. Such as Site or OneDriveBusiness.
        [ContainerWebUrl <String>]: A path leading to the folder in which the item is stored.
        [MediaType <String>]: The item's media type. Can be used for filtering for a specific type of file based on supported IANA Media Mime Types. Note that not all Media Mime Types are supported.
        [PreviewImageUrl <String>]: A URL leading to the preview image for the item.
        [PreviewText <String>]: A preview text for the item.
        [Title <String>]: The item's title text.
        [Type <String>]: The item's media type. Can be used for filtering for a specific file based on a specific type. See below for supported types.
      [SharingHistory <IMicrosoftGraphSharingDetail[]>]: 
    [Trending <IMicrosoftGraphTrending[]>]: Calculated relationship identifying documents trending around a user. Trending documents are calculated based on activity of the user's closest network of people and include files stored in OneDrive for Business and SharePoint. Trending insights help the user to discover potentially useful content that the user has access to, but has never viewed before.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [LastModifiedDateTime <DateTime?>]: 
      [Resource <IMicrosoftGraphEntity>]: entity
      [ResourceReference <IMicrosoftGraphResourceReference>]: resourceReference
      [ResourceVisualization <IMicrosoftGraphResourceVisualization>]: resourceVisualization
      [Weight <Double?>]: Value indicating how much the document is currently trending. The larger the number, the more the document is currently trending around the user (the more relevant it is). Returned documents are sorted by this value.
    [Used <IMicrosoftGraphUsedInsight[]>]: Calculated relationship identifying the latest documents viewed or modified by a user, including OneDrive for Business and SharePoint documents, ranked by recency of use.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [LastUsed <IMicrosoftGraphUsageDetails>]: usageDetails
        [(Any) <Object>]: This indicates any property can be added to this object.
        [LastAccessedDateTime <DateTime?>]: The date and time the resource was last accessed by the user. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        [LastModifiedDateTime <DateTime?>]: The date and time the resource was last modified by the user. The timestamp represents date and time information using ISO 8601 format and is always in UTC time.For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
      [Resource <IMicrosoftGraphEntity>]: entity
      [ResourceReference <IMicrosoftGraphResourceReference>]: resourceReference
      [ResourceVisualization <IMicrosoftGraphResourceVisualization>]: resourceVisualization
  [Interests <String[]>]: A list for the user to describe their interests. Returned only on $select.
  [IsResourceAccount <Boolean?>]: Do not use – reserved for future use.
  [JobTitle <String>]: The user's job title. Maximum length is 128 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
  [JoinedTeams <IMicrosoftGraphTeam[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AllChannels <IMicrosoftGraphChannel[]>]: List of channels either hosted in or shared with the team (incoming channels).
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedDateTime <DateTime?>]: Read only. Timestamp at which the channel was created.
      [Description <String>]: Optional textual description for the channel.
      [DisplayName <String>]: Channel name as it will appear to the user in Microsoft Teams. The maximum length is 50 characters.
      [Email <String>]: The email address for sending messages to the channel. Read-only.
      [FilesFolder <IMicrosoftGraphDriveItem>]: driveItem
      [IsFavoriteByDefault <Boolean?>]: Indicates whether the channel should automatically be marked 'favorite' for all members of the team. Can only be set programmatically with Create team. Default: false.
      [Members <IMicrosoftGraphConversationMember[]>]: A collection of membership records associated with the channel.
      [MembershipType <String>]: channelMembershipType
      [Messages <IMicrosoftGraphChatMessage[]>]: A collection of all the messages in the channel. A navigation property. Nullable.
      [SharedWithTeams <IMicrosoftGraphSharedWithChannelTeamInfo[]>]: A collection of teams with which a channel is shared.
        [DisplayName <String>]: The name of the team.
        [Team <IMicrosoftGraphTeam>]: team
        [TenantId <String>]: The ID of the Azure Active Directory tenant.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AllowedMembers <IMicrosoftGraphConversationMember[]>]: A collection of team members who have access to the shared channel.
        [IsHostTeam <Boolean?>]: Indicates whether the team is the host of the channel.
      [Tabs <IMicrosoftGraphTeamsTab[]>]: A collection of all the tabs in the channel. A navigation property.
      [TenantId <String>]: The ID of the Azure Active Directory tenant.
      [WebUrl <String>]: A hyperlink that will go to the channel in Microsoft Teams. This is the URL that you get when you right-click a channel in Microsoft Teams and select Get link to channel. This URL should be treated as an opaque blob, and not parsed. Read-only.
    [Channels <IMicrosoftGraphChannel[]>]: The collection of channels and messages associated with the team.
    [Classification <String>]: An optional label. Typically describes the data or business sensitivity of the team. Must match one of a pre-configured set in the tenant's directory.
    [CreatedDateTime <DateTime?>]: Timestamp at which the team was created.
    [Description <String>]: An optional description for the team. Maximum length: 1024 characters.
    [DisplayName <String>]: The name of the team.
    [FunSettings <IMicrosoftGraphTeamFunSettings>]: teamFunSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [AllowCustomMemes <Boolean?>]: If set to true, enables users to include custom memes.
      [AllowGiphy <Boolean?>]: If set to true, enables Giphy use.
      [AllowStickersAndMemes <Boolean?>]: If set to true, enables users to include stickers and memes.
      [GiphyContentRating <String>]: giphyRatingType
    [Group <IMicrosoftGraphGroup>]: group
      [(Any) <Object>]: This indicates any property can be added to this object.
      [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AcceptedSenders <IMicrosoftGraphDirectoryObject[]>]: The list of users or groups that are allowed to create post's or calendar events in this group. If this list is non-empty then only users or groups listed here are allowed to post.
      [AllowExternalSenders <Boolean?>]: Indicates if people external to the organization can send messages to the group. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
      [AppRoleAssignments <IMicrosoftGraphAppRoleAssignment[]>]: Represents the app roles a group has been granted for an application. Supports $expand.
      [AssignedLabels <IMicrosoftGraphAssignedLabel[]>]: The list of sensitivity label pairs (label ID, label name) associated with a Microsoft 365 group. Returned only on $select.
        [DisplayName <String>]: The display name of the label. Read-only.
        [LabelId <String>]: The unique identifier of the label.
      [AssignedLicenses <IMicrosoftGraphAssignedLicense[]>]: The licenses that are assigned to the group. Returned only on $select. Supports $filter (eq).Read-only.
      [AutoSubscribeNewMembers <Boolean?>]: Indicates if new members added to the group will be auto-subscribed to receive email notifications. You can set this property in a PATCH request for the group; do not set it in the initial POST request that creates the group. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
      [Calendar <IMicrosoftGraphCalendar>]: calendar
      [CalendarView <IMicrosoftGraphEvent[]>]: The calendar view for the calendar. Read-only.
      [Classification <String>]: Describes a classification for the group (such as low, medium or high business impact). Valid values for this property are defined by creating a ClassificationList setting value, based on the template definition.Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith).
      [Conversations <IMicrosoftGraphConversation[]>]: The group's conversations.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [HasAttachments <Boolean?>]: Indicates whether any of the posts within this Conversation has at least one attachment. Supports $filter (eq, ne) and $search.
        [LastDeliveredDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [Preview <String>]: A short summary from the body of the latest post in this conversation. Supports $filter (eq, ne, le, ge).
        [Threads <IMicrosoftGraphConversationThread[]>]: A collection of all the conversation threads in the conversation. A navigation property. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [CcRecipients <IMicrosoftGraphRecipient[]>]: The Cc: recipients for the thread. Returned only on $select.
          [HasAttachments <Boolean?>]: Indicates whether any of the posts within this thread has at least one attachment. Returned by default.
          [IsLocked <Boolean?>]: Indicates if the thread is locked. Returned by default.
          [LastDeliveredDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.Returned by default.
          [Posts <IMicrosoftGraphPost[]>]: 
            [Categories <String[]>]: The categories associated with the item
            [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
            [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
            [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Attachments <IMicrosoftGraphAttachment[]>]: Read-only. Nullable. Supports $expand.
            [Body <IMicrosoftGraphItemBody>]: itemBody
            [ConversationId <String>]: Unique ID of the conversation. Read-only.
            [ConversationThreadId <String>]: Unique ID of the conversation thread. Read-only.
            [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the post. Read-only. Nullable. Supports $expand.
            [From <IMicrosoftGraphRecipient>]: recipient
            [HasAttachments <Boolean?>]: Indicates whether the post has at least one attachment. This is a default property.
            [InReplyTo <IMicrosoftGraphPost>]: post
            [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the post. Read-only. Nullable.
            [NewParticipants <IMicrosoftGraphRecipient[]>]: Conversation participants that were added to the thread as part of this post.
            [ReceivedDateTime <DateTime?>]: Specifies when the post was received. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
            [Sender <IMicrosoftGraphRecipient>]: recipient
            [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the post. Read-only. Nullable.
          [Preview <String>]: A short summary from the body of the latest post in this conversation. Returned by default.
          [ToRecipients <IMicrosoftGraphRecipient[]>]: The To: recipients for the thread. Returned only on $select.
          [Topic <String>]: The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated. Returned by default.
          [UniqueSenders <String[]>]: All the users that sent a message to this thread. Returned by default.
        [Topic <String>]: The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated.
        [UniqueSenders <String[]>]: All the users that sent a message to this Conversation.
      [CreatedDateTime <DateTime?>]: Timestamp of when the group was created. The value cannot be modified and is automatically populated when the group is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Read-only.
      [CreatedOnBehalfOf <IMicrosoftGraphDirectoryObject>]: directoryObject
      [Description <String>]: An optional description for the group. Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith) and $search.
      [DisplayName <String>]: The display name for the group. This property is required when a group is created and cannot be cleared during updates. Maximum length is 256 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values), $search, and $orderBy.
      [Drive <IMicrosoftGraphDrive>]: drive
      [Drives <IMicrosoftGraphDrive[]>]: The group's drives. Read-only.
      [Events <IMicrosoftGraphEvent[]>]: The group's calendar events.
      [ExpirationDateTime <DateTime?>]: Timestamp of when the group is set to expire. Is null for security groups but for Microsoft 365 groups, it represents when the group is set to expire as defined in the groupLifecyclePolicy. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.
      [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the group. Read-only. Nullable.
      [GroupLifecyclePolicies <IMicrosoftGraphGroupLifecyclePolicy[]>]: The collection of lifecycle policies for this group. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AlternateNotificationEmails <String>]: List of email address to send notifications for groups without owners. Multiple email address can be defined by separating email address with a semicolon.
        [GroupLifetimeInDays <Int32?>]: Number of days before a group expires and needs to be renewed. Once renewed, the group expiration is extended by the number of days defined.
        [ManagedGroupTypes <String>]: The group type for which the expiration policy applies. Possible values are All, Selected or None.
      [GroupTypes <String[]>]: Specifies the group type and its membership. If the collection contains Unified, the group is a Microsoft 365 group; otherwise, it's either a security group or distribution group. For details, see groups overview.If the collection includes DynamicMembership, the group has dynamic membership; otherwise, membership is static. Returned by default. Supports $filter (eq, not).
      [HasMembersWithLicenseErrors <Boolean?>]: Indicates whether there are members in this group that have license errors from its group-based license assignment. This property is never returned on a GET operation. You can use it as a $filter argument to get groups that have members with license errors (that is, filter for this property being true). See an example. Supports $filter (eq).
      [HideFromAddressLists <Boolean?>]: True if the group is not displayed in certain parts of the Outlook UI: the Address Book, address lists for selecting message recipients, and the Browse Groups dialog for searching groups; otherwise, false. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
      [HideFromOutlookClients <Boolean?>]: True if the group is not displayed in Outlook clients, such as Outlook for Windows and Outlook on the web; otherwise, false. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
      [IsArchived <Boolean?>]: When a group is associated with a team this property determines whether the team is in read-only mode.To read this property, use the /group/{groupId}/team endpoint or the Get team API. To update this property, use the archiveTeam and unarchiveTeam APIs.
      [IsAssignableToRole <Boolean?>]: Indicates whether this group can be assigned to an Azure Active Directory role or not. Optional. This property can only be set while creating the group and is immutable. If set to true, the securityEnabled property must also be set to true, visibility must be Hidden, and the group cannot be a dynamic group (that is, groupTypes cannot contain DynamicMembership). Only callers in Global Administrator and Privileged Role Administrator roles can set this property. The caller must also be assigned the RoleManagement.ReadWrite.Directory permission to set this property or update the membership of such groups. For more, see Using a group to manage Azure AD role assignmentsUsing this feature requires a Azure AD Premium P1 license. Returned by default. Supports $filter (eq, ne, not).
      [IsSubscribedByMail <Boolean?>]: Indicates whether the signed-in user is subscribed to receive email conversations. Default value is true. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
      [LicenseProcessingState <IMicrosoftGraphLicenseProcessingState>]: licenseProcessingState
        [(Any) <Object>]: This indicates any property can be added to this object.
        [State <String>]: 
      [Mail <String>]: The SMTP address for the group, for example, 'serviceadmins@contoso.onmicrosoft.com'. Returned by default. Read-only. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
      [MailEnabled <Boolean?>]: Specifies whether the group is mail-enabled. Required. Returned by default. Supports $filter (eq, ne, not).
      [MailNickname <String>]: The mail alias for the group, unique for Microsoft 365 groups in the organization. Maximum length is 64 characters. This property can contain only characters in the ASCII character set 0 - 127 except the following: @ () / [] ' ; : <> , SPACE. Required. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
      [MemberOf <IMicrosoftGraphDirectoryObject[]>]: Groups that this group is a member of. HTTP Methods: GET (supported for all groups). Read-only. Nullable. Supports $expand.
      [Members <IMicrosoftGraphDirectoryObject[]>]: The members of this group, who can be users, devices, other groups, or service principals. Supports the List members, Add member, and Remove member operations. Nullable. Supports $expand including nested $select. For example, /groups?$filter=startsWith(displayName,'Role')&$select=id,displayName&$expand=members($select=id,userPrincipalName,displayName).
      [MembersWithLicenseErrors <IMicrosoftGraphDirectoryObject[]>]: A list of group members with license errors from this group-based license assignment. Read-only.
      [MembershipRule <String>]: The rule that determines members for this group if the group is a dynamic group (groupTypes contains DynamicMembership). For more information about the syntax of the membership rule, see Membership Rules syntax. Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith).
      [MembershipRuleProcessingState <String>]: Indicates whether the dynamic membership processing is on or paused. Possible values are On or Paused. Returned by default. Supports $filter (eq, ne, not, in).
      [OnPremisesDomainName <String>]: 
      [OnPremisesLastSyncDateTime <DateTime?>]: Indicates the last time at which the group was synced with the on-premises directory.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Read-only. Supports $filter (eq, ne, not, ge, le, in).
      [OnPremisesNetBiosName <String>]: 
      [OnPremisesProvisioningErrors <IMicrosoftGraphOnPremisesProvisioningError[]>]: Errors when using Microsoft synchronization product during provisioning. Returned by default. Supports $filter (eq, not).
        [Category <String>]: Category of the provisioning error. Note: Currently, there is only one possible value. Possible value: PropertyConflict - indicates a property value is not unique. Other objects contain the same value for the property.
        [OccurredDateTime <DateTime?>]: The date and time at which the error occurred.
        [PropertyCausingError <String>]: Name of the directory property causing the error. Current possible values: UserPrincipalName or ProxyAddress
        [Value <String>]: Value of the property causing the error.
      [OnPremisesSamAccountName <String>]: Contains the on-premises SAM account name synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect.Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith). Read-only.
      [OnPremisesSecurityIdentifier <String>]: Contains the on-premises security identifier (SID) for the group that was synchronized from on-premises to the cloud. Returned by default. Supports $filter (eq including on null values). Read-only.
      [OnPremisesSyncEnabled <Boolean?>]: true if this group is synced from an on-premises directory; false if this group was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Returned by default. Read-only. Supports $filter (eq, ne, not, in, and eq on null values).
      [Onenote <IMicrosoftGraphOnenote>]: onenote
      [Owners <IMicrosoftGraphDirectoryObject[]>]: The owners of the group. Limited to 100 owners. Nullable. If this property is not specified when creating a Microsoft 365 group, the calling user is automatically assigned as the group owner.  Supports $filter (/$count eq 0, /$count ne 0, /$count eq 1, /$count ne 1). Supports $expand including nested $select. For example, /groups?$filter=startsWith(displayName,'Role')&$select=id,displayName&$expand=owners($select=id,userPrincipalName,displayName).
      [PermissionGrants <IMicrosoftGraphResourceSpecificPermissionGrant[]>]: The permission that has been granted for a group to a specific application. Supports $expand.
      [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
      [Photos <IMicrosoftGraphProfilePhoto[]>]: The profile photos owned by the group. Read-only. Nullable.
      [Planner <IMicrosoftGraphPlannerGroup>]: plannerGroup
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Plans <IMicrosoftGraphPlannerPlan[]>]: Read-only. Nullable. Returns the plannerPlans owned by the group.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Buckets <IMicrosoftGraphPlannerBucket[]>]: Read-only. Nullable. Collection of buckets in the plan.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Name <String>]: Name of the bucket.
            [OrderHint <String>]: Hint used to order items of this type in a list view. For details about the supported format, see Using order hints in Planner.
            [PlanId <String>]: Plan ID to which the bucket belongs.
            [Tasks <IMicrosoftGraphPlannerTask[]>]: Read-only. Nullable. The collection of tasks in the bucket.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [ActiveChecklistItemCount <Int32?>]: Number of checklist items with value set to false, representing incomplete items.
              [AppliedCategories <IMicrosoftGraphPlannerAppliedCategories>]: plannerAppliedCategories
                [(Any) <Object>]: This indicates any property can be added to this object.
              [AssignedToTaskBoardFormat <IMicrosoftGraphPlannerAssignedToTaskBoardTaskFormat>]: plannerAssignedToTaskBoardTaskFormat
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [OrderHintsByAssignee <IMicrosoftGraphPlannerOrderHintsByAssignee>]: plannerOrderHintsByAssignee
                  [(Any) <Object>]: This indicates any property can be added to this object.
                [UnassignedOrderHint <String>]: Hint value used to order the task on the AssignedTo view of the Task Board when the task is not assigned to anyone, or if the orderHintsByAssignee dictionary does not provide an order hint for the user the task is assigned to. The format is defined as outlined here.
              [AssigneePriority <String>]: Hint used to order items of this type in a list view. The format is defined as outlined here.
              [Assignments <IMicrosoftGraphPlannerAssignments>]: plannerAssignments
                [(Any) <Object>]: This indicates any property can be added to this object.
              [BucketId <String>]: Bucket ID to which the task belongs. The bucket needs to be in the plan that the task is in. It is 28 characters long and case-sensitive. Format validation is done on the service.
              [BucketTaskBoardFormat <IMicrosoftGraphPlannerBucketTaskBoardTaskFormat>]: plannerBucketTaskBoardTaskFormat
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [OrderHint <String>]: Hint used to order tasks in the bucket view of the task board. For details about the supported format, see Using order hints in Planner.
              [ChecklistItemCount <Int32?>]: Number of checklist items that are present on the task.
              [CompletedBy <IMicrosoftGraphIdentitySet>]: identitySet
              [CompletedDateTime <DateTime?>]: Read-only. Date and time at which the 'percentComplete' of the task is set to '100'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
              [ConversationThreadId <String>]: Thread ID of the conversation on the task. This is the ID of the conversation thread object created in the group.
              [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
              [CreatedDateTime <DateTime?>]: Read-only. Date and time at which the task is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
              [Details <IMicrosoftGraphPlannerTaskDetails>]: plannerTaskDetails
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Checklist <IMicrosoftGraphPlannerChecklistItems>]: plannerChecklistItems
                  [(Any) <Object>]: This indicates any property can be added to this object.
                [Description <String>]: Description of the task.
                [PreviewType <String>]: plannerPreviewType
                [References <IMicrosoftGraphPlannerExternalReferences>]: plannerExternalReferences
                  [(Any) <Object>]: This indicates any property can be added to this object.
              [DueDateTime <DateTime?>]: Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
              [HasDescription <Boolean?>]: Read-only. Value is true if the details object of the task has a non-empty description and false otherwise.
              [OrderHint <String>]: Hint used to order items of this type in a list view. The format is defined as outlined here.
              [PercentComplete <Int32?>]: Percentage of task completion. When set to 100, the task is considered completed.
              [PlanId <String>]: Plan ID to which the task belongs.
              [PreviewType <String>]: plannerPreviewType
              [Priority <Int32?>]: Priority of the task. The valid range of values is between 0 and 10, with the increasing value being lower priority (0 has the highest priority and 10 has the lowest priority).  Currently, Planner interprets values 0 and 1 as 'urgent', 2, 3 and 4 as 'important', 5, 6, and 7 as 'medium', and 8, 9, and 10 as 'low'.  Additionally, Planner sets the value 1 for 'urgent', 3 for 'important', 5 for 'medium', and 9 for 'low'.
              [ProgressTaskBoardFormat <IMicrosoftGraphPlannerProgressTaskBoardTaskFormat>]: plannerProgressTaskBoardTaskFormat
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [OrderHint <String>]: Hint value used to order the task on the progress view of the task board. For details about the supported format, see Using order hints in Planner.
              [ReferenceCount <Int32?>]: Number of external references that exist on the task.
              [StartDateTime <DateTime?>]: Date and time at which the task starts. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
              [Title <String>]: Title of the task.
          [Container <IMicrosoftGraphPlannerPlanContainer>]: plannerPlanContainer
            [(Any) <Object>]: This indicates any property can be added to this object.
            [ContainerId <String>]: The identifier of the resource that contains the plan. Optional.
            [Type <String>]: plannerContainerType
            [Url <String>]: The full canonical URL of the container. Optional.
          [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [CreatedDateTime <DateTime?>]: Read-only. Date and time at which the plan is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
          [Details <IMicrosoftGraphPlannerPlanDetails>]: plannerPlanDetails
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [CategoryDescriptions <IMicrosoftGraphPlannerCategoryDescriptions>]: plannerCategoryDescriptions
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Category1 <String>]: The label associated with Category 1
              [Category10 <String>]: The label associated with Category 10
              [Category11 <String>]: The label associated with Category 11
              [Category12 <String>]: The label associated with Category 12
              [Category13 <String>]: The label associated with Category 13
              [Category14 <String>]: The label associated with Category 14
              [Category15 <String>]: The label associated with Category 15
              [Category16 <String>]: The label associated with Category 16
              [Category17 <String>]: The label associated with Category 17
              [Category18 <String>]: The label associated with Category 18
              [Category19 <String>]: The label associated with Category 19
              [Category2 <String>]: The label associated with Category 2
              [Category20 <String>]: The label associated with Category 20
              [Category21 <String>]: The label associated with Category 21
              [Category22 <String>]: The label associated with Category 22
              [Category23 <String>]: The label associated with Category 23
              [Category24 <String>]: The label associated with Category 24
              [Category25 <String>]: The label associated with Category 25
              [Category3 <String>]: The label associated with Category 3
              [Category4 <String>]: The label associated with Category 4
              [Category5 <String>]: The label associated with Category 5
              [Category6 <String>]: The label associated with Category 6
              [Category7 <String>]: The label associated with Category 7
              [Category8 <String>]: The label associated with Category 8
              [Category9 <String>]: The label associated with Category 9
            [SharedWith <IMicrosoftGraphPlannerUserIds>]: plannerUserIds
              [(Any) <Object>]: This indicates any property can be added to this object.
          [Owner <String>]: 
          [Tasks <IMicrosoftGraphPlannerTask[]>]: Read-only. Nullable. Collection of tasks in the plan.
          [Title <String>]: Required. Title of the plan.
      [PreferredDataLocation <String>]: The preferred data location for the Microsoft 365 group. By default, the group inherits the group creator's preferred data location. To set this property, the calling user must be assigned one of the following Azure AD roles:  Global Administrator  User Account Administrator Directory Writer  Exchange Administrator  SharePoint Administrator  For more information about this property, see OneDrive Online Multi-Geo. Nullable. Returned by default.
      [PreferredLanguage <String>]: The preferred language for a Microsoft 365 group. Should follow ISO 639-1 Code; for example en-US. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
      [ProxyAddresses <String[]>]: Email addresses for the group that direct to the same group mailbox. For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. The any operator is required to filter expressions on multi-valued properties. Returned by default. Read-only. Not nullable. Supports $filter (eq, not, ge, le, startsWith, endsWith, /$count eq 0, /$count ne 0).
      [RejectedSenders <IMicrosoftGraphDirectoryObject[]>]: The list of users or groups that are not allowed to create posts or calendar events in this group. Nullable
      [RenewedDateTime <DateTime?>]: Timestamp of when the group was last renewed. This cannot be modified directly and is only updated via the renew service action. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.
      [SecurityEnabled <Boolean?>]: Specifies whether the group is a security group. Required. Returned by default. Supports $filter (eq, ne, not, in).
      [SecurityIdentifier <String>]: Security identifier of the group, used in Windows scenarios. Returned by default.
      [Settings <IMicrosoftGraphGroupSetting[]>]: Settings that can govern this group's behavior, like whether members can invite guest users to the group. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DisplayName <String>]: Display name of this group of settings, which comes from the associated template.
        [TemplateId <String>]: Unique identifier for the tenant-level groupSettingTemplates object that's been customized for this group-level settings object. Read-only.
        [Values <IMicrosoftGraphSettingValue[]>]: Collection of name-value pairs corresponding to the name and defaultValue properties in the referenced groupSettingTemplates object.
          [Name <String>]: Name of the setting (as defined by the groupSettingTemplate).
          [Value <String>]: Value of the setting.
      [Sites <IMicrosoftGraphSite[]>]: The list of SharePoint sites in this group. Access the default site with /sites/root.
      [Team <IMicrosoftGraphTeam>]: team
      [Theme <String>]: Specifies a Microsoft 365 group's color theme. Possible values are Teal, Purple, Green, Blue, Pink, Orange or Red. Returned by default.
      [Threads <IMicrosoftGraphConversationThread[]>]: The group's conversation threads. Nullable.
      [TransitiveMemberOf <IMicrosoftGraphDirectoryObject[]>]: The groups that a group is a member of, either directly and through nested membership. Nullable.
      [TransitiveMembers <IMicrosoftGraphDirectoryObject[]>]: The direct and transitive members of a group. Nullable.
      [UnseenCount <Int32?>]: Count of conversations that have received new posts since the signed-in user last visited the group. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
      [Visibility <String>]: Specifies the group join policy and group content visibility for groups. Possible values are: Private, Public, or HiddenMembership. HiddenMembership can be set only for Microsoft 365 groups, when the groups are created. It can't be updated later. Other values of visibility can be updated after group creation. If visibility value is not specified during group creation on Microsoft Graph, a security group is created as Private by default and Microsoft 365 group is Public. Groups assignable to roles are always Private. See group visibility options to learn more. Returned by default. Nullable.
    [GuestSettings <IMicrosoftGraphTeamGuestSettings>]: teamGuestSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [AllowCreateUpdateChannels <Boolean?>]: If set to true, guests can add and update channels.
      [AllowDeleteChannels <Boolean?>]: If set to true, guests can delete channels.
    [IncomingChannels <IMicrosoftGraphChannel[]>]: List of channels shared with the team.
    [InstalledApps <IMicrosoftGraphTeamsAppInstallation[]>]: The apps installed in this team.
    [InternalId <String>]: A unique ID for the team that has been used in a few places such as the audit log/Office 365 Management Activity API.
    [IsArchived <Boolean?>]: Whether this team is in read-only mode.
    [MemberSettings <IMicrosoftGraphTeamMemberSettings>]: teamMemberSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [AllowAddRemoveApps <Boolean?>]: If set to true, members can add and remove apps.
      [AllowCreatePrivateChannels <Boolean?>]: If set to true, members can add and update private channels.
      [AllowCreateUpdateChannels <Boolean?>]: If set to true, members can add and update channels.
      [AllowCreateUpdateRemoveConnectors <Boolean?>]: If set to true, members can add, update, and remove connectors.
      [AllowCreateUpdateRemoveTabs <Boolean?>]: If set to true, members can add, update, and remove tabs.
      [AllowDeleteChannels <Boolean?>]: If set to true, members can delete channels.
    [Members <IMicrosoftGraphConversationMember[]>]: Members and owners of the team.
    [MessagingSettings <IMicrosoftGraphTeamMessagingSettings>]: teamMessagingSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [AllowChannelMentions <Boolean?>]: If set to true, @channel mentions are allowed.
      [AllowOwnerDeleteMessages <Boolean?>]: If set to true, owners can delete any message.
      [AllowTeamMentions <Boolean?>]: If set to true, @team mentions are allowed.
      [AllowUserDeleteMessages <Boolean?>]: If set to true, users can delete their messages.
      [AllowUserEditMessages <Boolean?>]: If set to true, users can edit their messages.
    [Operations <IMicrosoftGraphTeamsAsyncOperation[]>]: The async operations that ran or are running on this team.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AttemptsCount <Int32?>]: Number of times the operation was attempted before being marked successful or failed.
      [CreatedDateTime <DateTime?>]: Time when the operation was created.
      [Error <IMicrosoftGraphOperationError>]: operationError
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Code <String>]: Operation error code.
        [Message <String>]: Operation error message.
      [LastActionDateTime <DateTime?>]: Time when the async operation was last updated.
      [OperationType <String>]: teamsAsyncOperationType
      [Status <String>]: teamsAsyncOperationStatus
      [TargetResourceId <String>]: The ID of the object that's created or modified as result of this async operation, typically a team.
      [TargetResourceLocation <String>]: The location of the object that's created or modified as result of this async operation. This URL should be treated as an opaque value and not parsed into its component paths.
    [PermissionGrants <IMicrosoftGraphResourceSpecificPermissionGrant[]>]: 
    [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
    [PrimaryChannel <IMicrosoftGraphChannel>]: channel
    [Schedule <IMicrosoftGraphSchedule>]: schedule
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Enabled <Boolean?>]: Indicates whether the schedule is enabled for the team. Required.
      [OfferShiftRequests <IMicrosoftGraphOfferShiftRequest[]>]: The offer requests for shifts in the schedule.
        [AssignedTo <String>]: scheduleChangeRequestActor
        [ManagerActionMessage <String>]: 
        [SenderMessage <String>]: 
        [State <String>]: scheduleChangeState
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [RecipientActionMessage <String>]: Custom message sent by recipient of the offer shift request.
        [RecipientUserId <String>]: User ID of the recipient of the offer shift request.
        [SenderShiftId <String>]: User ID of the sender of the offer shift request.
      [OfferShiftRequestsEnabled <Boolean?>]: Indicates whether offer shift requests are enabled for the schedule.
      [OpenShiftChangeRequests <IMicrosoftGraphOpenShiftChangeRequest[]>]: The open shift requests in the schedule.
        [AssignedTo <String>]: scheduleChangeRequestActor
        [ManagerActionMessage <String>]: 
        [SenderMessage <String>]: 
        [State <String>]: scheduleChangeState
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [OpenShiftId <String>]: ID for the open shift.
      [OpenShifts <IMicrosoftGraphOpenShift[]>]: The set of open shifts in a scheduling group in the schedule.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DraftOpenShift <IMicrosoftGraphOpenShiftItem>]: openShiftItem
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Activities <IMicrosoftGraphShiftActivity[]>]: An incremental part of a shift which can cover details of when and where an employee is during their shift. For example, an assignment or a scheduled break or lunch. Required.
            [Code <String>]: Customer defined code for the shiftActivity. Required.
            [DisplayName <String>]: The name of the shiftActivity. Required.
            [EndDateTime <DateTime?>]: The end date and time for the shiftActivity. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
            [IsPaid <Boolean?>]: Indicates whether the microsoft.graph.user should be paid for the activity during their shift. Required.
            [StartDateTime <DateTime?>]: The start date and time for the shiftActivity. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
            [Theme <String>]: scheduleEntityTheme
          [DisplayName <String>]: The shift label of the shiftItem.
          [Notes <String>]: The shift notes for the shiftItem.
          [EndDateTime <DateTime?>]: 
          [StartDateTime <DateTime?>]: 
          [Theme <String>]: scheduleEntityTheme
          [OpenSlotCount <Int32?>]: Count of the number of slots for the given open shift.
        [SchedulingGroupId <String>]: ID for the scheduling group that the open shift belongs to.
        [SharedOpenShift <IMicrosoftGraphOpenShiftItem>]: openShiftItem
      [OpenShiftsEnabled <Boolean?>]: Indicates whether open shifts are enabled for the schedule.
      [ProvisionStatus <String>]: operationStatus
      [SchedulingGroups <IMicrosoftGraphSchedulingGroup[]>]: The logical grouping of users in the schedule (usually by role).
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DisplayName <String>]: The display name for the schedulingGroup. Required.
        [UserIds <String[]>]: The list of user IDs that are a member of the schedulingGroup. Required.
      [Shifts <IMicrosoftGraphShift[]>]: The shifts in the schedule.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DraftShift <IMicrosoftGraphShiftItem>]: shiftItem
          [(Any) <Object>]: This indicates any property can be added to this object.
          [EndDateTime <DateTime?>]: 
          [StartDateTime <DateTime?>]: 
          [Theme <String>]: scheduleEntityTheme
          [Activities <IMicrosoftGraphShiftActivity[]>]: An incremental part of a shift which can cover details of when and where an employee is during their shift. For example, an assignment or a scheduled break or lunch. Required.
          [DisplayName <String>]: The shift label of the shiftItem.
          [Notes <String>]: The shift notes for the shiftItem.
        [SchedulingGroupId <String>]: ID of the scheduling group the shift is part of. Required.
        [SharedShift <IMicrosoftGraphShiftItem>]: shiftItem
        [UserId <String>]: ID of the user assigned to the shift. Required.
      [SwapShiftsChangeRequests <IMicrosoftGraphSwapShiftsChangeRequest[]>]: The swap requests for shifts in the schedule.
        [RecipientActionMessage <String>]: Custom message sent by recipient of the offer shift request.
        [RecipientUserId <String>]: User ID of the recipient of the offer shift request.
        [SenderShiftId <String>]: User ID of the sender of the offer shift request.
        [AssignedTo <String>]: scheduleChangeRequestActor
        [ManagerActionMessage <String>]: 
        [SenderMessage <String>]: 
        [State <String>]: scheduleChangeState
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [RecipientShiftId <String>]: ShiftId for the recipient user with whom the request is to swap.
      [SwapShiftsRequestsEnabled <Boolean?>]: Indicates whether swap shifts requests are enabled for the schedule.
      [TimeClockEnabled <Boolean?>]: Indicates whether time clock is enabled for the schedule.
      [TimeOffReasons <IMicrosoftGraphTimeOffReason[]>]: The set of reasons for a time off in the schedule.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DisplayName <String>]: The name of the timeOffReason. Required.
        [IconType <String>]: timeOffReasonIconType
        [IsActive <Boolean?>]: Indicates whether the timeOffReason can be used when creating new entities or updating existing ones. Required.
      [TimeOffRequests <IMicrosoftGraphTimeOffRequest[]>]: The time off requests in the schedule.
        [AssignedTo <String>]: scheduleChangeRequestActor
        [ManagerActionMessage <String>]: 
        [SenderMessage <String>]: 
        [State <String>]: scheduleChangeState
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [EndDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [StartDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [TimeOffReasonId <String>]: The reason for the time off.
      [TimeOffRequestsEnabled <Boolean?>]: Indicates whether time off requests are enabled for the schedule.
      [TimeZone <String>]: Indicates the time zone of the schedule team using tz database format. Required.
      [TimesOff <IMicrosoftGraphTimeOff[]>]: The instances of times off in the schedule.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DraftTimeOff <IMicrosoftGraphTimeOffItem>]: timeOffItem
          [(Any) <Object>]: This indicates any property can be added to this object.
          [EndDateTime <DateTime?>]: 
          [StartDateTime <DateTime?>]: 
          [Theme <String>]: scheduleEntityTheme
          [TimeOffReasonId <String>]: ID of the timeOffReason for this timeOffItem. Required.
        [SharedTimeOff <IMicrosoftGraphTimeOffItem>]: timeOffItem
        [UserId <String>]: ID of the user assigned to the timeOff. Required.
      [WorkforceIntegrationIds <String[]>]: 
    [Specialization <String>]: teamSpecialization
    [Summary <IMicrosoftGraphTeamSummary>]: teamSummary
      [(Any) <Object>]: This indicates any property can be added to this object.
      [GuestsCount <Int32?>]: Count of guests in a team.
      [MembersCount <Int32?>]: Count of members in a team.
      [OwnersCount <Int32?>]: Count of owners in a team.
    [Tags <IMicrosoftGraphTeamworkTag[]>]: The tags associated with the team.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Description <String>]: The description of the tag as it will appear to the user in Microsoft Teams. A teamworkTag can't have more than 200 teamworkTagMembers.
      [DisplayName <String>]: The name of the tag as it will appear to the user in Microsoft Teams.
      [MemberCount <Int32?>]: The number of users assigned to the tag.
      [Members <IMicrosoftGraphTeamworkTagMember[]>]: Users assigned to the tag.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DisplayName <String>]: The member's display name.
        [TenantId <String>]: The ID of the tenant that the tag member is a part of.
        [UserId <String>]: The user ID of the member.
      [TagType <String>]: teamworkTagType
      [TeamId <String>]: ID of the team in which the tag is defined.
    [Template <IMicrosoftGraphTeamsTemplate>]: teamsTemplate
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
    [TenantId <String>]: The ID of the Azure Active Directory tenant.
    [Visibility <String>]: teamVisibilityType
    [WebUrl <String>]: A hyperlink that will go to the team in the Microsoft Teams client. This is the URL that you get when you right-click a team in the Microsoft Teams client and select Get link to team. This URL should be treated as an opaque blob, and not parsed.
  [LastPasswordChangeDateTime <DateTime?>]: The time when this Azure AD user last changed their password or when their password was created, whichever date the latest action was performed. The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned only on $select.
  [LegalAgeGroupClassification <String>]: Used by enterprise applications to determine the legal age group of the user. This property is read-only and calculated based on ageGroup and consentProvidedForMinor properties. Allowed values: null, MinorWithOutParentalConsent, MinorWithParentalConsent, MinorNoParentalConsentRequired, NotAdult and Adult. Refer to the legal age group property definitions for further information. Returned only on $select.
  [LicenseAssignmentStates <IMicrosoftGraphLicenseAssignmentState[]>]: State of license assignments for this user. Also indicates licenses that are directly-assigned and those that the user has inherited through group memberships. Read-only. Returned only on $select.
    [AssignedByGroup <String>]: 
    [DisabledPlans <String[]>]: 
    [Error <String>]: 
    [LastUpdatedDateTime <DateTime?>]: 
    [SkuId <String>]: 
    [State <String>]: 
  [LicenseDetails <IMicrosoftGraphLicenseDetails[]>]: A collection of this user's license details. Read-only.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ServicePlans <IMicrosoftGraphServicePlanInfo[]>]: Information about the service plans assigned with the license. Read-only, Not nullable
      [AppliesTo <String>]: The object the service plan can be assigned to. The possible values are:User - service plan can be assigned to individual users.Company - service plan can be assigned to the entire tenant.
      [ProvisioningStatus <String>]: The provisioning status of the service plan. The possible values are:Success - Service is fully provisioned.Disabled - Service has been disabled.ErrorStatus - The service plan has not been provisioned and is in an error state.PendingInput - Service is not yet provisioned; awaiting service confirmation.PendingActivation - Service is provisioned but requires explicit activation by administrator (for example, Intune_O365 service plan)PendingProvisioning - Microsoft has added a new service to the product SKU and it has not been activated in the tenant, yet.
      [ServicePlanId <String>]: The unique identifier of the service plan.
      [ServicePlanName <String>]: The name of the service plan.
    [SkuId <String>]: Unique identifier (GUID) for the service SKU. Equal to the skuId property on the related SubscribedSku object. Read-only
    [SkuPartNumber <String>]: Unique SKU display name. Equal to the skuPartNumber on the related SubscribedSku object; for example: 'AAD_Premium'. Read-only
  [Mail <String>]: The SMTP address for the user, for example, jeff@contoso.onmicrosoft.com. Changes to this property will also update the user's proxyAddresses collection to include the value as an SMTP address. This property cannot contain accent characters.  NOTE: We do not recommend updating this property for Azure AD B2C user profiles. Use the otherMails property instead. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, endsWith, and eq on null values).
  [MailFolders <IMicrosoftGraphMailFolder[]>]: The user's mail folders. Read-only. Nullable.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ChildFolderCount <Int32?>]: The number of immediate child mailFolders in the current mailFolder.
    [ChildFolders <IMicrosoftGraphMailFolder[]>]: The collection of child folders in the mailFolder.
    [DisplayName <String>]: The mailFolder's display name.
    [IsHidden <Boolean?>]: Indicates whether the mailFolder is hidden. This property can be set only when creating the folder. Find more information in Hidden mail folders.
    [MessageRules <IMicrosoftGraphMessageRule[]>]: The collection of rules that apply to the user's Inbox folder.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Actions <IMicrosoftGraphMessageRuleActions>]: messageRuleActions
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AssignCategories <String[]>]: A list of categories to be assigned to a message.
        [CopyToFolder <String>]: The ID of a folder that a message is to be copied to.
        [Delete <Boolean?>]: Indicates whether a message should be moved to the Deleted Items folder.
        [ForwardAsAttachmentTo <IMicrosoftGraphRecipient[]>]: The email addresses of the recipients to which a message should be forwarded as an attachment.
        [ForwardTo <IMicrosoftGraphRecipient[]>]: The email addresses of the recipients to which a message should be forwarded.
        [MarkAsRead <Boolean?>]: Indicates whether a message should be marked as read.
        [MarkImportance <String>]: importance
        [MoveToFolder <String>]: The ID of the folder that a message will be moved to.
        [PermanentDelete <Boolean?>]: Indicates whether a message should be permanently deleted and not saved to the Deleted Items folder.
        [RedirectTo <IMicrosoftGraphRecipient[]>]: The email addresses to which a message should be redirected.
        [StopProcessingRules <Boolean?>]: Indicates whether subsequent rules should be evaluated.
      [Conditions <IMicrosoftGraphMessageRulePredicates>]: messageRulePredicates
        [(Any) <Object>]: This indicates any property can be added to this object.
        [BodyContains <String[]>]: Represents the strings that should appear in the body of an incoming message in order for the condition or exception to apply.
        [BodyOrSubjectContains <String[]>]: Represents the strings that should appear in the body or subject of an incoming message in order for the condition or exception to apply.
        [Categories <String[]>]: Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply.
        [FromAddresses <IMicrosoftGraphRecipient[]>]: Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply.
        [HasAttachments <Boolean?>]: Indicates whether an incoming message must have attachments in order for the condition or exception to apply.
        [HeaderContains <String[]>]: Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply.
        [Importance <String>]: importance
        [IsApprovalRequest <Boolean?>]: Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.
        [IsAutomaticForward <Boolean?>]: Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.
        [IsAutomaticReply <Boolean?>]: Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.
        [IsEncrypted <Boolean?>]: Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.
        [IsMeetingRequest <Boolean?>]: Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.
        [IsMeetingResponse <Boolean?>]: Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.
        [IsNonDeliveryReport <Boolean?>]: Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.
        [IsPermissionControlled <Boolean?>]: Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception to apply.
        [IsReadReceipt <Boolean?>]: Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.
        [IsSigned <Boolean?>]: Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.
        [IsVoicemail <Boolean?>]: Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.
        [MessageActionFlag <String>]: messageActionFlag
        [NotSentToMe <Boolean?>]: Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or exception to apply.
        [RecipientContains <String[]>]: Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order for the condition or exception to apply.
        [SenderContains <String[]>]: Represents the strings that appear in the from property of an incoming message in order for the condition or exception to apply.
        [Sensitivity <String>]: sensitivity
        [SentCcMe <Boolean?>]: Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the condition or exception to apply.
        [SentOnlyToMe <Boolean?>]: Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition or exception to apply.
        [SentToAddresses <IMicrosoftGraphRecipient[]>]: Represents the email addresses that an incoming message must have been sent to in order for the condition or exception to apply.
        [SentToMe <Boolean?>]: Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the condition or exception to apply.
        [SentToOrCcMe <Boolean?>]: Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message in order for the condition or exception to apply.
        [SubjectContains <String[]>]: Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply.
        [WithinSizeRange <IMicrosoftGraphSizeRange>]: sizeRange
          [(Any) <Object>]: This indicates any property can be added to this object.
          [MaximumSize <Int32?>]: The maximum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.
          [MinimumSize <Int32?>]: The minimum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.
      [DisplayName <String>]: The display name of the rule.
      [Exceptions <IMicrosoftGraphMessageRulePredicates>]: messageRulePredicates
      [HasError <Boolean?>]: Indicates whether the rule is in an error condition. Read-only.
      [IsEnabled <Boolean?>]: Indicates whether the rule is enabled to be applied to messages.
      [IsReadOnly <Boolean?>]: Indicates if the rule is read-only and cannot be modified or deleted by the rules REST API.
      [Sequence <Int32?>]: Indicates the order in which the rule is executed, among other rules.
    [Messages <IMicrosoftGraphMessage[]>]: The collection of messages in the mailFolder.
      [Categories <String[]>]: The categories associated with the item
      [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
      [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Attachments <IMicrosoftGraphAttachment[]>]: The fileAttachment and itemAttachment attachments for the message.
      [BccRecipients <IMicrosoftGraphRecipient[]>]: The Bcc: recipients for the message.
      [Body <IMicrosoftGraphItemBody>]: itemBody
      [BodyPreview <String>]: The first 255 characters of the message body. It is in text format.
      [CcRecipients <IMicrosoftGraphRecipient[]>]: The Cc: recipients for the message.
      [ConversationId <String>]: The ID of the conversation the email belongs to.
      [ConversationIndex <Byte[]>]: Indicates the position of the message within the conversation.
      [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the message. Nullable.
      [Flag <IMicrosoftGraphFollowupFlag>]: followupFlag
        [(Any) <Object>]: This indicates any property can be added to this object.
        [CompletedDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [DueDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [FlagStatus <String>]: followupFlagStatus
        [StartDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
      [From <IMicrosoftGraphRecipient>]: recipient
      [HasAttachments <Boolean?>]: Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>.
      [Importance <String>]: importance
      [InferenceClassification <String>]: inferenceClassificationType
      [InternetMessageHeaders <IMicrosoftGraphInternetMessageHeader[]>]: 
        [Name <String>]: Represents the key in a key-value pair.
        [Value <String>]: The value in a key-value pair.
      [InternetMessageId <String>]: 
      [IsDeliveryReceiptRequested <Boolean?>]: 
      [IsDraft <Boolean?>]: 
      [IsRead <Boolean?>]: 
      [IsReadReceiptRequested <Boolean?>]: 
      [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the message. Nullable.
      [ParentFolderId <String>]: 
      [ReceivedDateTime <DateTime?>]: 
      [ReplyTo <IMicrosoftGraphRecipient[]>]: 
      [Sender <IMicrosoftGraphRecipient>]: recipient
      [SentDateTime <DateTime?>]: 
      [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the message. Nullable.
      [Subject <String>]: 
      [ToRecipients <IMicrosoftGraphRecipient[]>]: 
      [UniqueBody <IMicrosoftGraphItemBody>]: itemBody
      [WebLink <String>]: 
    [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the mailFolder. Read-only. Nullable.
    [ParentFolderId <String>]: The unique identifier for the mailFolder's parent mailFolder.
    [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the mailFolder. Read-only. Nullable.
    [TotalItemCount <Int32?>]: The number of items in the mailFolder.
    [UnreadItemCount <Int32?>]: The number of items in the mailFolder marked as unread.
  [MailNickname <String>]: The mail alias for the user. This property must be specified when a user is created. Maximum length is 64 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [MailboxSettings <IMicrosoftGraphMailboxSettings>]: mailboxSettings
    [(Any) <Object>]: This indicates any property can be added to this object.
    [ArchiveFolder <String>]: Folder ID of an archive folder for the user.
    [AutomaticRepliesSetting <IMicrosoftGraphAutomaticRepliesSetting>]: automaticRepliesSetting
      [(Any) <Object>]: This indicates any property can be added to this object.
      [ExternalAudience <String>]: externalAudienceScope
      [ExternalReplyMessage <String>]: The automatic reply to send to the specified external audience, if Status is AlwaysEnabled or Scheduled.
      [InternalReplyMessage <String>]: The automatic reply to send to the audience internal to the signed-in user's organization, if Status is AlwaysEnabled or Scheduled.
      [ScheduledEndDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
      [ScheduledStartDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
      [Status <String>]: automaticRepliesStatus
    [DateFormat <String>]: The date format for the user's mailbox.
    [DelegateMeetingMessageDeliveryOptions <String>]: delegateMeetingMessageDeliveryOptions
    [Language <IMicrosoftGraphLocaleInfo>]: localeInfo
      [(Any) <Object>]: This indicates any property can be added to this object.
      [DisplayName <String>]: A name representing the user's locale in natural language, for example, 'English (United States)'.
      [Locale <String>]: A locale representation for the user, which includes the user's preferred language and country/region. For example, 'en-us'. The language component follows 2-letter codes as defined in ISO 639-1, and the country component follows 2-letter codes as defined in ISO 3166-1 alpha-2.
    [TimeFormat <String>]: The time format for the user's mailbox.
    [TimeZone <String>]: The default time zone for the user's mailbox.
    [UserPurpose <String>]: userPurpose
    [WorkingHours <IMicrosoftGraphWorkingHours>]: workingHours
      [(Any) <Object>]: This indicates any property can be added to this object.
      [DaysOfWeek <String[]>]: The days of the week on which the user works.
      [EndTime <String>]: The time of the day that the user stops working.
      [StartTime <String>]: The time of the day that the user starts working.
      [TimeZone <IMicrosoftGraphTimeZoneBase>]: timeZoneBase
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Name <String>]: The name of a time zone. It can be a standard time zone name such as 'Hawaii-Aleutian Standard Time', or 'Customized Time Zone' for a custom time zone.
  [ManagedAppRegistrations <IMicrosoftGraphManagedAppRegistration[]>]: Zero or more managed app registrations that belong to the user.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [ApplicationVersion <String>]: App version
    [AppliedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policys already applied on the registered app when it last synchronized with managment service.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedDateTime <DateTime?>]: The date and time the policy was created.
      [Description <String>]: The policy's description.
      [DisplayName <String>]: Policy display name.
      [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
      [Version <String>]: Version of the entity.
    [CreatedDateTime <DateTime?>]: Date and time of creation
    [DeviceName <String>]: Host device name
    [DeviceTag <String>]: App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.
    [DeviceType <String>]: Host device type
    [FlaggedReasons <ManagedAppFlaggedReason[]>]: Zero or more reasons an app registration is flagged. E.g. app running on rooted device
    [IntendedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policies admin intended for the app as of now.
    [LastSyncDateTime <DateTime?>]: Date and time of last the app synced with management service.
    [ManagementSdkVersion <String>]: App management SDK version
    [Operations <IMicrosoftGraphManagedAppOperation[]>]: Zero or more long running operations triggered on the app registration.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DisplayName <String>]: The operation name.
      [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
      [State <String>]: The current state of the operation
      [Version <String>]: Version of the entity.
    [PlatformVersion <String>]: Operating System version
    [UserId <String>]: The user Id to who this app registration belongs.
    [Version <String>]: Version of the entity.
  [ManagedDevices <IMicrosoftGraphManagedDevice[]>]: The managed devices associated with the user.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ComplianceState <ComplianceState?>]: Compliance state.
    [ConfigurationManagerClientEnabledFeatures <IMicrosoftGraphConfigurationManagerClientEnabledFeatures>]: configuration Manager client enabled features
      [(Any) <Object>]: This indicates any property can be added to this object.
      [CompliancePolicy <Boolean?>]: Whether compliance policy is managed by Intune
      [DeviceConfiguration <Boolean?>]: Whether device configuration is managed by Intune
      [Inventory <Boolean?>]: Whether inventory is managed by Intune
      [ModernApps <Boolean?>]: Whether modern application is managed by Intune
      [ResourceAccess <Boolean?>]: Whether resource access is managed by Intune
      [WindowsUpdateForBusiness <Boolean?>]: Whether Windows Update for Business is managed by Intune
    [DeviceCategory <IMicrosoftGraphDeviceCategory>]: Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Description <String>]: Optional description for the device category.
      [DisplayName <String>]: Display name for the device category.
    [DeviceCompliancePolicyStates <IMicrosoftGraphDeviceCompliancePolicyState[]>]: Device compliance policy states for this device.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DisplayName <String>]: The name of the policy for this policyBase
      [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
      [SettingCount <Int32?>]: Count of how many setting a policy holds
      [SettingStates <IMicrosoftGraphDeviceCompliancePolicySettingState[]>]: 
        [CurrentValue <String>]: Current value of setting on device
        [ErrorCode <Int64?>]: Error code for the setting
        [ErrorDescription <String>]: Error description
        [InstanceDisplayName <String>]: Name of setting instance that is being reported.
        [Setting <String>]: The setting that is being reported
        [SettingName <String>]: Localized/user friendly setting name that is being reported
        [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
          [DisplayName <String>]: Not yet documented
          [Id <String>]: Not yet documented
          [SourceType <String>]: settingSourceType
        [State <String>]: complianceStatus
        [UserEmail <String>]: UserEmail
        [UserId <String>]: UserId
        [UserName <String>]: UserName
        [UserPrincipalName <String>]: UserPrincipalName.
      [State <String>]: complianceStatus
      [Version <Int32?>]: The version of the policy
    [DeviceConfigurationStates <IMicrosoftGraphDeviceConfigurationState[]>]: Device configuration states for this device.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DisplayName <String>]: The name of the policy for this policyBase
      [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
      [SettingCount <Int32?>]: Count of how many setting a policy holds
      [SettingStates <IMicrosoftGraphDeviceConfigurationSettingState[]>]: 
        [CurrentValue <String>]: Current value of setting on device
        [ErrorCode <Int64?>]: Error code for the setting
        [ErrorDescription <String>]: Error description
        [InstanceDisplayName <String>]: Name of setting instance that is being reported.
        [Setting <String>]: The setting that is being reported
        [SettingName <String>]: Localized/user friendly setting name that is being reported
        [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
        [State <String>]: complianceStatus
        [UserEmail <String>]: UserEmail
        [UserId <String>]: UserId
        [UserName <String>]: UserName
        [UserPrincipalName <String>]: UserPrincipalName.
      [State <String>]: complianceStatus
      [Version <Int32?>]: The version of the policy
    [DeviceEnrollmentType <DeviceEnrollmentType?>]: Possible ways of adding a mobile device to management.
    [DeviceHealthAttestationState <IMicrosoftGraphDeviceHealthAttestationState>]: deviceHealthAttestationState
      [(Any) <Object>]: This indicates any property can be added to this object.
      [AttestationIdentityKey <String>]: TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.
      [BitLockerStatus <String>]: On or Off of BitLocker Drive Encryption
      [BootAppSecurityVersion <String>]: The security version number of the Boot Application
      [BootDebugging <String>]: When bootDebugging is enabled, the device is used in development and testing
      [BootManagerSecurityVersion <String>]: The security version number of the Boot Application
      [BootManagerVersion <String>]: The version of the Boot Manager
      [BootRevisionListInfo <String>]: The Boot Revision List that was loaded during initial boot on the attested device
      [CodeIntegrity <String>]: When code integrity is enabled, code execution is restricted to integrity verified code
      [CodeIntegrityCheckVersion <String>]: The version of the Boot Manager
      [CodeIntegrityPolicy <String>]: The Code Integrity policy that is controlling the security of the boot environment
      [ContentNamespaceUrl <String>]: The DHA report version. (Namespace version)
      [ContentVersion <String>]: The HealthAttestation state schema version
      [DataExcutionPolicy <String>]: DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
      [DeviceHealthAttestationStatus <String>]: The DHA report version. (Namespace version)
      [EarlyLaunchAntiMalwareDriverProtection <String>]: ELAM provides protection for the computers in your network when they start up
      [HealthAttestationSupportedStatus <String>]: This attribute indicates if DHA is supported for the device
      [HealthStatusMismatchInfo <String>]: This attribute appears if DHA-Service detects an integrity issue
      [IssuedDateTime <DateTime?>]: The DateTime when device was evaluated or issued to MDM
      [LastUpdateDateTime <String>]: The Timestamp of the last update.
      [OperatingSystemKernelDebugging <String>]: When operatingSystemKernelDebugging is enabled, the device is used in development and testing
      [OperatingSystemRevListInfo <String>]: The Operating System Revision List that was loaded during initial boot on the attested device
      [Pcr0 <String>]: The measurement that is captured in PCR[0]
      [PcrHashAlgorithm <String>]: Informational attribute that identifies the HASH algorithm that was used by TPM
      [ResetCount <Int64?>]: The number of times a PC device has hibernated or resumed
      [RestartCount <Int64?>]: The number of times a PC device has rebooted
      [SafeMode <String>]: Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
      [SecureBoot <String>]: When Secure Boot is enabled, the core components must have the correct cryptographic signatures
      [SecureBootConfigurationPolicyFingerPrint <String>]: Fingerprint of the Custom Secure Boot Configuration Policy
      [TestSigning <String>]: When test signing is allowed, the device does not enforce signature validation during boot
      [TpmVersion <String>]: The security version number of the Boot Application
      [VirtualSecureMode <String>]: VSM is a container that protects high value assets from a compromised kernel
      [WindowsPe <String>]: Operating system running with limited services that is used to prepare a computer for Windows
    [DeviceRegistrationState <DeviceRegistrationState?>]: Device registration status.
    [ExchangeAccessState <DeviceManagementExchangeAccessState?>]: Device Exchange Access State.
    [ExchangeAccessStateReason <DeviceManagementExchangeAccessStateReason?>]: Device Exchange Access State Reason.
    [LogCollectionRequests <IMicrosoftGraphDeviceLogCollectionResponse[]>]: List of log collection requests
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [EnrolledByUser <String>]: The User Principal Name (UPN) of the user that enrolled the device.
      [ExpirationDateTimeUtc <DateTime?>]: The DateTime of the expiration of the logs.
      [InitiatedByUserPrincipalName <String>]: The UPN for who initiated the request.
      [ManagedDeviceId <String>]: Indicates Intune device unique identifier.
      [ReceivedDateTimeUtc <DateTime?>]: The DateTime the request was received.
      [RequestedDateTimeUtc <DateTime?>]: The DateTime of the request.
      [SizeInKb <Double?>]: The size of the logs in KB. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
      [Status <AppLogUploadState?>]: AppLogUploadStatus
    [ManagedDeviceName <String>]: Automatically generated name to identify a device. Can be overwritten to a user friendly name.
    [ManagedDeviceOwnerType <ManagedDeviceOwnerType?>]: Owner type of device.
    [ManagementAgent <ManagementAgentType?>]: managementAgentType
    [Notes <String>]: Notes on the device created by IT Admin. Default is null. To retrieve actual values GET call needs to be made, with device id and included in select parameter. Supports: $select. $Search is not supported.
    [PartnerReportedThreatState <ManagedDevicePartnerReportedHealthState?>]: Available health states for the Device Health API
    [Users <IMicrosoftGraphUser[]>]: The primary users associated with the managed device.
    [WindowsProtectionState <IMicrosoftGraphWindowsProtectionState>]: Device protection status entity.
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AntiMalwareVersion <String>]: Current anti malware version
      [DetectedMalwareState <IMicrosoftGraphWindowsDeviceMalwareState[]>]: Device malware list
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AdditionalInformationUrl <String>]: Information URL to learn more about the malware
        [Category <WindowsMalwareCategory?>]: Malware category id
        [DetectionCount <Int32?>]: Number of times the malware is detected
        [DisplayName <String>]: Malware name
        [ExecutionState <WindowsMalwareExecutionState?>]: Malware execution status
        [InitialDetectionDateTime <DateTime?>]: Initial detection datetime of the malware
        [LastStateChangeDateTime <DateTime?>]: The last time this particular threat was changed
        [Severity <WindowsMalwareSeverity?>]: Malware severity
        [State <WindowsMalwareState?>]: Malware current status
        [ThreatState <WindowsMalwareThreatState?>]: Malware threat status
      [DeviceState <WindowsDeviceHealthState?>]: Computer endpoint protection state
      [EngineVersion <String>]: Current endpoint protection engine's version
      [FullScanOverdue <Boolean?>]: When TRUE indicates full scan is overdue, when FALSE indicates full scan is not overdue. Defaults to setting on client device.
      [FullScanRequired <Boolean?>]: When TRUE indicates full scan is required, when FALSE indicates full scan is not required. Defaults to setting on client device.
      [IsVirtualMachine <Boolean?>]: When TRUE indicates the device is a virtual machine, when FALSE indicates the device is not a virtual machine. Defaults to setting on client device.
      [LastFullScanDateTime <DateTime?>]: Last quick scan datetime
      [LastFullScanSignatureVersion <String>]: Last full scan signature version
      [LastQuickScanDateTime <DateTime?>]: Last quick scan datetime
      [LastQuickScanSignatureVersion <String>]: Last quick scan signature version
      [LastReportedDateTime <DateTime?>]: Last device health status reported time
      [MalwareProtectionEnabled <Boolean?>]: When TRUE indicates anti malware is enabled when FALSE indicates anti malware is not enabled.
      [NetworkInspectionSystemEnabled <Boolean?>]: When TRUE indicates network inspection system enabled, when FALSE indicates network inspection system is not enabled. Defaults to setting on client device.
      [ProductStatus <WindowsDefenderProductStatus?>]: Product Status of Windows Defender
      [QuickScanOverdue <Boolean?>]: When TRUE indicates quick scan is overdue, when FALSE indicates quick scan is not overdue. Defaults to setting on client device.
      [RealTimeProtectionEnabled <Boolean?>]: When TRUE indicates real time protection is enabled, when FALSE indicates real time protection is not enabled. Defaults to setting on client device.
      [RebootRequired <Boolean?>]: When TRUE indicates reboot is required, when FALSE indicates when TRUE indicates reboot is not required. Defaults to setting on client device.
      [SignatureUpdateOverdue <Boolean?>]: When TRUE indicates signature is out of date, when FALSE indicates signature is not out of date. Defaults to setting on client device.
      [SignatureVersion <String>]: Current malware definitions version
      [TamperProtectionEnabled <Boolean?>]: When TRUE indicates the Windows Defender tamper protection feature is enabled, when FALSE indicates the Windows Defender tamper protection feature is not enabled. Defaults to setting on client device.
  [Manager <IMicrosoftGraphDirectoryObject>]: directoryObject
  [MemberOf <IMicrosoftGraphDirectoryObject[]>]: The groups and directory roles that the user is a member of. Read-only. Nullable. Supports $expand.
  [Messages <IMicrosoftGraphMessage[]>]: The messages in a mailbox or folder. Read-only. Nullable.
  [MobilePhone <String>]: The primary cellular telephone number for the user. Read-only for users synced from on-premises directory. Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values) and $search.
  [MySite <String>]: The URL for the user's personal site. Returned only on $select.
  [Oauth2PermissionGrants <IMicrosoftGraphOAuth2PermissionGrant[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ClientId <String>]: The object id (not appId) of the client service principal for the application which is authorized to act on behalf of a signed-in user when accessing an API. Required. Supports $filter (eq only).
    [ConsentType <String>]: Indicates if authorization is granted for the client application to impersonate all users or only a specific user. AllPrincipals indicates authorization to impersonate all users. Principal indicates authorization to impersonate a specific user. Consent on behalf of all users can be granted by an administrator. Non-admin users may be authorized to consent on behalf of themselves in some cases, for some delegated permissions. Required. Supports $filter (eq only).
    [PrincipalId <String>]: The id of the user on behalf of whom the client is authorized to access the resource, when consentType is Principal. If consentType is AllPrincipals this value is null. Required when consentType is Principal. Supports $filter (eq only).
    [ResourceId <String>]: The id of the resource service principal to which access is authorized. This identifies the API which the client is authorized to attempt to call on behalf of a signed-in user. Supports $filter (eq only).
    [Scope <String>]: A space-separated list of the claim values for delegated permissions which should be included in access tokens for the resource application (the API). For example, openid User.Read GroupMember.Read.All. Each claim value should match the value field of one of the delegated permissions defined by the API, listed in the oauth2PermissionScopes property of the resource service principal. Must not exceed 3850 characters in length.
  [OfficeLocation <String>]: The office location in the user's place of business. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [OnPremisesDistinguishedName <String>]: Contains the on-premises Active Directory distinguished name or DN. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select.
  [OnPremisesDomainName <String>]: Contains the on-premises domainFQDN, also called dnsDomainName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select.
  [OnPremisesExtensionAttributes <IMicrosoftGraphOnPremisesExtensionAttributes>]: onPremisesExtensionAttributes
    [(Any) <Object>]: This indicates any property can be added to this object.
    [ExtensionAttribute1 <String>]: First customizable extension attribute.
    [ExtensionAttribute10 <String>]: Tenth customizable extension attribute.
    [ExtensionAttribute11 <String>]: Eleventh customizable extension attribute.
    [ExtensionAttribute12 <String>]: Twelfth customizable extension attribute.
    [ExtensionAttribute13 <String>]: Thirteenth customizable extension attribute.
    [ExtensionAttribute14 <String>]: Fourteenth customizable extension attribute.
    [ExtensionAttribute15 <String>]: Fifteenth customizable extension attribute.
    [ExtensionAttribute2 <String>]: Second customizable extension attribute.
    [ExtensionAttribute3 <String>]: Third customizable extension attribute.
    [ExtensionAttribute4 <String>]: Fourth customizable extension attribute.
    [ExtensionAttribute5 <String>]: Fifth customizable extension attribute.
    [ExtensionAttribute6 <String>]: Sixth customizable extension attribute.
    [ExtensionAttribute7 <String>]: Seventh customizable extension attribute.
    [ExtensionAttribute8 <String>]: Eighth customizable extension attribute.
    [ExtensionAttribute9 <String>]: Ninth customizable extension attribute.
  [OnPremisesImmutableId <String>]: This property is used to associate an on-premises Active Directory user account to their Azure AD user object. This property must be specified when creating a new user account in the Graph if you are using a federated domain for the user's userPrincipalName (UPN) property. NOTE: The $ and _ characters cannot be used when specifying this property. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in)..
  [OnPremisesLastSyncDateTime <DateTime?>]: Indicates the last time at which the object was synced with the on-premises directory; for example: 2013-02-16T03:04:54Z. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in).
  [OnPremisesProvisioningErrors <IMicrosoftGraphOnPremisesProvisioningError[]>]: Errors when using Microsoft synchronization product during provisioning. Returned only on $select. Supports $filter (eq, not, ge, le).
  [OnPremisesSamAccountName <String>]: Contains the on-premises samAccountName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith).
  [OnPremisesSecurityIdentifier <String>]: Contains the on-premises security identifier (SID) for the user that was synchronized from on-premises to the cloud. Read-only. Returned only on $select.  Supports $filter (eq including on null values).
  [OnPremisesSyncEnabled <Boolean?>]: true if this user object is currently being synced from an on-premises Active Directory (AD); otherwise the user isn't being synced and can be managed in Azure Active Directory (Azure AD). Read-only. Returned only on $select. Supports $filter (eq, ne, not, in, and eq on null values).
  [OnPremisesUserPrincipalName <String>]: Contains the on-premises userPrincipalName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith).
  [Onenote <IMicrosoftGraphOnenote>]: onenote
  [OnlineMeetings <IMicrosoftGraphOnlineMeeting[]>]: Information about a meeting, including the URL used to join a meeting, the attendees' list, and the description.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AllowAttendeeToEnableCamera <Boolean?>]: Indicates whether attendees can turn on their camera.
    [AllowAttendeeToEnableMic <Boolean?>]: Indicates whether attendees can turn on their microphone.
    [AllowMeetingChat <String>]: meetingChatMode
    [AllowParticipantsToChangeName <Boolean?>]: 
    [AllowTeamworkReactions <Boolean?>]: Indicates whether Teams reactions are enabled for the meeting.
    [AllowedPresenters <String>]: onlineMeetingPresenters
    [AttendanceReports <IMicrosoftGraphMeetingAttendanceReport[]>]: The attendance reports of an online meeting. Read-only.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AttendanceRecords <IMicrosoftGraphAttendanceRecord[]>]: List of attendance records of an attendance report. Read-only.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AttendanceIntervals <IMicrosoftGraphAttendanceInterval[]>]: List of time periods between joining and leaving a meeting.
          [DurationInSeconds <Int32?>]: Duration of the meeting interval in seconds; that is, the difference between joinDateTime and leaveDateTime.
          [JoinDateTime <DateTime?>]: The time the attendee joined in UTC.
          [LeaveDateTime <DateTime?>]: The time the attendee left in UTC.
        [EmailAddress <String>]: Email address of the user associated with this attendance record.
        [Identity <IMicrosoftGraphIdentity>]: identity
        [Role <String>]: Role of the attendee. Possible values are: None, Attendee, Presenter, and Organizer.
        [TotalAttendanceInSeconds <Int32?>]: Total duration of the attendances in seconds.
      [MeetingEndDateTime <DateTime?>]: UTC time when the meeting ended. Read-only.
      [MeetingStartDateTime <DateTime?>]: UTC time when the meeting started. Read-only.
      [TotalParticipantCount <Int32?>]: Total number of participants. Read-only.
    [AttendeeReport <Byte[]>]: The content stream of the attendee report of a Microsoft Teams live event. Read-only.
    [AudioConferencing <IMicrosoftGraphAudioConferencing>]: audioConferencing
      [(Any) <Object>]: This indicates any property can be added to this object.
      [ConferenceId <String>]: The conference id of the online meeting.
      [DialinUrl <String>]: A URL to the externally-accessible web page that contains dial-in information.
      [TollFreeNumber <String>]: 
      [TollFreeNumbers <String[]>]: List of toll-free numbers that are displayed in the meeting invite.
      [TollNumber <String>]: 
      [TollNumbers <String[]>]: List of toll numbers that are displayed in the meeting invite.
    [BroadcastSettings <IMicrosoftGraphBroadcastMeetingSettings>]: broadcastMeetingSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [AllowedAudience <String>]: broadcastMeetingAudience
      [Captions <IMicrosoftGraphBroadcastMeetingCaptionSettings>]: broadcastMeetingCaptionSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [IsCaptionEnabled <Boolean?>]: Indicates whether captions are enabled for this Teams live event.
        [SpokenLanguage <String>]: The spoken language.
        [TranslationLanguages <String[]>]: The translation languages (choose up to 6).
      [IsAttendeeReportEnabled <Boolean?>]: Indicates whether attendee report is enabled for this Teams live event. Default value is false.
      [IsQuestionAndAnswerEnabled <Boolean?>]: Indicates whether Q&A is enabled for this Teams live event. Default value is false.
      [IsRecordingEnabled <Boolean?>]: Indicates whether recording is enabled for this Teams live event. Default value is false.
      [IsVideoOnDemandEnabled <Boolean?>]: Indicates whether video on demand is enabled for this Teams live event. Default value is false.
    [ChatInfo <IMicrosoftGraphChatInfo>]: chatInfo
      [(Any) <Object>]: This indicates any property can be added to this object.
      [MessageId <String>]: The unique identifier of a message in a Microsoft Teams channel.
      [ReplyChainMessageId <String>]: The ID of the reply message.
      [ThreadId <String>]: The unique identifier for a thread in Microsoft Teams.
    [CreationDateTime <DateTime?>]: The meeting creation time in UTC. Read-only.
    [EndDateTime <DateTime?>]: The meeting end time in UTC.
    [ExternalId <String>]: 
    [IsBroadcast <Boolean?>]: Indicates if this is a Teams live event.
    [IsEntryExitAnnounced <Boolean?>]: Indicates whether to announce when callers join or leave.
    [JoinInformation <IMicrosoftGraphItemBody>]: itemBody
    [JoinMeetingIdSettings <IMicrosoftGraphJoinMeetingIdSettings>]: joinMeetingIdSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [IsPasscodeRequired <Boolean?>]: Indicates whether a passcode is required to join a meeting when using joinMeetingId. Optional.
      [JoinMeetingId <String>]: The meeting ID to be used to join a meeting. Optional. Read-only.
      [Passcode <String>]: The passcode to join a meeting.  Optional. Read-only.
    [JoinWebUrl <String>]: The join URL of the online meeting. Read-only.
    [LobbyBypassSettings <IMicrosoftGraphLobbyBypassSettings>]: lobbyBypassSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [IsDialInBypassEnabled <Boolean?>]: Specifies whether or not to always let dial-in callers bypass the lobby. Optional.
      [Scope <String>]: lobbyBypassScope
    [Participants <IMicrosoftGraphMeetingParticipants>]: meetingParticipants
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Attendees <IMicrosoftGraphMeetingParticipantInfo[]>]: 
        [Identity <IMicrosoftGraphIdentitySet>]: identitySet
        [Role <String>]: onlineMeetingRole
        [Upn <String>]: User principal name of the participant.
      [Organizer <IMicrosoftGraphMeetingParticipantInfo>]: meetingParticipantInfo
    [RecordAutomatically <Boolean?>]: Indicates whether to record the meeting automatically.
    [StartDateTime <DateTime?>]: The meeting start time in UTC.
    [Subject <String>]: The subject of the online meeting.
    [VideoTeleconferenceId <String>]: The video teleconferencing ID. Read-only.
    [WatermarkProtection <IMicrosoftGraphWatermarkProtectionValues>]: watermarkProtectionValues
      [(Any) <Object>]: This indicates any property can be added to this object.
      [IsEnabledForContentSharing <Boolean?>]: Indicates whether to apply a watermark to any shared content.
      [IsEnabledForVideo <Boolean?>]: Indicates whether to apply a watermark to everyone's video feed.
  [OtherMails <String[]>]: A list of additional email addresses for the user; for example: ['bob@contoso.com', 'Robert@fabrikam.com']. NOTE: This property cannot contain accent characters. Returned only on $select. Supports $filter (eq, not, ge, le, in, startsWith, endsWith, /$count eq 0, /$count ne 0).
  [Outlook <IMicrosoftGraphOutlookUser>]: outlookUser
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MasterCategories <IMicrosoftGraphOutlookCategory[]>]: A list of categories defined for the user.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Color <String>]: categoryColor
      [DisplayName <String>]: A unique name that identifies a category in the user's mailbox. After a category is created, the name cannot be changed. Read-only.
  [OwnedDevices <IMicrosoftGraphDirectoryObject[]>]: Devices that are owned by the user. Read-only. Nullable. Supports $expand and $filter (/$count eq 0, /$count ne 0, /$count eq 1, /$count ne 1).
  [OwnedObjects <IMicrosoftGraphDirectoryObject[]>]: Directory objects that are owned by the user. Read-only. Nullable. Supports $expand.
  [PasswordPolicies <String>]: Specifies password policies for the user. This value is an enumeration with one possible value being DisableStrongPassword, which allows weaker passwords than the default policy to be specified. DisablePasswordExpiration can also be specified. The two may be specified together; for example: DisablePasswordExpiration, DisableStrongPassword. Returned only on $select. For more information on the default password policies, see Azure AD pasword policies. Supports $filter (ne, not, and eq on null values).
  [PasswordProfile <IMicrosoftGraphPasswordProfile>]: passwordProfile
    [(Any) <Object>]: This indicates any property can be added to this object.
    [ForceChangePasswordNextSignIn <Boolean?>]: true if the user must change her password on the next login; otherwise false.
    [ForceChangePasswordNextSignInWithMfa <Boolean?>]: If true, at next sign-in, the user must perform a multi-factor authentication (MFA) before being forced to change their password. The behavior is identical to forceChangePasswordNextSignIn except that the user is required to first perform a multi-factor authentication before password change. After a password change, this property will be automatically reset to false. If not set, default is false.
    [Password <String>]: The password for the user. This property is required when a user is created. It can be updated, but the user will be required to change the password on the next login. The password must satisfy minimum requirements as specified by the user’s passwordPolicies property. By default, a strong password is required.
  [PastProjects <String[]>]: A list for the user to enumerate their past projects. Returned only on $select.
  [People <IMicrosoftGraphPerson[]>]: People that are relevant to the user. Read-only. Nullable.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Birthday <String>]: The person's birthday.
    [CompanyName <String>]: The name of the person's company.
    [Department <String>]: The person's department.
    [DisplayName <String>]: The person's display name.
    [GivenName <String>]: The person's given name.
    [ImAddress <String>]: The instant message voice over IP (VOIP) session initiation protocol (SIP) address for the user. Read-only.
    [IsFavorite <Boolean?>]: True if the user has flagged this person as a favorite.
    [JobTitle <String>]: The person's job title.
    [OfficeLocation <String>]: The location of the person's office.
    [PersonNotes <String>]: Free-form notes that the user has taken about this person.
    [PersonType <IMicrosoftGraphPersonType>]: personType
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Class <String>]: The type of data source, such as Person.
      [Subclass <String>]: The secondary type of data source, such as OrganizationUser.
    [Phones <IMicrosoftGraphPhone[]>]: The person's phone numbers.
    [PostalAddresses <IMicrosoftGraphLocation[]>]: The person's addresses.
    [Profession <String>]: The person's profession.
    [ScoredEmailAddresses <IMicrosoftGraphScoredEmailAddress[]>]: The person's email addresses.
      [Address <String>]: The email address.
      [ItemId <String>]: 
      [RelevanceScore <Double?>]: The relevance score of the email address. A relevance score is used as a sort key, in relation to the other returned results. A higher relevance score value corresponds to a more relevant result. Relevance is determined by the user’s communication and collaboration patterns and business relationships.
      [SelectionLikelihood <String>]: selectionLikelihoodInfo
    [Surname <String>]: The person's surname.
    [UserPrincipalName <String>]: The user principal name (UPN) of the person. The UPN is an Internet-style login name for the person based on the Internet standard RFC 822. By convention, this should map to the person's email name. The general format is alias@domain.
    [Websites <IMicrosoftGraphWebsite[]>]: The person's websites.
      [Address <String>]: The URL of the website.
      [DisplayName <String>]: The display name of the web site.
      [Type <String>]: websiteType
    [YomiCompany <String>]: The phonetic Japanese name of the person's company.
  [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
  [Photos <IMicrosoftGraphProfilePhoto[]>]: 
  [Planner <IMicrosoftGraphPlannerUser>]: plannerUser
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Plans <IMicrosoftGraphPlannerPlan[]>]: Read-only. Nullable. Returns the plannerTasks assigned to the user.
    [Tasks <IMicrosoftGraphPlannerTask[]>]: Read-only. Nullable. Returns the plannerPlans shared with the user.
  [PostalCode <String>]: The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code. Maximum length is 40 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [PreferredDataLocation <String>]: The preferred data location for the user. For more information, see OneDrive Online Multi-Geo.
  [PreferredLanguage <String>]: The preferred language for the user. Should follow ISO 639-1 Code; for example en-US. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values)
  [PreferredName <String>]: The preferred name for the user. Not Supported. This attribute returns an empty string.Returned only on $select.
  [Presence <IMicrosoftGraphPresence>]: presence
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Activity <String>]: The supplemental information to a user's availability. Possible values are Available, Away, BeRightBack, Busy, DoNotDisturb, InACall, InAConferenceCall, Inactive, InAMeeting, Offline, OffWork, OutOfOffice, PresenceUnknown, Presenting, UrgentInterruptionsOnly.
    [Availability <String>]: The base presence information for a user. Possible values are Available, AvailableIdle,  Away, BeRightBack, Busy, BusyIdle, DoNotDisturb, Offline, PresenceUnknown
  [Print <IMicrosoftGraphUserPrint>]: userPrint
    [(Any) <Object>]: This indicates any property can be added to this object.
    [RecentPrinterShares <IMicrosoftGraphPrinterShare[]>]: 
      [Capabilities <IMicrosoftGraphPrinterCapabilities>]: printerCapabilities
        [(Any) <Object>]: This indicates any property can be added to this object.
        [BottomMargins <Int32[]>]: A list of supported bottom margins(in microns) for the printer.
        [Collation <Boolean?>]: True if the printer supports collating when printing muliple copies of a multi-page document; false otherwise.
        [ColorModes <String[]>]: The color modes supported by the printer. Valid values are described in the following table.
        [ContentTypes <String[]>]: A list of supported content (MIME) types that the printer supports. It is not guaranteed that the Universal Print service supports printing all of these MIME types.
        [CopiesPerJob <IMicrosoftGraphIntegerRange>]: integerRange
          [(Any) <Object>]: This indicates any property can be added to this object.
          [End <Int64?>]: The inclusive upper bound of the integer range.
          [Start <Int64?>]: The inclusive lower bound of the integer range.
        [Dpis <Int32[]>]: The list of print resolutions in DPI that are supported by the printer.
        [DuplexModes <String[]>]: The list of duplex modes that are supported by the printer. Valid values are described in the following table.
        [FeedOrientations <String[]>]: The list of feed orientations that are supported by the printer.
        [Finishings <String[]>]: Finishing processes the printer supports for a printed document.
        [InputBins <String[]>]: Supported input bins for the printer.
        [IsColorPrintingSupported <Boolean?>]: True if color printing is supported by the printer; false otherwise. Read-only.
        [IsPageRangeSupported <Boolean?>]: True if the printer supports printing by page ranges; false otherwise.
        [LeftMargins <Int32[]>]: A list of supported left margins(in microns) for the printer.
        [MediaColors <String[]>]: The media (i.e., paper) colors supported by the printer.
        [MediaSizes <String[]>]: The media sizes supported by the printer. Supports standard size names for ISO and ANSI media sizes. Valid values are in the following table.
        [MediaTypes <String[]>]: The media types supported by the printer.
        [MultipageLayouts <String[]>]: The presentation directions supported by the printer. Supported values are described in the following table.
        [Orientations <String[]>]: The print orientations supported by the printer. Valid values are described in the following table.
        [OutputBins <String[]>]: The printer's supported output bins (trays).
        [PagesPerSheet <Int32[]>]: Supported number of Input Pages to impose upon a single Impression.
        [Qualities <String[]>]: The print qualities supported by the printer.
        [RightMargins <Int32[]>]: A list of supported right margins(in microns) for the printer.
        [Scalings <String[]>]: Supported print scalings.
        [SupportsFitPdfToPage <Boolean?>]: True if the printer supports scaling PDF pages to match the print media size; false otherwise.
        [TopMargins <Int32[]>]: A list of supported top margins(in microns) for the printer.
      [Defaults <IMicrosoftGraphPrinterDefaults>]: printerDefaults
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ColorMode <String>]: printColorMode
        [ContentType <String>]: The default content (MIME) type to use when processing documents.
        [CopiesPerJob <Int32?>]: The default number of copies printed per job.
        [Dpi <Int32?>]: The default resolution in DPI to use when printing the job.
        [DuplexMode <String>]: printDuplexMode
        [Finishings <String[]>]: The default set of finishings to apply to print jobs. Valid values are described in the following table.
        [FitPdfToPage <Boolean?>]: The default fitPdfToPage setting. True to fit each page of a PDF document to a physical sheet of media; false to let the printer decide how to lay out impressions.
        [InputBin <String>]: 
        [MediaColor <String>]: The default media (such as paper) color to print the document on.
        [MediaSize <String>]: The default media size to use. Supports standard size names for ISO and ANSI media sizes. Valid values are listed in the printerCapabilities topic.
        [MediaType <String>]: The default media (such as paper) type to print the document on.
        [MultipageLayout <String>]: printMultipageLayout
        [Orientation <String>]: printOrientation
        [OutputBin <String>]: The default output bin to place completed prints into. See the printer's capabilities for a list of supported output bins.
        [PagesPerSheet <Int32?>]: The default number of document pages to print on each sheet.
        [Quality <String>]: printQuality
        [Scaling <String>]: printScaling
      [DisplayName <String>]: The name of the printer/printerShare.
      [IsAcceptingJobs <Boolean?>]: Whether the printer/printerShare is currently accepting new print jobs.
      [Jobs <IMicrosoftGraphPrintJob[]>]: The list of jobs that are queued for printing by the printer/printerShare.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Configuration <IMicrosoftGraphPrintJobConfiguration>]: printJobConfiguration
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Collate <Boolean?>]: Whether the printer should collate pages wehen printing multiple copies of a multi-page document.
          [ColorMode <String>]: printColorMode
          [Copies <Int32?>]: The number of copies that should be printed. Read-only.
          [Dpi <Int32?>]: The resolution to use when printing the job, expressed in dots per inch (DPI). Read-only.
          [DuplexMode <String>]: printDuplexMode
          [FeedOrientation <String>]: printerFeedOrientation
          [Finishings <String[]>]: Finishing processes to use when printing.
          [FitPdfToPage <Boolean?>]: 
          [InputBin <String>]: The input bin (tray) to use when printing. See the printer's capabilities for a list of supported input bins.
          [Margin <IMicrosoftGraphPrintMargin>]: printMargin
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Bottom <Int32?>]: The margin in microns from the bottom edge.
            [Left <Int32?>]: The margin in microns from the left edge.
            [Right <Int32?>]: The margin in microns from the right edge.
            [Top <Int32?>]: The margin in microns from the top edge.
          [MediaSize <String>]: The media size to use when printing. Supports standard size names for ISO and ANSI media sizes.
          [MediaType <String>]: 
          [MultipageLayout <String>]: printMultipageLayout
          [Orientation <String>]: printOrientation
          [OutputBin <String>]: 
          [PageRanges <IMicrosoftGraphIntegerRange[]>]: 
          [PagesPerSheet <Int32?>]: 
          [Quality <String>]: printQuality
          [Scaling <String>]: printScaling
        [CreatedBy <IMicrosoftGraphUserIdentity>]: userIdentity
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
          [Id <String>]: Unique identifier for the identity.
          [IPAddress <String>]: Indicates the client IP address used by user performing the activity (audit log only).
          [UserPrincipalName <String>]: The userPrincipalName attribute of the user.
        [CreatedDateTime <DateTime?>]: The DateTimeOffset when the job was created. Read-only.
        [Documents <IMicrosoftGraphPrintDocument[]>]: 
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [ContentType <String>]: The document's content (MIME) type. Read-only.
          [DisplayName <String>]: The document's name. Read-only.
          [Size <Int64?>]: The document's size in bytes. Read-only.
        [IsFetchable <Boolean?>]: If true, document can be fetched by printer.
        [RedirectedFrom <String>]: Contains the source job URL, if the job has been redirected from another printer.
        [RedirectedTo <String>]: Contains the destination job URL, if the job has been redirected to another printer.
        [Status <IMicrosoftGraphPrintJobStatus>]: printJobStatus
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Description <String>]: A human-readable description of the print job's current processing state. Read-only.
          [Details <String[]>]: Additional details for print job state. Valid values are described in the following table. Read-only.
          [IsAcquiredByPrinter <Boolean?>]: True if the job was acknowledged by a printer; false otherwise. Read-only.
          [State <String>]: printJobProcessingState
        [Tasks <IMicrosoftGraphPrintTask[]>]: A list of printTasks that were triggered by this print job.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Definition <IMicrosoftGraphPrintTaskDefinition>]: printTaskDefinition
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [CreatedBy <IMicrosoftGraphAppIdentity>]: appIdentity
              [(Any) <Object>]: This indicates any property can be added to this object.
              [AppId <String>]: Refers to the Unique GUID representing Application Id in the Azure Active Directory.
              [DisplayName <String>]: Refers to the Application Name displayed in the Azure Portal.
              [ServicePrincipalId <String>]: Refers to the Unique GUID indicating Service Principal Id in Azure Active Directory for the corresponding App.
              [ServicePrincipalName <String>]: Refers to the Service Principal Name is the Application name in the tenant.
            [DisplayName <String>]: The name of the printTaskDefinition.
            [Tasks <IMicrosoftGraphPrintTask[]>]: A list of tasks that have been created based on this definition. The list includes currently running tasks and recently completed tasks. Read-only.
          [ParentUrl <String>]: The URL for the print entity that triggered this task. For example, https://graph.microsoft.com/v1.0/print/printers/{printerId}/jobs/{jobId}. Read-only.
          [Status <IMicrosoftGraphPrintTaskStatus>]: printTaskStatus
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Description <String>]: A human-readable description of the current processing state of the printTask.
            [State <String>]: printTaskProcessingState
          [Trigger <IMicrosoftGraphPrintTaskTrigger>]: printTaskTrigger
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Definition <IMicrosoftGraphPrintTaskDefinition>]: printTaskDefinition
            [Event <String>]: printEvent
      [Location <IMicrosoftGraphPrinterLocation>]: printerLocation
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AltitudeInMeters <Int32?>]: The altitude, in meters, that the printer is located at.
        [Building <String>]: The building that the printer is located in.
        [City <String>]: The city that the printer is located in.
        [CountryOrRegion <String>]: The country or region that the printer is located in.
        [Floor <String>]: The floor that the printer is located on. Only numerical values are supported right now.
        [FloorDescription <String>]: The description of the floor that the printer is located on.
        [Latitude <Double?>]: The latitude that the printer is located at.
        [Longitude <Double?>]: The longitude that the printer is located at.
        [Organization <String[]>]: The organizational hierarchy that the printer belongs to. The elements should be in hierarchical order.
        [PostalCode <String>]: The postal code that the printer is located in.
        [RoomDescription <String>]: The description of the room that the printer is located in.
        [RoomName <String>]: The room that the printer is located in. Only numerical values are supported right now.
        [Site <String>]: The site that the printer is located in.
        [StateOrProvince <String>]: The state or province that the printer is located in.
        [StreetAddress <String>]: The street address where the printer is located.
        [Subdivision <String[]>]: The subdivision that the printer is located in. The elements should be in hierarchical order.
        [Subunit <String[]>]: 
      [Manufacturer <String>]: The manufacturer of the printer/printerShare.
      [Model <String>]: The model name of the printer/printerShare.
      [Status <IMicrosoftGraphPrinterStatus>]: printerStatus
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Description <String>]: A human-readable description of the printer's current processing state. Read-only.
        [Details <String[]>]: The list of details describing why the printer is in the current state. Valid values are described in the following table. Read-only.
        [State <String>]: printerProcessingState
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AllowAllUsers <Boolean?>]: If true, all users and groups will be granted access to this printer share. This supersedes the allow lists defined by the allowedUsers and allowedGroups navigation properties.
      [AllowedGroups <IMicrosoftGraphGroup[]>]: The groups whose users have access to print using the printer.
      [AllowedUsers <IMicrosoftGraphUser[]>]: The users who have access to print using the printer.
      [CreatedDateTime <DateTime?>]: The DateTimeOffset when the printer share was created. Read-only.
      [Printer <IMicrosoftGraphPrinter>]: printer
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Capabilities <IMicrosoftGraphPrinterCapabilities>]: printerCapabilities
        [Defaults <IMicrosoftGraphPrinterDefaults>]: printerDefaults
        [DisplayName <String>]: The name of the printer/printerShare.
        [IsAcceptingJobs <Boolean?>]: Whether the printer/printerShare is currently accepting new print jobs.
        [Jobs <IMicrosoftGraphPrintJob[]>]: The list of jobs that are queued for printing by the printer/printerShare.
        [Location <IMicrosoftGraphPrinterLocation>]: printerLocation
        [Manufacturer <String>]: The manufacturer of the printer/printerShare.
        [Model <String>]: The model name of the printer/printerShare.
        [Status <IMicrosoftGraphPrinterStatus>]: printerStatus
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Connectors <IMicrosoftGraphPrintConnector[]>]: The connectors that are associated with the printer.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AppVersion <String>]: The connector's version.
          [DisplayName <String>]: The name of the connector.
          [FullyQualifiedDomainName <String>]: The connector machine's hostname.
          [Location <IMicrosoftGraphPrinterLocation>]: printerLocation
          [OperatingSystem <String>]: The connector machine's operating system version.
          [RegisteredDateTime <DateTime?>]: The DateTimeOffset when the connector was registered.
        [HasPhysicalDevice <Boolean?>]: True if the printer has a physical device for printing. Read-only.
        [IsShared <Boolean?>]: True if the printer is shared; false otherwise. Read-only.
        [LastSeenDateTime <DateTime?>]: The most recent dateTimeOffset when a printer interacted with Universal Print. Read-only.
        [RegisteredDateTime <DateTime?>]: The DateTimeOffset when the printer was registered. Read-only.
        [Shares <IMicrosoftGraphPrinterShare[]>]: The list of printerShares that are associated with the printer. Currently, only one printerShare can be associated with the printer. Read-only. Nullable.
        [TaskTriggers <IMicrosoftGraphPrintTaskTrigger[]>]: A list of task triggers that are associated with the printer.
      [ViewPoint <IMicrosoftGraphPrinterShareViewpoint>]: printerShareViewpoint
        [(Any) <Object>]: This indicates any property can be added to this object.
        [LastUsedDateTime <DateTime?>]: Date and time when the printer was last used by the signed-in user. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
  [ProvisionedPlans <IMicrosoftGraphProvisionedPlan[]>]: The plans that are provisioned for the user. Read-only. Not nullable. Returned only on $select. Supports $filter (eq, not, ge, le).
    [CapabilityStatus <String>]: For example, 'Enabled'.
    [ProvisioningStatus <String>]: For example, 'Success'.
    [Service <String>]: The name of the service; for example, 'AccessControlS2S'
  [ProxyAddresses <String[]>]: For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. Changes to the mail property will also update this collection to include the value as an SMTP address. For more information, see mail and proxyAddresses properties. The proxy address prefixed with SMTP (capitalized) is the primary proxy address while those prefixed with smtp are the secondary proxy addresses. For Azure AD B2C accounts, this property has a limit of ten unique addresses. Read-only in Microsoft Graph; you can update this property only through the Microsoft 365 admin center. Not nullable. Returned only on $select. Supports $filter (eq, not, ge, le, startsWith, endsWith, /$count eq 0, /$count ne 0).
  [RegisteredDevices <IMicrosoftGraphDirectoryObject[]>]: Devices that are registered for the user. Read-only. Nullable. Supports $expand.
  [Responsibilities <String[]>]: A list for the user to enumerate their responsibilities. Returned only on $select.
  [Schools <String[]>]: A list for the user to enumerate the schools they have attended. Returned only on $select.
  [ScopedRoleMemberOf <IMicrosoftGraphScopedRoleMembership[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AdministrativeUnitId <String>]: Unique identifier for the administrative unit that the directory role is scoped to
    [RoleId <String>]: Unique identifier for the directory role that the member is in.
    [RoleMemberInfo <IMicrosoftGraphIdentity>]: identity
  [SecurityIdentifier <String>]: Security identifier (SID) of the user, used in Windows scenarios. Read-only. Returned by default. Supports $select and $filter (eq, not, ge, le, startsWith).
  [Settings <IMicrosoftGraphUserSettings>]: userSettings
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ContributionToContentDiscoveryAsOrganizationDisabled <Boolean?>]: Reflects the organization level setting controlling delegate access to the trending API. When set to true, the organization doesn't have access to Office Delve. The relevancy of the content displayed in Microsoft 365, for example in Suggested sites in SharePoint Home and the Discover view in OneDrive for Business is affected for the whole organization. This setting is read-only and can only be changed by administrators in the SharePoint admin center.
    [ContributionToContentDiscoveryDisabled <Boolean?>]: When set to true, the delegate access to the user's trending API is disabled. When set to true, documents in the user's Office Delve are disabled. When set to true, the relevancy of the content displayed in Microsoft 365, for example in Suggested sites in SharePoint Home and the Discover view in OneDrive for Business is affected. Users can control this setting in Office Delve.
    [ShiftPreferences <IMicrosoftGraphShiftPreferences>]: shiftPreferences
      [(Any) <Object>]: This indicates any property can be added to this object.
      [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Availability <IMicrosoftGraphShiftAvailability[]>]: Availability of the user to be scheduled for work and its recurrence pattern.
        [Recurrence <IMicrosoftGraphPatternedRecurrence>]: patternedRecurrence
        [TimeSlots <IMicrosoftGraphTimeRange[]>]: The time slot(s) preferred by the user.
          [EndTime <String>]: End time for the time range.
          [StartTime <String>]: Start time for the time range.
        [TimeZone <String>]: Specifies the time zone for the indicated time.
  [ShowInAddressList <Boolean?>]: Do not use in Microsoft Graph. Manage this property through the Microsoft 365 admin center instead. Represents whether the user should be included in the Outlook global address list. See Known issue.
  [SignInActivity <IMicrosoftGraphSignInActivity>]: signInActivity
    [(Any) <Object>]: This indicates any property can be added to this object.
    [LastNonInteractiveSignInDateTime <DateTime?>]: The last non-interactive sign-in date for a specific user. You can use this field to calculate the last time a client attempted to sign into the directory on behalf of a user. Because some users may use clients to access tenant resources rather than signing into your tenant directly, you can use the non-interactive sign-in date to along with lastSignInDateTime to identify inactive users. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is: '2014-01-01T00:00:00Z'. Azure AD maintains non-interactive sign-ins going back to May 2020. For more information about using the value of this property, see Manage inactive user accounts in Azure AD.
    [LastNonInteractiveSignInRequestId <String>]: Request identifier of the last non-interactive sign-in performed by this user.
    [LastSignInDateTime <DateTime?>]: The last interactive sign-in date and time for a specific user. You can use this field to calculate the last time a user attempted to sign into the directory with an interactive authentication method. This field can be used to build reports, such as inactive users. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is: '2014-01-01T00:00:00Z'. Azure AD maintains interactive sign-ins going back to April 2020. For more information about using the value of this property, see Manage inactive user accounts in Azure AD.
    [LastSignInRequestId <String>]: Request identifier of the last interactive sign-in performed by this user.
  [SignInSessionsValidFromDateTime <DateTime?>]: Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications will get an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft Graph).  If this happens, the application will need to acquire a new refresh token by making a request to the authorize endpoint. Read-only. Use revokeSignInSessions to reset. Returned only on $select.
  [Skills <String[]>]: A list for the user to enumerate their skills. Returned only on $select.
  [State <String>]: The state or province in the user's address. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [StreetAddress <String>]: The street address of the user's place of business. Maximum length is 1024 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [Surname <String>]: The user's surname (family name or last name). Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [Teamwork <IMicrosoftGraphUserTeamwork>]: userTeamwork
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AssociatedTeams <IMicrosoftGraphAssociatedTeamInfo[]>]: The list of associatedTeamInfo objects that a user is associated with.
      [DisplayName <String>]: The name of the team.
      [Team <IMicrosoftGraphTeam>]: team
      [TenantId <String>]: The ID of the Azure Active Directory tenant.
      [Id <String>]: The unique idenfier for an entity. Read-only.
    [InstalledApps <IMicrosoftGraphUserScopeTeamsAppInstallation[]>]: The apps installed in the personal scope of this user.
      [ConsentedPermissionSet <IMicrosoftGraphTeamsAppPermissionSet>]: teamsAppPermissionSet
      [TeamsApp <IMicrosoftGraphTeamsApp>]: teamsApp
      [TeamsAppDefinition <IMicrosoftGraphTeamsAppDefinition>]: teamsAppDefinition
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Chat <IMicrosoftGraphChat>]: chat
  [Todo <IMicrosoftGraphTodo>]: todo
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Lists <IMicrosoftGraphTodoTaskList[]>]: The task lists in the users mailbox.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DisplayName <String>]: The name of the task list.
      [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the task list. Nullable.
      [IsOwner <Boolean?>]: True if the user is owner of the given task list.
      [IsShared <Boolean?>]: True if the task list is shared with other users
      [Tasks <IMicrosoftGraphTodoTask[]>]: The tasks in this task list. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AttachmentSessions <IMicrosoftGraphAttachmentSession[]>]: 
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Content <Byte[]>]: The content streams that are uploaded.
          [ExpirationDateTime <DateTime?>]: The date and time in UTC when the upload session will expire. The complete file must be uploaded before this expiration time is reached.
          [NextExpectedRanges <String[]>]: Indicates a single value {start} that represents the location in the file where the next upload should begin.
        [Attachments <IMicrosoftGraphAttachmentBase[]>]: A collection of file attachments for the task.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [ContentType <String>]: The MIME type.
          [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
          [Name <String>]: The display name of the attachment. This does not need to be the actual file name.
          [Size <Int32?>]: The length of the attachment in bytes.
        [Body <IMicrosoftGraphItemBody>]: itemBody
        [BodyLastModifiedDateTime <DateTime?>]: The date and time when the task body was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
        [Categories <String[]>]: The categories associated with the task. Each category corresponds to the displayName property of an outlookCategory that the user has defined.
        [ChecklistItems <IMicrosoftGraphChecklistItem[]>]: A collection of checklistItems linked to a task.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [CheckedDateTime <DateTime?>]: The date and time when the checklistItem was finished.
          [CreatedDateTime <DateTime?>]: The date and time when the checklistItem was created.
          [DisplayName <String>]: Field indicating the title of checklistItem.
          [IsChecked <Boolean?>]: State indicating whether the item is checked off or not.
        [CompletedDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [CreatedDateTime <DateTime?>]: The date and time when the task was created. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
        [DueDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the task. Nullable.
        [HasAttachments <Boolean?>]: Indicates whether the task has attachments.
        [Importance <String>]: importance
        [IsReminderOn <Boolean?>]: Set to true if an alert is set to remind the user of the task.
        [LastModifiedDateTime <DateTime?>]: The date and time when the task was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
        [LinkedResources <IMicrosoftGraphLinkedResource[]>]: A collection of resources linked to the task.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [ApplicationName <String>]: The app name of the source that sends the linkedResource.
          [DisplayName <String>]: The title of the linkedResource.
          [ExternalId <String>]: ID of the object that is associated with this task on the third-party/partner system.
          [WebUrl <String>]: Deep link to the linkedResource.
        [Recurrence <IMicrosoftGraphPatternedRecurrence>]: patternedRecurrence
        [ReminderDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [StartDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [Status <String>]: taskStatus
        [Title <String>]: A brief description of the task.
      [WellknownListName <String>]: wellknownListName
  [TransitiveMemberOf <IMicrosoftGraphDirectoryObject[]>]: The groups, including nested groups, and directory roles that a user is a member of. Nullable.
  [UsageLocation <String>]: A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries.  Examples include: US, JP, and GB. Not nullable. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [UserPrincipalName <String>]: The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain must be present in the tenant's collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization.NOTE: This property cannot contain accent characters. Only the following characters are allowed A - Z, a - z, 0 - 9, ' . - _ ! # ^ ~. For the complete list of allowed characters, see username policies. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, endsWith) and $orderBy.
  [UserType <String>]: A string value that can be used to classify user types in your directory, such as Member and Guest. Returned only on $select. Supports $filter (eq, ne, not, in, and eq on null values). NOTE: For more information about the permissions for member and guest users, see What are the default user permissions in Azure Active Directory?

WINDOWSPROTECTIONSTATE <IMicrosoftGraphWindowsProtectionState>: Device protection status entity.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AntiMalwareVersion <String>]: Current anti malware version
  [DetectedMalwareState <IMicrosoftGraphWindowsDeviceMalwareState[]>]: Device malware list
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AdditionalInformationUrl <String>]: Information URL to learn more about the malware
    [Category <WindowsMalwareCategory?>]: Malware category id
    [DetectionCount <Int32?>]: Number of times the malware is detected
    [DisplayName <String>]: Malware name
    [ExecutionState <WindowsMalwareExecutionState?>]: Malware execution status
    [InitialDetectionDateTime <DateTime?>]: Initial detection datetime of the malware
    [LastStateChangeDateTime <DateTime?>]: The last time this particular threat was changed
    [Severity <WindowsMalwareSeverity?>]: Malware severity
    [State <WindowsMalwareState?>]: Malware current status
    [ThreatState <WindowsMalwareThreatState?>]: Malware threat status
  [DeviceState <WindowsDeviceHealthState?>]: Computer endpoint protection state
  [EngineVersion <String>]: Current endpoint protection engine's version
  [FullScanOverdue <Boolean?>]: When TRUE indicates full scan is overdue, when FALSE indicates full scan is not overdue. Defaults to setting on client device.
  [FullScanRequired <Boolean?>]: When TRUE indicates full scan is required, when FALSE indicates full scan is not required. Defaults to setting on client device.
  [IsVirtualMachine <Boolean?>]: When TRUE indicates the device is a virtual machine, when FALSE indicates the device is not a virtual machine. Defaults to setting on client device.
  [LastFullScanDateTime <DateTime?>]: Last quick scan datetime
  [LastFullScanSignatureVersion <String>]: Last full scan signature version
  [LastQuickScanDateTime <DateTime?>]: Last quick scan datetime
  [LastQuickScanSignatureVersion <String>]: Last quick scan signature version
  [LastReportedDateTime <DateTime?>]: Last device health status reported time
  [MalwareProtectionEnabled <Boolean?>]: When TRUE indicates anti malware is enabled when FALSE indicates anti malware is not enabled.
  [NetworkInspectionSystemEnabled <Boolean?>]: When TRUE indicates network inspection system enabled, when FALSE indicates network inspection system is not enabled. Defaults to setting on client device.
  [ProductStatus <WindowsDefenderProductStatus?>]: Product Status of Windows Defender
  [QuickScanOverdue <Boolean?>]: When TRUE indicates quick scan is overdue, when FALSE indicates quick scan is not overdue. Defaults to setting on client device.
  [RealTimeProtectionEnabled <Boolean?>]: When TRUE indicates real time protection is enabled, when FALSE indicates real time protection is not enabled. Defaults to setting on client device.
  [RebootRequired <Boolean?>]: When TRUE indicates reboot is required, when FALSE indicates when TRUE indicates reboot is not required. Defaults to setting on client device.
  [SignatureUpdateOverdue <Boolean?>]: When TRUE indicates signature is out of date, when FALSE indicates signature is not out of date. Defaults to setting on client device.
  [SignatureVersion <String>]: Current malware definitions version
  [TamperProtectionEnabled <Boolean?>]: When TRUE indicates the Windows Defender tamper protection feature is enabled, when FALSE indicates the Windows Defender tamper protection feature is not enabled. Defaults to setting on client device.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgusermanageddevice
#>
function New-MgUserManagedDevice {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice]
    # Devices that are managed or pre-enrolled through Intune
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ComplianceState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ComplianceState]
    # Compliance state.
    ${ComplianceState},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphConfigurationManagerClientEnabledFeatures]
    # configuration Manager client enabled features
    # To construct, see NOTES section for CONFIGURATIONMANAGERCLIENTENABLEDFEATURES properties and create a hash table.
    ${ConfigurationManagerClientEnabledFeatures},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCategory]
    # Device categories provides a way to organize your devices.
    # Using device categories, company administrators can define their own categories that make sense to their company.
    # These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment.
    # You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
    # To construct, see NOTES section for DEVICECATEGORY properties and create a hash table.
    ${DeviceCategory},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState[]]
    # Device compliance policy states for this device.
    # To construct, see NOTES section for DEVICECOMPLIANCEPOLICYSTATES properties and create a hash table.
    ${DeviceCompliancePolicyStates},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState[]]
    # Device configuration states for this device.
    # To construct, see NOTES section for DEVICECONFIGURATIONSTATES properties and create a hash table.
    ${DeviceConfigurationStates},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.DeviceEnrollmentType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.DeviceEnrollmentType]
    # Possible ways of adding a mobile device to management.
    ${DeviceEnrollmentType},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceHealthAttestationState]
    # deviceHealthAttestationState
    # To construct, see NOTES section for DEVICEHEALTHATTESTATIONSTATE properties and create a hash table.
    ${DeviceHealthAttestationState},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.DeviceRegistrationState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.DeviceRegistrationState]
    # Device registration status.
    ${DeviceRegistrationState},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.DeviceManagementExchangeAccessState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.DeviceManagementExchangeAccessState]
    # Device Exchange Access State.
    ${ExchangeAccessState},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.DeviceManagementExchangeAccessStateReason])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.DeviceManagementExchangeAccessStateReason]
    # Device Exchange Access State Reason.
    ${ExchangeAccessStateReason},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceLogCollectionResponse[]]
    # List of log collection requests
    # To construct, see NOTES section for LOGCOLLECTIONREQUESTS properties and create a hash table.
    ${LogCollectionRequests},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Automatically generated name to identify a device.
    # Can be overwritten to a user friendly name.
    ${ManagedDeviceName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedDeviceOwnerType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedDeviceOwnerType]
    # Owner type of device.
    ${ManagedDeviceOwnerType},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagementAgentType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagementAgentType]
    # managementAgentType
    ${ManagementAgent},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Notes on the device created by IT Admin.
    # Default is null.
    # To retrieve actual values GET call needs to be made, with device id and included in select parameter.
    # Supports: $select.
    # $Search is not supported.
    ${Notes},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedDevicePartnerReportedHealthState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedDevicePartnerReportedHealthState]
    # Available health states for the Device Health API
    ${PartnerReportedThreatState},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUser[]]
    # The primary users associated with the managed device.
    # To construct, see NOTES section for USERS properties and create a hash table.
    ${Users},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsProtectionState]
    # Device protection status entity.
    # To construct, see NOTES section for WINDOWSPROTECTIONSTATE properties and create a hash table.
    ${WindowsProtectionState},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDevice_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDevice_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDevice_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDevice_CreateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property apps for deviceAppManagement
.Description
Delete navigation property apps for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementandroidmanagedappprotectionapp
#>
function Remove-MgDeviceAppManagementAndroidManagedAppProtectionApp {
[Alias('Remove-MgDeviceAppMgtAndroidManagedAppProtectionApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementAndroidManagedAppProtectionApp_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementAndroidManagedAppProtectionApp_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property assignments for deviceAppManagement
.Description
Delete navigation property assignments for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementandroidmanagedappprotectionassignment
#>
function Remove-MgDeviceAppManagementAndroidManagedAppProtectionAssignment {
[Alias('Remove-MgDeviceAppMgtAndroidManagedAppProtectionAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementAndroidManagedAppProtectionAssignment_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementAndroidManagedAppProtectionAssignment_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property deploymentSummary for deviceAppManagement
.Description
Delete navigation property deploymentSummary for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementandroidmanagedappprotectiondeploymentsummary
#>
function Remove-MgDeviceAppManagementAndroidManagedAppProtectionDeploymentSummary {
[Alias('Remove-MgDeviceAppMgtAndroidManagedAppProtectionDeploymentSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementAndroidManagedAppProtectionDeploymentSummary_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementAndroidManagedAppProtectionDeploymentSummary_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a androidManagedAppProtection.
.Description
Deletes a androidManagedAppProtection.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementandroidmanagedappprotection
#>
function Remove-MgDeviceAppManagementAndroidManagedAppProtection {
[Alias('Remove-MgDeviceAppMgtAndroidManagedAppProtection')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementAndroidManagedAppProtection_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementAndroidManagedAppProtection_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property apps for deviceAppManagement
.Description
Delete navigation property apps for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementdefaultmanagedappprotectionapp
#>
function Remove-MgDeviceAppManagementDefaultManagedAppProtectionApp {
[Alias('Remove-MgDeviceAppMgtDefaultManagedAppProtectionApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementDefaultManagedAppProtectionApp_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementDefaultManagedAppProtectionApp_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property deploymentSummary for deviceAppManagement
.Description
Delete navigation property deploymentSummary for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementdefaultmanagedappprotectiondeploymentsummary
#>
function Remove-MgDeviceAppManagementDefaultManagedAppProtectionDeploymentSummary {
[Alias('Remove-MgDeviceAppMgtDefaultManagedAppProtectionDeploymentSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementDefaultManagedAppProtectionDeploymentSummary_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementDefaultManagedAppProtectionDeploymentSummary_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a defaultManagedAppProtection.
.Description
Deletes a defaultManagedAppProtection.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementdefaultmanagedappprotection
#>
function Remove-MgDeviceAppManagementDefaultManagedAppProtection {
[Alias('Remove-MgDeviceAppMgtDefaultManagedAppProtection')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementDefaultManagedAppProtection_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementDefaultManagedAppProtection_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a managedMobileApp.
.Description
Deletes a managedMobileApp.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementiosmanagedappprotectionapp
#>
function Remove-MgDeviceAppManagementiOSManagedAppProtectionApp {
[Alias('Remove-MgDeviceAppMgtiOSManagedAppProtectionApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementiOSManagedAppProtectionApp_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementiOSManagedAppProtectionApp_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property assignments for deviceAppManagement
.Description
Delete navigation property assignments for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementiosmanagedappprotectionassignment
#>
function Remove-MgDeviceAppManagementiOSManagedAppProtectionAssignment {
[Alias('Remove-MgDeviceAppMgtiOSManagedAppProtectionAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementiOSManagedAppProtectionAssignment_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementiOSManagedAppProtectionAssignment_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property deploymentSummary for deviceAppManagement
.Description
Delete navigation property deploymentSummary for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementiosmanagedappprotectiondeploymentsummary
#>
function Remove-MgDeviceAppManagementiOSManagedAppProtectionDeploymentSummary {
[Alias('Remove-MgDeviceAppMgtiOSManagedAppProtectionDeploymentSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementiOSManagedAppProtectionDeploymentSummary_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementiOSManagedAppProtectionDeploymentSummary_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a iosManagedAppProtection.
.Description
Deletes a iosManagedAppProtection.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementiosmanagedappprotection
#>
function Remove-MgDeviceAppManagementiOSManagedAppProtection {
[Alias('Remove-MgDeviceAppMgtiOSManagedAppProtection')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementiOSManagedAppProtection_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementiOSManagedAppProtection_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property managedAppPolicies for deviceAppManagement
.Description
Delete navigation property managedAppPolicies for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmanagedapppolicy
#>
function Remove-MgDeviceAppManagementManagedAppPolicy {
[Alias('Remove-MgDeviceAppMgtManagedAppPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedAppPolicy_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedAppPolicy_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property appliedPolicies for deviceAppManagement
.Description
Delete navigation property appliedPolicies for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmanagedappregistrationappliedpolicy
#>
function Remove-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy {
[Alias('Remove-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property intendedPolicies for deviceAppManagement
.Description
Delete navigation property intendedPolicies for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmanagedappregistrationintendedpolicy
#>
function Remove-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy {
[Alias('Remove-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a managedAppOperation.
.Description
Deletes a managedAppOperation.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmanagedappregistrationoperation
#>
function Remove-MgDeviceAppManagementManagedAppRegistrationOperation {
[Alias('Remove-MgDeviceAppMgtManagedAppRegistrationOperation')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppOperation
    ${ManagedAppOperationId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedAppRegistrationOperation_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedAppRegistrationOperation_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property managedAppRegistrations for deviceAppManagement
.Description
Delete navigation property managedAppRegistrations for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmanagedappregistration
#>
function Remove-MgDeviceAppManagementManagedAppRegistration {
[Alias('Remove-MgDeviceAppMgtManagedAppRegistration')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedAppRegistration_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedAppRegistration_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property managedAppStatuses for deviceAppManagement
.Description
Delete navigation property managedAppStatuses for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmanagedappstatus
#>
function Remove-MgDeviceAppManagementManagedAppStatus {
[Alias('Remove-MgDeviceAppMgtManagedAppStatus')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppStatus
    ${ManagedAppStatusId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedAppStatus_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedAppStatus_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a iosVppEBookAssignment.
.Description
Deletes a iosVppEBookAssignment.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmanagedebookassignment
#>
function Remove-MgDeviceAppManagementManagedEBookAssignment {
[Alias('Remove-MgDeviceAppMgtManagedEBookAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBookAssignment
    ${ManagedEBookAssignmentId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedEBookAssignment_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedEBookAssignment_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a deviceInstallState.
.Description
Deletes a deviceInstallState.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmanagedebookdevicestate
#>
function Remove-MgDeviceAppManagementManagedEBookDeviceState {
[Alias('Remove-MgDeviceAppMgtManagedEBookDeviceState')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceInstallState
    ${DeviceInstallStateId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedEBookDeviceState_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedEBookDeviceState_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property installSummary for deviceAppManagement
.Description
Delete navigation property installSummary for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmanagedebookinstallsummary
#>
function Remove-MgDeviceAppManagementManagedEBookInstallSummary {
[Alias('Remove-MgDeviceAppMgtManagedEBookInstallSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedEBookInstallSummary_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedEBookInstallSummary_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property deviceStates for deviceAppManagement
.Description
Delete navigation property deviceStates for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmanagedebookuserstatesummarydevicestate
#>
function Remove-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState {
[Alias('Remove-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceInstallState
    ${DeviceInstallStateId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a userInstallStateSummary.
.Description
Deletes a userInstallStateSummary.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmanagedebookuserstatesummary
#>
function Remove-MgDeviceAppManagementManagedEBookUserStateSummary {
[Alias('Remove-MgDeviceAppMgtManagedEBookUserStateSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedEBookUserStateSummary_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedEBookUserStateSummary_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a iosVppEBook.
.Description
Deletes a iosVppEBook.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmanagedebook
#>
function Remove-MgDeviceAppManagementManagedEBook {
[Alias('Remove-MgDeviceAppMgtManagedEBook')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedEBook_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementManagedEBook_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property assignments for deviceAppManagement
.Description
Delete navigation property assignments for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyassignment
#>
function Remove-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment {
[Alias('Remove-MgDeviceAppMgtMdmWindowInformationProtectionPolicyAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property exemptAppLockerFiles for deviceAppManagement
.Description
Delete navigation property exemptAppLockerFiles for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyexemptapplockerfile
#>
function Remove-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile {
[Alias('Remove-MgDeviceAppMgtMdmWindowInformationProtectionPolicyExemptAppLockerFile')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionAppLockerFile
    ${WindowsInformationProtectionAppLockerFileId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property protectedAppLockerFiles for deviceAppManagement
.Description
Delete navigation property protectedAppLockerFiles for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyprotectedapplockerfile
#>
function Remove-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile {
[Alias('Remove-MgDeviceAppMgtMdmWindowInformationProtectionPolicyProtectedAppLockerFile')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionAppLockerFile
    ${WindowsInformationProtectionAppLockerFileId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a mdmWindowsInformationProtectionPolicy.
.Description
Deletes a mdmWindowsInformationProtectionPolicy.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmdmwindowsinformationprotectionpolicy
#>
function Remove-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy {
[Alias('Remove-MgDeviceAppMgtMdmWindowInformationProtectionPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a mobileAppAssignment.
.Description
Deletes a mobileAppAssignment.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmobileappassignment
#>
function Remove-MgDeviceAppManagementMobileAppAssignment {
[Alias('Remove-MgDeviceAppMgtMobileAppAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileAppAssignment
    ${MobileAppAssignmentId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppAssignment_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppAssignment_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a mobileAppCategory.
.Description
Deletes a mobileAppCategory.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmobileappcategory
#>
function Remove-MgDeviceAppManagementMobileAppCategory {
[Alias('Remove-MgDeviceAppMgtMobileAppCategory')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileAppCategory
    ${MobileAppCategoryId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppCategory_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppCategory_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a managedDeviceMobileAppConfigurationAssignment.
.Description
Deletes a managedDeviceMobileAppConfigurationAssignment.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmobileappconfigurationassignment
#>
function Remove-MgDeviceAppManagementMobileAppConfigurationAssignment {
[Alias('Remove-MgDeviceAppMgtMobileAppConfigurationAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfigurationAssignment
    ${ManagedDeviceMobileAppConfigurationAssignmentId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppConfigurationAssignment_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppConfigurationAssignment_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property deviceStatusSummary for deviceAppManagement
.Description
Delete navigation property deviceStatusSummary for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmobileappconfigurationdevicestatussummary
#>
function Remove-MgDeviceAppManagementMobileAppConfigurationDeviceStatusSummary {
[Alias('Remove-MgDeviceAppMgtMobileAppConfigurationDeviceStatusSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppConfigurationDeviceStatusSummary_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppConfigurationDeviceStatusSummary_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a managedDeviceMobileAppConfigurationDeviceStatus.
.Description
Deletes a managedDeviceMobileAppConfigurationDeviceStatus.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmobileappconfigurationdevicestatus
#>
function Remove-MgDeviceAppManagementMobileAppConfigurationDeviceStatus {
[Alias('Remove-MgDeviceAppMgtMobileAppConfigurationDeviceStatus')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
    ${ManagedDeviceMobileAppConfigurationDeviceStatusId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppConfigurationDeviceStatus_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppConfigurationDeviceStatus_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property userStatusSummary for deviceAppManagement
.Description
Delete navigation property userStatusSummary for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmobileappconfigurationuserstatussummary
#>
function Remove-MgDeviceAppManagementMobileAppConfigurationUserStatusSummary {
[Alias('Remove-MgDeviceAppMgtMobileAppConfigurationUserStatusSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppConfigurationUserStatusSummary_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppConfigurationUserStatusSummary_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a managedDeviceMobileAppConfigurationUserStatus.
.Description
Deletes a managedDeviceMobileAppConfigurationUserStatus.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmobileappconfigurationuserstatus
#>
function Remove-MgDeviceAppManagementMobileAppConfigurationUserStatus {
[Alias('Remove-MgDeviceAppMgtMobileAppConfigurationUserStatus')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfigurationUserStatus
    ${ManagedDeviceMobileAppConfigurationUserStatusId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppConfigurationUserStatus_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppConfigurationUserStatus_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a iosMobileAppConfiguration.
.Description
Deletes a iosMobileAppConfiguration.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmobileappconfiguration
#>
function Remove-MgDeviceAppManagementMobileAppConfiguration {
[Alias('Remove-MgDeviceAppMgtMobileAppConfiguration')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppConfiguration_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileAppConfiguration_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a managedIOSStoreApp.
.Description
Deletes a managedIOSStoreApp.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementmobileapp
#>
function Remove-MgDeviceAppManagementMobileApp {
[Alias('Remove-MgDeviceAppMgtMobileApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileApp_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementMobileApp_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property apps for deviceAppManagement
.Description
Delete navigation property apps for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementtargetedmanagedappconfigurationapp
#>
function Remove-MgDeviceAppManagementTargetedManagedAppConfigurationApp {
[Alias('Remove-MgDeviceAppMgtTargetedManagedAppConfigurationApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementTargetedManagedAppConfigurationApp_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementTargetedManagedAppConfigurationApp_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property assignments for deviceAppManagement
.Description
Delete navigation property assignments for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementtargetedmanagedappconfigurationassignment
#>
function Remove-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment {
[Alias('Remove-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property deploymentSummary for deviceAppManagement
.Description
Delete navigation property deploymentSummary for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementtargetedmanagedappconfigurationdeploymentsummary
#>
function Remove-MgDeviceAppManagementTargetedManagedAppConfigurationDeploymentSummary {
[Alias('Remove-MgDeviceAppMgtTargetedManagedAppConfigurationDeploymentSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementTargetedManagedAppConfigurationDeploymentSummary_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementTargetedManagedAppConfigurationDeploymentSummary_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a targetedManagedAppConfiguration.
.Description
Deletes a targetedManagedAppConfiguration.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementtargetedmanagedappconfiguration
#>
function Remove-MgDeviceAppManagementTargetedManagedAppConfiguration {
[Alias('Remove-MgDeviceAppMgtTargetedManagedAppConfiguration')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementTargetedManagedAppConfiguration_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementTargetedManagedAppConfiguration_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a vppToken.
.Description
Deletes a vppToken.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementvpptoken
#>
function Remove-MgDeviceAppManagementVppToken {
[Alias('Remove-MgDeviceAppMgtVppToken')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of vppToken
    ${VppTokenId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementVppToken_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementVppToken_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property assignments for deviceAppManagement
.Description
Delete navigation property assignments for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementwindowsinformationprotectionpolicyassignment
#>
function Remove-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment {
[Alias('Remove-MgDeviceAppMgtWindowInformationProtectionPolicyAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property exemptAppLockerFiles for deviceAppManagement
.Description
Delete navigation property exemptAppLockerFiles for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementwindowsinformationprotectionpolicyexemptapplockerfile
#>
function Remove-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile {
[Alias('Remove-MgDeviceAppMgtWindowInformationProtectionPolicyExemptAppLockerFile')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionAppLockerFile
    ${WindowsInformationProtectionAppLockerFileId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property protectedAppLockerFiles for deviceAppManagement
.Description
Delete navigation property protectedAppLockerFiles for deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementwindowsinformationprotectionpolicyprotectedapplockerfile
#>
function Remove-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile {
[Alias('Remove-MgDeviceAppMgtWindowInformationProtectionPolicyProtectedAppLockerFile')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionAppLockerFile
    ${WindowsInformationProtectionAppLockerFileId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a windowsInformationProtectionPolicy.
.Description
Deletes a windowsInformationProtectionPolicy.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmanagementwindowsinformationprotectionpolicy
#>
function Remove-MgDeviceAppManagementWindowsInformationProtectionPolicy {
[Alias('Remove-MgDeviceAppMgtWindowInformationProtectionPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementWindowsInformationProtectionPolicy_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppManagementWindowsInformationProtectionPolicy_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property deviceManagementTroubleshootingEvents for users
.Description
Delete navigation property deviceManagementTroubleshootingEvents for users
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mguserdevicemanagementtroubleshootingevent
#>
function Remove-MgUserDeviceManagementTroubleshootingEvent {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceManagementTroubleshootingEvent
    ${DeviceManagementTroubleshootingEventId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserDeviceManagementTroubleshootingEvent_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserDeviceManagementTroubleshootingEvent_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property deviceCategory for users
.Description
Delete navigation property deviceCategory for users
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgusermanageddevicecategory
#>
function Remove-MgUserManagedDeviceCategory {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceCategory_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceCategory_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property deviceCompliancePolicyStates for users
.Description
Delete navigation property deviceCompliancePolicyStates for users
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgusermanageddevicecompliancepolicystate
#>
function Remove-MgUserManagedDeviceCompliancePolicyState {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceCompliancePolicyState
    ${DeviceCompliancePolicyStateId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceCompliancePolicyState_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceCompliancePolicyState_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property deviceConfigurationStates for users
.Description
Delete navigation property deviceConfigurationStates for users
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgusermanageddeviceconfigurationstate
#>
function Remove-MgUserManagedDeviceConfigurationState {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceConfigurationState
    ${DeviceConfigurationStateId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceConfigurationState_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceConfigurationState_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property logCollectionRequests for users
.Description
Delete navigation property logCollectionRequests for users
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgusermanageddevicelogcollectionresponse
#>
function Remove-MgUserManagedDeviceLogCollectionResponse {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceLogCollectionResponse
    ${DeviceLogCollectionResponseId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceLogCollectionResponse_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceLogCollectionResponse_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Deletes a windowsDeviceMalwareState.
.Description
Deletes a windowsDeviceMalwareState.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgusermanageddevicewindowsprotectionstatedetectedmalwarestate
#>
function Remove-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsDeviceMalwareState
    ${WindowsDeviceMalwareStateId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property windowsProtectionState for users
.Description
Delete navigation property windowsProtectionState for users
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgusermanageddevicewindowsprotectionstate
#>
function Remove-MgUserManagedDeviceWindowsProtectionState {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceWindowsProtectionState_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceWindowsProtectionState_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Delete navigation property managedDevices for users
.Description
Delete navigation property managedDevices for users
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgusermanageddevice
#>
function Remove-MgUserManagedDevice {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDevice_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDevice_DeleteViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Not yet documented
.Description
Not yet documented
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPathsWfdti0DeviceappmanagementManagedebooksManagedebookIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IPathsWfdti0DeviceappmanagementManagedebooksManagedebookIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [ManagedEBookAssignments <IMicrosoftGraphManagedEBookAssignment[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [InstallIntent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy

MANAGEDEBOOKASSIGNMENTS <IMicrosoftGraphManagedEBookAssignment[]>: .
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [InstallIntent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/set-mgdeviceappmanagementmanagedebook
#>
function Set-MgDeviceAppManagementManagedEBook {
[Alias('Set-MgDeviceAppMgtManagedEBook')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='AssignExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Assign', Mandatory)]
    [Parameter(ParameterSetName='AssignExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='AssignViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Assign', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPathsWfdti0DeviceappmanagementManagedebooksManagedebookIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='AssignExpanded')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='AssignExpanded')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment[]]
    # .
    # To construct, see NOTES section for MANAGEDEBOOKASSIGNMENTS properties and create a hash table.
    ${ManagedEBookAssignments},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Assign = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementManagedEBook_Assign';
            AssignExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementManagedEBook_AssignExpanded';
            AssignViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementManagedEBook_AssignViaIdentity';
            AssignViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementManagedEBook_AssignViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Not yet documented
.Description
Not yet documented
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPaths1Pwcjs5DeviceappmanagementMobileappconfigurationsManageddevicemobileappconfigurationIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment[]>: .
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IPaths1Pwcjs5DeviceappmanagementMobileappconfigurationsManageddevicemobileappconfigurationIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/set-mgdeviceappmanagementmobileappconfiguration
#>
function Set-MgDeviceAppManagementMobileAppConfiguration {
[Alias('Set-MgDeviceAppMgtMobileAppConfiguration')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='AssignExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Assign', Mandatory)]
    [Parameter(ParameterSetName='AssignExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='AssignViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Assign', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPaths1Pwcjs5DeviceappmanagementMobileappconfigurationsManageddevicemobileappconfigurationIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='AssignExpanded')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='AssignExpanded')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment[]]
    # .
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Assign = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementMobileAppConfiguration_Assign';
            AssignExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementMobileAppConfiguration_AssignExpanded';
            AssignViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementMobileAppConfiguration_AssignViaIdentity';
            AssignViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementMobileAppConfiguration_AssignViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Not yet documented
.Description
Not yet documented
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPaths12NzrcrDeviceappmanagementMobileappsMobileappIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IPaths12NzrcrDeviceappmanagementMobileappsMobileappIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [MobileAppAssignments <IMicrosoftGraphMobileAppAssignment[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Intent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
    [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy

MOBILEAPPASSIGNMENTS <IMicrosoftGraphMobileAppAssignment[]>: .
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Intent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
  [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/set-mgdeviceappmanagementmobileapp
#>
function Set-MgDeviceAppManagementMobileApp {
[Alias('Set-MgDeviceAppMgtMobileApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='AssignExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Assign', Mandatory)]
    [Parameter(ParameterSetName='AssignExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='AssignViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Assign', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPaths12NzrcrDeviceappmanagementMobileappsMobileappIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='AssignExpanded')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='AssignExpanded')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment[]]
    # .
    # To construct, see NOTES section for MOBILEAPPASSIGNMENTS properties and create a hash table.
    ${MobileAppAssignments},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Assign = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementMobileApp_Assign';
            AssignExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementMobileApp_AssignExpanded';
            AssignViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementMobileApp_AssignViaIdentity';
            AssignViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementMobileApp_AssignViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Not yet documented
.Description
Not yet documented
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPathsZxn05FDeviceappmanagementTargetedmanagedappconfigurationsTargetedmanagedappconfigurationIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>: .
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IPathsZxn05FDeviceappmanagementTargetedmanagedappconfigurationsTargetedmanagedappconfigurationIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/set-mgdeviceappmanagementtargetedmanagedappconfiguration
#>
function Set-MgDeviceAppManagementTargetedManagedAppConfiguration {
[Alias('Set-MgDeviceAppMgtTargetedManagedAppConfiguration')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='AssignExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Assign', Mandatory)]
    [Parameter(ParameterSetName='AssignExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='AssignViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Assign', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPathsZxn05FDeviceappmanagementTargetedmanagedappconfigurationsTargetedmanagedappconfigurationIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='AssignExpanded')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='AssignExpanded')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment[]]
    # .
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Assign = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementTargetedManagedAppConfiguration_Assign';
            AssignExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementTargetedManagedAppConfiguration_AssignExpanded';
            AssignViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementTargetedManagedAppConfiguration_AssignViaIdentity';
            AssignViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppManagementTargetedManagedAppConfiguration_AssignViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Syncs Intune account with Microsoft Store For Business
.Description
Syncs Intune account with Microsoft Store For Business
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
System.Boolean
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/sync-mgdeviceappmanagementmicrosoftstoreforbusinessapp
#>
function Sync-MgDeviceAppManagementMicrosoftStoreForBusinessApp {
[Alias('Sync-MgDeviceAppMgtMicrosoftStoreGraphFPreBusinessApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Sync', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Sync = 'Microsoft.Graph.Devices.CorporateManagement.private\Sync-MgDeviceAppManagementMicrosoftStoreForBusinessApp_Sync';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Syncs licenses associated with a specific appleVolumePurchaseProgramToken
.Description
Syncs licenses associated with a specific appleVolumePurchaseProgramToken
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/sync-mgdeviceappmanagementvpptokenlicense
#>
function Sync-MgDeviceAppManagementVppTokenLicense {
[Alias('Sync-MgDeviceAppMgtVppTokenLicense')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken])]
[CmdletBinding(DefaultParameterSetName='Sync', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Sync', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of vppToken
    ${VppTokenId},

    [Parameter(ParameterSetName='SyncViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Sync = 'Microsoft.Graph.Devices.CorporateManagement.private\Sync-MgDeviceAppManagementVppTokenLicense_Sync';
            SyncViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Sync-MgDeviceAppManagementVppTokenLicense_SyncViaIdentity';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property apps in deviceAppManagement
.Description
Update the navigation property apps in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementandroidmanagedappprotectionapp
#>
function Update-MgDeviceAppManagementAndroidManagedAppProtectionApp {
[Alias('Update-MgDeviceAppMgtAndroidManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtectionApp_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtectionApp_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtectionApp_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtectionApp_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property assignments in deviceAppManagement
.Description
Update the navigation property assignments in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppPolicyAssignment>: The type for deployment of groups or apps.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementandroidmanagedappprotectionassignment
#>
function Update-MgDeviceAppManagementAndroidManagedAppProtectionAssignment {
[Alias('Update-MgDeviceAppMgtAndroidManagedAppProtectionAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment]
    # The type for deployment of groups or apps.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtectionAssignment_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtectionAssignment_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtectionAssignment_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtectionAssignment_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property deploymentSummary in deviceAppManagement
.Description
Update the navigation property deploymentSummary in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

CONFIGURATIONDEPLOYMENTSUMMARYPERAPP <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>: Not yet documented
  [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementandroidmanagedappprotectiondeploymentsummary
#>
function Update-MgDeviceAppManagementAndroidManagedAppProtectionDeploymentSummary {
[Alias('Update-MgDeviceAppMgtAndroidManagedAppProtectionDeploymentSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Not yet documented
    ${ConfigurationDeployedUserCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]]
    # Not yet documented
    # To construct, see NOTES section for CONFIGURATIONDEPLOYMENTSUMMARYPERAPP properties and create a hash table.
    ${ConfigurationDeploymentSummaryPerApp},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Not yet documented
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Not yet documented
    ${LastRefreshTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtectionDeploymentSummary_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtectionDeploymentSummary_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtectionDeploymentSummary_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtectionDeploymentSummary_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a androidManagedAppProtection object.
.Description
Update the properties of a androidManagedAppProtection object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphAndroidManagedAppProtection>: Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an Android device
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [AllowedDataStorageLocations <ManagedAppDataStorageLocation[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <ManagedAppClipboardSharingLevel?>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <ManagedBrowserType?>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <ManagedAppPinCharacterSet?>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomBrowserDisplayName <String>]: Friendly name of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [CustomBrowserPackageId <String>]: Unique identifier of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled
  [EncryptAppData <Boolean?>]: Indicates whether application data for managed apps should be encrypted
  [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app.
  [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app.
  [ScreenCaptureBlocked <Boolean?>]: Indicates whether a managed user can take screen captures of managed apps

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementandroidmanagedappprotection
#>
function Update-MgDeviceAppManagementAndroidManagedAppProtection {
[Alias('Update-MgDeviceAppMgtAndroidManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection]
    # Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an Android device
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataStorageLocation])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataStorageLocation[]]
    # Data storage locations where a user may store managed data.
    ${AllowedDataStorageLocations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel]
    # Data can be transferred from/to these classes of apps
    ${AllowedInboundDataTransferSources},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppClipboardSharingLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppClipboardSharingLevel]
    # Represents the level to which the device's clipboard may be shared between apps
    ${AllowedOutboundClipboardSharingLevel},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel]
    # Data can be transferred from/to these classes of apps
    ${AllowedOutboundDataTransferDestinations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment[]]
    # Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether contacts can be synced to the user's device.
    ${ContactSyncBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Friendly name of the preferred custom browser to open weblink on Android.
    # When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    ${CustomBrowserDisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Unique identifier of the preferred custom browser to open weblink on Android.
    # When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    ${CustomBrowserPackageId},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether the backup of a managed app's data is blocked.
    ${DataBackupBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether device compliance is required.
    ${DeviceComplianceRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When this setting is enabled, app level encryption is disabled if device level encryption is enabled
    ${DisableAppEncryptionIfDeviceEncryptionIsEnabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the app pin is required if the device pin is set.
    ${DisableAppPinIfDevicePinIsSet},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether application data for managed apps should be encrypted
    ${EncryptAppData},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    ${FingerprintBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedBrowserType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedBrowserType]
    # Type of managed browser
    ${ManagedBrowser},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    ${ManagedBrowserToOpenLinksRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    ${MaximumPinRetries},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Minimum pin length required for an app-level pin if PinRequired is set to True
    ${MinimumPinLength},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredAppVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredOSVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest required Android security patch level a user can have to gain secure access to the app.
    ${MinimumRequiredPatchVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app.
    ${MinimumWarningAppVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app from accessing company data.
    ${MinimumWarningOSVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest recommended Android security patch level a user can have for secure access to the app.
    ${MinimumWarningPatchVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether organizational credentials are required for app use.
    ${OrganizationalCredentialsRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    ${PeriodBeforePinReset},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is not connected to the internet.
    ${PeriodOfflineBeforeAccessCheck},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    ${PeriodOfflineBeforeWipeIsEnforced},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is connected to the internet.
    ${PeriodOnlineBeforeAccessCheck},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppPinCharacterSet])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppPinCharacterSet]
    # Character set which is to be used for a user's app PIN
    ${PinCharacterSet},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether an app-level pin is required.
    ${PinRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether printing is allowed from managed apps.
    ${PrintBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    ${SaveAsBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether a managed user can take screen captures of managed apps
    ${ScreenCaptureBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether simplePin is blocked.
    ${SimplePinBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtection_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtection_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtection_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementAndroidManagedAppProtection_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property apps in deviceAppManagement
.Description
Update the navigation property apps in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementdefaultmanagedappprotectionapp
#>
function Update-MgDeviceAppManagementDefaultManagedAppProtectionApp {
[Alias('Update-MgDeviceAppMgtDefaultManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementDefaultManagedAppProtectionApp_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementDefaultManagedAppProtectionApp_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementDefaultManagedAppProtectionApp_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementDefaultManagedAppProtectionApp_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property deploymentSummary in deviceAppManagement
.Description
Update the navigation property deploymentSummary in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

CONFIGURATIONDEPLOYMENTSUMMARYPERAPP <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>: Not yet documented
  [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementdefaultmanagedappprotectiondeploymentsummary
#>
function Update-MgDeviceAppManagementDefaultManagedAppProtectionDeploymentSummary {
[Alias('Update-MgDeviceAppMgtDefaultManagedAppProtectionDeploymentSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Not yet documented
    ${ConfigurationDeployedUserCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]]
    # Not yet documented
    # To construct, see NOTES section for CONFIGURATIONDEPLOYMENTSUMMARYPERAPP properties and create a hash table.
    ${ConfigurationDeploymentSummaryPerApp},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Not yet documented
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Not yet documented
    ${LastRefreshTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementDefaultManagedAppProtectionDeploymentSummary_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementDefaultManagedAppProtectionDeploymentSummary_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementDefaultManagedAppProtectionDeploymentSummary_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementDefaultManagedAppProtectionDeploymentSummary_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a defaultManagedAppProtection object.
.Description
Update the properties of a defaultManagedAppProtection object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IMicrosoftGraphDefaultManagedAppProtection>: Policy used to configure detailed management settings for a specified set of apps for all users not targeted by a TargetedManagedAppProtection Policy
  [(Any) <Object>]: This indicates any property can be added to this object.
  [AllowedDataStorageLocations <ManagedAppDataStorageLocation[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <ManagedAppClipboardSharingLevel?>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <ManagedBrowserType?>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <ManagedAppPinCharacterSet?>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AppDataEncryptionType <ManagedAppDataEncryptionType?>]: Represents the level to which app data is encrypted for managed apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to the affected users, unalterned by this service
    [Name <String>]: Name for this key-value pair
    [Value <String>]: Value for this key-value pair
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled. (Android only)
  [EncryptAppData <Boolean?>]: Indicates whether managed-app data should be encrypted. (Android only)
  [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True. (iOS Only)
  [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app. (Android only)
  [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data. (iOS Only)
  [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app. (Android only)
  [ScreenCaptureBlocked <Boolean?>]: Indicates whether screen capture is blocked. (Android only)

CUSTOMSETTINGS <IMicrosoftGraphKeyValuePair[]>: A set of string key and string value pairs to be sent to the affected users, unalterned by this service
  [Name <String>]: Name for this key-value pair
  [Value <String>]: Value for this key-value pair

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementdefaultmanagedappprotection
#>
function Update-MgDeviceAppManagementDefaultManagedAppProtection {
[Alias('Update-MgDeviceAppMgtDefaultManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection]
    # Policy used to configure detailed management settings for a specified set of apps for all users not targeted by a TargetedManagedAppProtection Policy
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataStorageLocation])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataStorageLocation[]]
    # Data storage locations where a user may store managed data.
    ${AllowedDataStorageLocations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel]
    # Data can be transferred from/to these classes of apps
    ${AllowedInboundDataTransferSources},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppClipboardSharingLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppClipboardSharingLevel]
    # Represents the level to which the device's clipboard may be shared between apps
    ${AllowedOutboundClipboardSharingLevel},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel]
    # Data can be transferred from/to these classes of apps
    ${AllowedOutboundDataTransferDestinations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataEncryptionType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataEncryptionType]
    # Represents the level to which app data is encrypted for managed apps
    ${AppDataEncryptionType},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether contacts can be synced to the user's device.
    ${ContactSyncBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphKeyValuePair[]]
    # A set of string key and string value pairs to be sent to the affected users, unalterned by this service
    # To construct, see NOTES section for CUSTOMSETTINGS properties and create a hash table.
    ${CustomSettings},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether the backup of a managed app's data is blocked.
    ${DataBackupBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether device compliance is required.
    ${DeviceComplianceRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When this setting is enabled, app level encryption is disabled if device level encryption is enabled.
    # (Android only)
    ${DisableAppEncryptionIfDeviceEncryptionIsEnabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the app pin is required if the device pin is set.
    ${DisableAppPinIfDevicePinIsSet},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether managed-app data should be encrypted.
    # (Android only)
    ${EncryptAppData},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
    # (iOS Only)
    ${FaceIdBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    ${FingerprintBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedBrowserType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedBrowserType]
    # Type of managed browser
    ${ManagedBrowser},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    ${ManagedBrowserToOpenLinksRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    ${MaximumPinRetries},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Minimum pin length required for an app-level pin if PinRequired is set to True
    ${MinimumPinLength},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredAppVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredOSVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest required Android security patch level a user can have to gain secure access to the app.
    # (Android only)
    ${MinimumRequiredPatchVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    # (iOS Only)
    ${MinimumRequiredSdkVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app.
    ${MinimumWarningAppVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app from accessing company data.
    ${MinimumWarningOSVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest recommended Android security patch level a user can have for secure access to the app.
    # (Android only)
    ${MinimumWarningPatchVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether organizational credentials are required for app use.
    ${OrganizationalCredentialsRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    ${PeriodBeforePinReset},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is not connected to the internet.
    ${PeriodOfflineBeforeAccessCheck},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    ${PeriodOfflineBeforeWipeIsEnforced},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is connected to the internet.
    ${PeriodOnlineBeforeAccessCheck},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppPinCharacterSet])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppPinCharacterSet]
    # Character set which is to be used for a user's app PIN
    ${PinCharacterSet},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether an app-level pin is required.
    ${PinRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether printing is allowed from managed apps.
    ${PrintBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    ${SaveAsBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether screen capture is blocked.
    # (Android only)
    ${ScreenCaptureBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether simplePin is blocked.
    ${SimplePinBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementDefaultManagedAppProtection_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementDefaultManagedAppProtection_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementDefaultManagedAppProtection_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementDefaultManagedAppProtection_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a managedMobileApp object.
.Description
Update the properties of a managedMobileApp object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementiosmanagedappprotectionapp
#>
function Update-MgDeviceAppManagementiOSManagedAppProtectionApp {
[Alias('Update-MgDeviceAppMgtiOSManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtectionApp_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtectionApp_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtectionApp_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtectionApp_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property assignments in deviceAppManagement
.Description
Update the navigation property assignments in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppPolicyAssignment>: The type for deployment of groups or apps.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementiosmanagedappprotectionassignment
#>
function Update-MgDeviceAppManagementiOSManagedAppProtectionAssignment {
[Alias('Update-MgDeviceAppMgtiOSManagedAppProtectionAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment]
    # The type for deployment of groups or apps.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtectionAssignment_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtectionAssignment_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtectionAssignment_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtectionAssignment_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a managedAppPolicyDeploymentSummary object.
.Description
Update the properties of a managedAppPolicyDeploymentSummary object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

CONFIGURATIONDEPLOYMENTSUMMARYPERAPP <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>: Not yet documented
  [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementiosmanagedappprotectiondeploymentsummary
#>
function Update-MgDeviceAppManagementiOSManagedAppProtectionDeploymentSummary {
[Alias('Update-MgDeviceAppMgtiOSManagedAppProtectionDeploymentSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Not yet documented
    ${ConfigurationDeployedUserCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]]
    # Not yet documented
    # To construct, see NOTES section for CONFIGURATIONDEPLOYMENTSUMMARYPERAPP properties and create a hash table.
    ${ConfigurationDeploymentSummaryPerApp},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Not yet documented
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Not yet documented
    ${LastRefreshTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtectionDeploymentSummary_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtectionDeploymentSummary_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtectionDeploymentSummary_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtectionDeploymentSummary_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a iosManagedAppProtection object.
.Description
Update the properties of a iosManagedAppProtection object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphIosManagedAppProtection>: Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an iOS device
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [AllowedDataStorageLocations <ManagedAppDataStorageLocation[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <ManagedAppClipboardSharingLevel?>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <ManagedBrowserType?>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <ManagedAppPinCharacterSet?>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AppDataEncryptionType <ManagedAppDataEncryptionType?>]: Represents the level to which app data is encrypted for managed apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomBrowserProtocol <String>]: A custom browser protocol to open weblink on iOS. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
  [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementiosmanagedappprotection
#>
function Update-MgDeviceAppManagementiOSManagedAppProtection {
[Alias('Update-MgDeviceAppMgtiOSManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection]
    # Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an iOS device
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataStorageLocation])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataStorageLocation[]]
    # Data storage locations where a user may store managed data.
    ${AllowedDataStorageLocations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel]
    # Data can be transferred from/to these classes of apps
    ${AllowedInboundDataTransferSources},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppClipboardSharingLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppClipboardSharingLevel]
    # Represents the level to which the device's clipboard may be shared between apps
    ${AllowedOutboundClipboardSharingLevel},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataTransferLevel]
    # Data can be transferred from/to these classes of apps
    ${AllowedOutboundDataTransferDestinations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppDataEncryptionType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppDataEncryptionType]
    # Represents the level to which app data is encrypted for managed apps
    ${AppDataEncryptionType},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment[]]
    # Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether contacts can be synced to the user's device.
    ${ContactSyncBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # A custom browser protocol to open weblink on iOS.
    # When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    ${CustomBrowserProtocol},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether the backup of a managed app's data is blocked.
    ${DataBackupBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether device compliance is required.
    ${DeviceComplianceRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the app pin is required if the device pin is set.
    ${DisableAppPinIfDevicePinIsSet},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
    ${FaceIdBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    ${FingerprintBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedBrowserType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedBrowserType]
    # Type of managed browser
    ${ManagedBrowser},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    ${ManagedBrowserToOpenLinksRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    ${MaximumPinRetries},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Minimum pin length required for an app-level pin if PinRequired is set to True
    ${MinimumPinLength},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredAppVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredOSVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredSdkVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app.
    ${MinimumWarningAppVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app from accessing company data.
    ${MinimumWarningOSVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether organizational credentials are required for app use.
    ${OrganizationalCredentialsRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    ${PeriodBeforePinReset},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is not connected to the internet.
    ${PeriodOfflineBeforeAccessCheck},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    ${PeriodOfflineBeforeWipeIsEnforced},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is connected to the internet.
    ${PeriodOnlineBeforeAccessCheck},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppPinCharacterSet])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppPinCharacterSet]
    # Character set which is to be used for a user's app PIN
    ${PinCharacterSet},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether an app-level pin is required.
    ${PinRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether printing is allowed from managed apps.
    ${PrintBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    ${SaveAsBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether simplePin is blocked.
    ${SimplePinBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtection_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtection_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtection_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementiOSManagedAppProtection_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property managedAppPolicies in deviceAppManagement
.Description
Update the navigation property managedAppPolicies in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicy>: The ManagedAppPolicy resource represents a base type for platform specific policies.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmanagedapppolicy
#>
function Update-MgDeviceAppManagementManagedAppPolicy {
[Alias('Update-MgDeviceAppMgtManagedAppPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy]
    # The ManagedAppPolicy resource represents a base type for platform specific policies.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppPolicy_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppPolicy_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppPolicy_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppPolicy_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property appliedPolicies in deviceAppManagement
.Description
Update the navigation property appliedPolicies in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicy>: The ManagedAppPolicy resource represents a base type for platform specific policies.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmanagedappregistrationappliedpolicy
#>
function Update-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy {
[Alias('Update-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy]
    # The ManagedAppPolicy resource represents a base type for platform specific policies.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property intendedPolicies in deviceAppManagement
.Description
Update the navigation property intendedPolicies in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicy>: The ManagedAppPolicy resource represents a base type for platform specific policies.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmanagedappregistrationintendedpolicy
#>
function Update-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy {
[Alias('Update-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy]
    # The ManagedAppPolicy resource represents a base type for platform specific policies.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a managedAppOperation object.
.Description
Update the properties of a managedAppOperation object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppOperation>: Represents an operation applied against an app registration.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The operation name.
  [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
  [State <String>]: The current state of the operation
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmanagedappregistrationoperation
#>
function Update-MgDeviceAppManagementManagedAppRegistrationOperation {
[Alias('Update-MgDeviceAppMgtManagedAppRegistrationOperation')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppOperation
    ${ManagedAppOperationId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation]
    # Represents an operation applied against an app registration.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The operation name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The last time the app operation was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The current state of the operation
    ${State},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistrationOperation_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistrationOperation_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistrationOperation_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistrationOperation_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property managedAppRegistrations in deviceAppManagement
.Description
Update the navigation property managedAppRegistrations in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPLIEDPOLICIES <IMicrosoftGraphManagedAppPolicy[]>: Zero or more policys already applied on the registered app when it last synchronized with managment service.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IMicrosoftGraphManagedAppRegistration>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [ApplicationVersion <String>]: App version
  [AppliedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policys already applied on the registered app when it last synchronized with managment service.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
  [CreatedDateTime <DateTime?>]: Date and time of creation
  [DeviceName <String>]: Host device name
  [DeviceTag <String>]: App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.
  [DeviceType <String>]: Host device type
  [FlaggedReasons <ManagedAppFlaggedReason[]>]: Zero or more reasons an app registration is flagged. E.g. app running on rooted device
  [IntendedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policies admin intended for the app as of now.
  [LastSyncDateTime <DateTime?>]: Date and time of last the app synced with management service.
  [ManagementSdkVersion <String>]: App management SDK version
  [Operations <IMicrosoftGraphManagedAppOperation[]>]: Zero or more long running operations triggered on the app registration.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The operation name.
    [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
    [State <String>]: The current state of the operation
    [Version <String>]: Version of the entity.
  [PlatformVersion <String>]: Operating System version
  [UserId <String>]: The user Id to who this app registration belongs.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy

INTENDEDPOLICIES <IMicrosoftGraphManagedAppPolicy[]>: Zero or more policies admin intended for the app as of now.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

OPERATIONS <IMicrosoftGraphManagedAppOperation[]>: Zero or more long running operations triggered on the app registration.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The operation name.
  [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
  [State <String>]: The current state of the operation
  [Version <String>]: Version of the entity.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmanagedappregistration
#>
function Update-MgDeviceAppManagementManagedAppRegistration {
[Alias('Update-MgDeviceAppMgtManagedAppRegistration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${AppIdentifier},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # App version
    ${ApplicationVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy[]]
    # Zero or more policys already applied on the registered app when it last synchronized with managment service.
    # To construct, see NOTES section for APPLIEDPOLICIES properties and create a hash table.
    ${AppliedPolicies},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Date and time of creation
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Host device name
    ${DeviceName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # App management SDK generated tag, which helps relate apps hosted on the same device.
    # Not guaranteed to relate apps in all conditions.
    ${DeviceTag},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Host device type
    ${DeviceType},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedAppFlaggedReason])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedAppFlaggedReason[]]
    # Zero or more reasons an app registration is flagged.
    # E.g.
    # app running on rooted device
    ${FlaggedReasons},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy[]]
    # Zero or more policies admin intended for the app as of now.
    # To construct, see NOTES section for INTENDEDPOLICIES properties and create a hash table.
    ${IntendedPolicies},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Date and time of last the app synced with management service.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # App management SDK version
    ${ManagementSdkVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation[]]
    # Zero or more long running operations triggered on the app registration.
    # To construct, see NOTES section for OPERATIONS properties and create a hash table.
    ${Operations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Operating System version
    ${PlatformVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The user Id to who this app registration belongs.
    ${UserId},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistration_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistration_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistration_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppRegistration_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property managedAppStatuses in deviceAppManagement
.Description
Update the navigation property managedAppStatuses in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppStatus>: Represents app protection and configuration status for the organization.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: Friendly name of the status report.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmanagedappstatus
#>
function Update-MgDeviceAppManagementManagedAppStatus {
[Alias('Update-MgDeviceAppMgtManagedAppStatus')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedAppStatus
    ${ManagedAppStatusId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus]
    # Represents app protection and configuration status for the organization.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Friendly name of the status report.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppStatus_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppStatus_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppStatus_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedAppStatus_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a iosVppEBookAssignment object.
.Description
Update the properties of a iosVppEBookAssignment object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedEBookAssignment>: Contains properties used to assign a eBook to a group.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [InstallIntent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmanagedebookassignment
#>
function Update-MgDeviceAppManagementManagedEBookAssignment {
[Alias('Update-MgDeviceAppMgtManagedEBookAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBookAssignment
    ${ManagedEBookAssignmentId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment]
    # Contains properties used to assign a eBook to a group.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.InstallIntent])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.InstallIntent]
    # Possible values for the install intent chosen by the admin.
    ${InstallIntent},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookAssignment_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookAssignment_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookAssignment_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookAssignment_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a deviceInstallState object.
.Description
Update the properties of a deviceInstallState object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceInstallState>: Contains properties for the installation state for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <InstallState?>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmanagedebookdevicestate
#>
function Update-MgDeviceAppManagementManagedEBookDeviceState {
[Alias('Update-MgDeviceAppMgtManagedEBookDeviceState')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceInstallState
    ${DeviceInstallStateId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState]
    # Contains properties for the installation state for a device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device Id.
    ${DeviceId},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device name.
    ${DeviceName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The error code for install failures.
    ${ErrorCode},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.InstallState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.InstallState]
    # Possible values for install state.
    ${InstallState},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last sync date and time.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Description.
    ${OSDescription},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Version.
    ${OSVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device User Name.
    ${UserName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookDeviceState_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookDeviceState_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookDeviceState_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookDeviceState_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a eBookInstallSummary object.
.Description
Update the properties of a eBookInstallSummary object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEBookInstallSummary
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEBookInstallSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphEBookInstallSummary>: Contains properties for the installation summary of a book for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [FailedDeviceCount <Int32?>]: Number of Devices that have failed to install this book.
  [FailedUserCount <Int32?>]: Number of Users that have 1 or more device that failed to install this book.
  [InstalledDeviceCount <Int32?>]: Number of Devices that have successfully installed this book.
  [InstalledUserCount <Int32?>]: Number of Users whose devices have all succeeded to install this book.
  [NotInstalledDeviceCount <Int32?>]: Number of Devices that does not have this book installed.
  [NotInstalledUserCount <Int32?>]: Number of Users that did not install this book.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmanagedebookinstallsummary
#>
function Update-MgDeviceAppManagementManagedEBookInstallSummary {
[Alias('Update-MgDeviceAppMgtManagedEBookInstallSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEBookInstallSummary])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEBookInstallSummary]
    # Contains properties for the installation summary of a book for a device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of Devices that have failed to install this book.
    ${FailedDeviceCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of Users that have 1 or more device that failed to install this book.
    ${FailedUserCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of Devices that have successfully installed this book.
    ${InstalledDeviceCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of Users whose devices have all succeeded to install this book.
    ${InstalledUserCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of Devices that does not have this book installed.
    ${NotInstalledDeviceCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of Users that did not install this book.
    ${NotInstalledUserCount},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookInstallSummary_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookInstallSummary_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookInstallSummary_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookInstallSummary_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property deviceStates in deviceAppManagement
.Description
Update the navigation property deviceStates in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceInstallState>: Contains properties for the installation state for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <InstallState?>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmanagedebookuserstatesummarydevicestate
#>
function Update-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState {
[Alias('Update-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceInstallState
    ${DeviceInstallStateId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState]
    # Contains properties for the installation state for a device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device Id.
    ${DeviceId},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device name.
    ${DeviceName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The error code for install failures.
    ${ErrorCode},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.InstallState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.InstallState]
    # Possible values for install state.
    ${InstallState},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last sync date and time.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Description.
    ${OSDescription},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Version.
    ${OSVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device User Name.
    ${UserName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a userInstallStateSummary object.
.Description
Update the properties of a userInstallStateSummary object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphUserInstallStateSummary>: Contains properties for the installation state summary for a user.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DeviceId <String>]: Device Id.
    [DeviceName <String>]: Device name.
    [ErrorCode <String>]: The error code for install failures.
    [InstallState <InstallState?>]: Possible values for install state.
    [LastSyncDateTime <DateTime?>]: Last sync date and time.
    [OSDescription <String>]: OS Description.
    [OSVersion <String>]: OS Version.
    [UserName <String>]: Device User Name.
  [FailedDeviceCount <Int32?>]: Failed Device Count.
  [InstalledDeviceCount <Int32?>]: Installed Device Count.
  [NotInstalledDeviceCount <Int32?>]: Not installed device count.
  [UserName <String>]: User name.

DEVICESTATES <IMicrosoftGraphDeviceInstallState[]>: The install state of the eBook.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <InstallState?>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmanagedebookuserstatesummary
#>
function Update-MgDeviceAppManagementManagedEBookUserStateSummary {
[Alias('Update-MgDeviceAppMgtManagedEBookUserStateSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary]
    # Contains properties for the installation state summary for a user.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState[]]
    # The install state of the eBook.
    # To construct, see NOTES section for DEVICESTATES properties and create a hash table.
    ${DeviceStates},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Failed Device Count.
    ${FailedDeviceCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Installed Device Count.
    ${InstalledDeviceCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Not installed device count.
    ${NotInstalledDeviceCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # User name.
    ${UserName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookUserStateSummary_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookUserStateSummary_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookUserStateSummary_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBookUserStateSummary_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a iosVppEBook object.
.Description
Update the properties of a iosVppEBook object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphManagedEBookAssignment[]>: The list of assignments for this eBook.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [InstallIntent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphManagedEBook>: An abstract class containing the base properties for Managed eBook.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Assignments <IMicrosoftGraphManagedEBookAssignment[]>]: The list of assignments for this eBook.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [InstallIntent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [CreatedDateTime <DateTime?>]: The date and time when the eBook file was created.
  [Description <String>]: Description.
  [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The list of installation states for this eBook.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DeviceId <String>]: Device Id.
    [DeviceName <String>]: Device name.
    [ErrorCode <String>]: The error code for install failures.
    [InstallState <InstallState?>]: Possible values for install state.
    [LastSyncDateTime <DateTime?>]: Last sync date and time.
    [OSDescription <String>]: OS Description.
    [OSVersion <String>]: OS Version.
    [UserName <String>]: Device User Name.
  [DisplayName <String>]: Name of the eBook.
  [InformationUrl <String>]: The more information Url.
  [InstallSummary <IMicrosoftGraphEBookInstallSummary>]: Contains properties for the installation summary of a book for a device.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [FailedDeviceCount <Int32?>]: Number of Devices that have failed to install this book.
    [FailedUserCount <Int32?>]: Number of Users that have 1 or more device that failed to install this book.
    [InstalledDeviceCount <Int32?>]: Number of Devices that have successfully installed this book.
    [InstalledUserCount <Int32?>]: Number of Users whose devices have all succeeded to install this book.
    [NotInstalledDeviceCount <Int32?>]: Number of Devices that does not have this book installed.
    [NotInstalledUserCount <Int32?>]: Number of Users that did not install this book.
  [LargeCover <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Type <String>]: Indicates the content mime type.
    [Value <Byte[]>]: The byte array that contains the actual content.
  [LastModifiedDateTime <DateTime?>]: The date and time when the eBook was last modified.
  [PrivacyInformationUrl <String>]: The privacy statement Url.
  [PublishedDateTime <DateTime?>]: The date and time when the eBook was published.
  [Publisher <String>]: Publisher.
  [UserStateSummary <IMicrosoftGraphUserInstallStateSummary[]>]: The list of installation states for this eBook.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
    [FailedDeviceCount <Int32?>]: Failed Device Count.
    [InstalledDeviceCount <Int32?>]: Installed Device Count.
    [NotInstalledDeviceCount <Int32?>]: Not installed device count.
    [UserName <String>]: User name.

DEVICESTATES <IMicrosoftGraphDeviceInstallState[]>: The list of installation states for this eBook.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <InstallState?>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy

INSTALLSUMMARY <IMicrosoftGraphEBookInstallSummary>: Contains properties for the installation summary of a book for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [FailedDeviceCount <Int32?>]: Number of Devices that have failed to install this book.
  [FailedUserCount <Int32?>]: Number of Users that have 1 or more device that failed to install this book.
  [InstalledDeviceCount <Int32?>]: Number of Devices that have successfully installed this book.
  [InstalledUserCount <Int32?>]: Number of Users whose devices have all succeeded to install this book.
  [NotInstalledDeviceCount <Int32?>]: Number of Devices that does not have this book installed.
  [NotInstalledUserCount <Int32?>]: Number of Users that did not install this book.

LARGECOVER <IMicrosoftGraphMimeContent>: Contains properties for a generic mime content.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Type <String>]: Indicates the content mime type.
  [Value <Byte[]>]: The byte array that contains the actual content.

USERSTATESUMMARY <IMicrosoftGraphUserInstallStateSummary[]>: The list of installation states for this eBook.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DeviceId <String>]: Device Id.
    [DeviceName <String>]: Device name.
    [ErrorCode <String>]: The error code for install failures.
    [InstallState <InstallState?>]: Possible values for install state.
    [LastSyncDateTime <DateTime?>]: Last sync date and time.
    [OSDescription <String>]: OS Description.
    [OSVersion <String>]: OS Version.
    [UserName <String>]: Device User Name.
  [FailedDeviceCount <Int32?>]: Failed Device Count.
  [InstalledDeviceCount <Int32?>]: Installed Device Count.
  [NotInstalledDeviceCount <Int32?>]: Not installed device count.
  [UserName <String>]: User name.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmanagedebook
#>
function Update-MgDeviceAppManagementManagedEBook {
[Alias('Update-MgDeviceAppMgtManagedEBook')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook]
    # An abstract class containing the base properties for Managed eBook.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment[]]
    # The list of assignments for this eBook.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time when the eBook file was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState[]]
    # The list of installation states for this eBook.
    # To construct, see NOTES section for DEVICESTATES properties and create a hash table.
    ${DeviceStates},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Name of the eBook.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The more information Url.
    ${InformationUrl},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEBookInstallSummary]
    # Contains properties for the installation summary of a book for a device.
    # To construct, see NOTES section for INSTALLSUMMARY properties and create a hash table.
    ${InstallSummary},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMimeContent]
    # Contains properties for a generic mime content.
    # To construct, see NOTES section for LARGECOVER properties and create a hash table.
    ${LargeCover},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time when the eBook was last modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The privacy statement Url.
    ${PrivacyInformationUrl},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time when the eBook was published.
    ${PublishedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Publisher.
    ${Publisher},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary[]]
    # The list of installation states for this eBook.
    # To construct, see NOTES section for USERSTATESUMMARY properties and create a hash table.
    ${UserStateSummary},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBook_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBook_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBook_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementManagedEBook_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property assignments in deviceAppManagement
.Description
Update the navigation property assignments in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppPolicyAssignment>: The type for deployment of groups or apps.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyassignment
#>
function Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment {
[Alias('Update-MgDeviceAppMgtMdmWindowInformationProtectionPolicyAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment]
    # The type for deployment of groups or apps.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyAssignment_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property exemptAppLockerFiles in deviceAppManagement
.Description
Update the navigation property exemptAppLockerFiles in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphWindowsInformationProtectionAppLockerFile>: Windows Information Protection AppLocker File
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyexemptapplockerfile
#>
function Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile {
[Alias('Update-MgDeviceAppMgtMdmWindowInformationProtectionPolicyExemptAppLockerFile')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionAppLockerFile
    ${WindowsInformationProtectionAppLockerFileId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile]
    # Windows Information Protection AppLocker File
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The friendly name
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # SHA256 hash of the file
    ${FileHash},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Input File for File (File as a byte array)
    ${FileInputFile},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyExemptAppLockerFile_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property protectedAppLockerFiles in deviceAppManagement
.Description
Update the navigation property protectedAppLockerFiles in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphWindowsInformationProtectionAppLockerFile>: Windows Information Protection AppLocker File
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmdmwindowsinformationprotectionpolicyprotectedapplockerfile
#>
function Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile {
[Alias('Update-MgDeviceAppMgtMdmWindowInformationProtectionPolicyProtectedAppLockerFile')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionAppLockerFile
    ${WindowsInformationProtectionAppLockerFileId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile]
    # Windows Information Protection AppLocker File
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The friendly name
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # SHA256 hash of the file
    ${FileHash},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Input File for File (File as a byte array)
    ${FileInputFile},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicyProtectedAppLockerFile_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a mdmWindowsInformationProtectionPolicy object.
.Description
Update the properties of a mdmWindowsInformationProtectionPolicy object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
System.Collections.Hashtable
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>: Navigation property to list of security groups targeted for policy.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

DATARECOVERYCERTIFICATE <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>: Windows Information Protection DataRecoveryCertificate
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Certificate <Byte[]>]: Data recovery Certificate
  [Description <String>]: Data recovery Certificate description
  [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
  [SubjectName <String>]: Data recovery Certificate subject name

ENTERPRISEINTERNALPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEIPRANGES <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges

ENTERPRISENETWORKDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROTECTEDDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of enterprise domains to be protected
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROXIEDDOMAINS <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
  [DisplayName <String>]: Display name
  [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
    [IPAddressOrFqdn <String>]: The IP address or FQDN
    [Proxy <String>]: Proxy IP or FQDN

ENTERPRISEPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

EXEMPTAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input exempt apps through xml files
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

EXEMPTAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy

NEUTRALDOMAINRESOURCES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of domain names that can used for work or personal resource
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

PROTECTEDAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input protected apps through xml files
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

PROTECTEDAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

SMBAUTOENCRYPTEDFILEEXTENSIONS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmdmwindowsinformationprotectionpolicy
#>
function Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy {
[Alias('Update-MgDeviceAppMgtMdmWindowInformationProtectionPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(Required, PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy]))]
    [System.Collections.Hashtable]
    # Policy for Windows information protection with MDM
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment[]]
    # Navigation property to list of security groups targeted for policy.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether to allow Azure RMS encryption for WIP
    ${AzureRightsManagementServicesAllowed},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate]
    # Windows Information Protection DataRecoveryCertificate
    # To construct, see NOTES section for DATARECOVERYCERTIFICATE properties and create a hash table.
    ${DataRecoveryCertificate},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionEnforcementLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionEnforcementLevel]
    # Possible values for WIP Protection enforcement levels
    ${EnforcementLevel},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Primary enterprise domain
    ${EnterpriseDomain},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]]
    # Sets the enterprise IP ranges that define the computers in the enterprise network.
    # Data that comes from those computers will be considered part of the enterprise and protected.
    # These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISEIPRANGES properties and create a hash table.
    ${EnterpriseIPRanges},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets.
    # Default is false
    ${EnterpriseIPRangesAreAuthoritative},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the comma-separated list of internal proxy servers.
    # For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'.
    # These proxies have been configured by the admin to connect to specific resources on the Internet.
    # They are considered to be enterprise network locations.
    # The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    # To construct, see NOTES section for ENTERPRISEINTERNALPROXYSERVERS properties and create a hash table.
    ${EnterpriseInternalProxyServers},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the list of domains that comprise the boundaries of the enterprise.
    # Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISENETWORKDOMAINNAMES properties and create a hash table.
    ${EnterpriseNetworkDomainNames},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of enterprise domains to be protected
    # To construct, see NOTES section for ENTERPRISEPROTECTEDDOMAINNAMES properties and create a hash table.
    ${EnterpriseProtectedDomainNames},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]]
    # Contains a list of Enterprise resource domains hosted in the cloud that need to be protected.
    # Connections to these resources are considered enterprise data.
    # If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80).
    # A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    # To construct, see NOTES section for ENTERPRISEPROXIEDDOMAINS properties and create a hash table.
    ${EnterpriseProxiedDomains},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is a list of proxy servers.
    # Any server not on this list is considered non-enterprise
    # To construct, see NOTES section for ENTERPRISEPROXYSERVERS properties and create a hash table.
    ${EnterpriseProxyServers},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies.
    # Default is false
    ${EnterpriseProxyServersAreAuthoritative},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input exempt apps through xml files
    # To construct, see NOTES section for EXEMPTAPPLOCKERFILES properties and create a hash table.
    ${ExemptAppLockerFiles},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Exempt applications can also access enterprise data, but the data handled by those applications are not protected.
    # This is because some critical enterprise applications may have compatibility problems with encrypted data.
    # To construct, see NOTES section for EXEMPTAPPS properties and create a hash table.
    ${ExemptApps},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu.
    # Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
    ${IconsVisible},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This switch is for the Windows Search Indexer, to allow or disallow indexing of items
    ${IndexingEncryptedStoresOrItemsBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of domain names that can used for work or personal resource
    # To construct, see NOTES section for NEUTRALDOMAINRESOURCES properties and create a hash table.
    ${NeutralDomainResources},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input protected apps through xml files
    # To construct, see NOTES section for PROTECTEDAPPLOCKERFILES properties and create a hash table.
    ${ProtectedAppLockerFiles},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Protected applications can access enterprise data and the data handled by those applications are protected with encryption
    # To construct, see NOTES section for PROTECTEDAPPS properties and create a hash table.
    ${ProtectedApps},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
    ${ProtectionUnderLockConfigRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This policy controls whether to revoke the WIP keys when a device unenrolls from the management service.
    # If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment.
    # If the keys are not revoked, there will be no revoked file cleanup subsequently.
    ${RevokeOnUnenrollDisabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # TemplateID GUID to use for RMS encryption.
    # The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
    ${RightsManagementServicesTemplateId},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
    # To construct, see NOTES section for SMBAUTOENCRYPTEDFILEEXTENSIONS properties and create a hash table.
    ${SmbAutoEncryptedFileExtensions},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMdmWindowsInformationProtectionPolicy_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a mobileAppAssignment object.
.Description
Update the properties of a mobileAppAssignment object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphMobileAppAssignment>: A class containing the properties used for Group Assignment of a Mobile App.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Intent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
  [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmobileappassignment
#>
function Update-MgDeviceAppManagementMobileAppAssignment {
[Alias('Update-MgDeviceAppMgtMobileAppAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileAppAssignment
    ${MobileAppAssignmentId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment]
    # A class containing the properties used for Group Assignment of a Mobile App.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.InstallIntent])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.InstallIntent]
    # Possible values for the install intent chosen by the admin.
    ${Intent},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignmentSettings]))]
    [System.Collections.Hashtable]
    # Abstract class to contain properties used to assign a mobile app to a group.
    ${Settings},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppAssignment_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppAssignment_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppAssignment_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppAssignment_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a mobileAppCategory object.
.Description
Update the properties of a mobileAppCategory object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphMobileAppCategory>: Contains properties for a single Intune app category.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The name of the app category.
  [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmobileappcategory
#>
function Update-MgDeviceAppManagementMobileAppCategory {
[Alias('Update-MgDeviceAppMgtMobileAppCategory')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileAppCategory
    ${MobileAppCategoryId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory]
    # Contains properties for a single Intune app category.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The name of the app category.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the mobileAppCategory was last modified.
    ${LastModifiedDateTime},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppCategory_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppCategory_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppCategory_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppCategory_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a managedDeviceMobileAppConfigurationAssignment object.
.Description
Update the properties of a managedDeviceMobileAppConfigurationAssignment object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment>: Contains the properties used to assign an MDM app configuration to a group.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmobileappconfigurationassignment
#>
function Update-MgDeviceAppManagementMobileAppConfigurationAssignment {
[Alias('Update-MgDeviceAppMgtMobileAppConfigurationAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfigurationAssignment
    ${ManagedDeviceMobileAppConfigurationAssignmentId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment]
    # Contains the properties used to assign an MDM app configuration to a group.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationAssignment_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationAssignment_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationAssignment_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationAssignment_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a managedDeviceMobileAppConfigurationDeviceSummary object.
.Description
Update the properties of a managedDeviceMobileAppConfigurationDeviceSummary object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary>: Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationVersion <Int32?>]: Version of the policy for that overview
  [ErrorCount <Int32?>]: Number of error devices
  [FailedCount <Int32?>]: Number of failed devices
  [LastUpdateDateTime <DateTime?>]: Last update time
  [NotApplicableCount <Int32?>]: Number of not applicable devices
  [PendingCount <Int32?>]: Number of pending devices
  [SuccessCount <Int32?>]: Number of succeeded devices

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmobileappconfigurationdevicestatussummary
#>
function Update-MgDeviceAppManagementMobileAppConfigurationDeviceStatusSummary {
[Alias('Update-MgDeviceAppMgtMobileAppConfigurationDeviceStatusSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Version of the policy for that overview
    ${ConfigurationVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of error devices
    ${ErrorCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of failed devices
    ${FailedCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last update time
    ${LastUpdateDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of not applicable devices
    ${NotApplicableCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of pending devices
    ${PendingCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of succeeded devices
    ${SuccessCount},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationDeviceStatusSummary_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationDeviceStatusSummary_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationDeviceStatusSummary_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationDeviceStatusSummary_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a managedDeviceMobileAppConfigurationDeviceStatus object.
.Description
Update the properties of a managedDeviceMobileAppConfigurationDeviceStatus object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus>: Contains properties, inherited properties and actions for an MDM mobile app configuration status for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
  [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
  [DeviceModel <String>]: The device model that is being reported
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserName <String>]: The User Name that is being reported
  [UserPrincipalName <String>]: UserPrincipalName.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmobileappconfigurationdevicestatus
#>
function Update-MgDeviceAppManagementMobileAppConfigurationDeviceStatus {
[Alias('Update-MgDeviceAppMgtMobileAppConfigurationDeviceStatus')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
    ${ManagedDeviceMobileAppConfigurationDeviceStatusId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration status for a device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The DateTime when device compliance grace period expires
    ${ComplianceGracePeriodExpirationDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device name of the DevicePolicyStatus.
    ${DeviceDisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The device model that is being reported
    ${DeviceModel},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last modified date time of the policy report.
    ${LastReportedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${Status},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The User Name that is being reported
    ${UserName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # UserPrincipalName.
    ${UserPrincipalName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationDeviceStatus_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationDeviceStatus_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationDeviceStatus_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationDeviceStatus_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a managedDeviceMobileAppConfigurationUserSummary object.
.Description
Update the properties of a managedDeviceMobileAppConfigurationUserSummary object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary>: Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationVersion <Int32?>]: Version of the policy for that overview
  [ErrorCount <Int32?>]: Number of error Users
  [FailedCount <Int32?>]: Number of failed Users
  [LastUpdateDateTime <DateTime?>]: Last update time
  [NotApplicableCount <Int32?>]: Number of not applicable users
  [PendingCount <Int32?>]: Number of pending Users
  [SuccessCount <Int32?>]: Number of succeeded Users

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmobileappconfigurationuserstatussummary
#>
function Update-MgDeviceAppManagementMobileAppConfigurationUserStatusSummary {
[Alias('Update-MgDeviceAppMgtMobileAppConfigurationUserStatusSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Version of the policy for that overview
    ${ConfigurationVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of error Users
    ${ErrorCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of failed Users
    ${FailedCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last update time
    ${LastUpdateDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of not applicable users
    ${NotApplicableCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of pending Users
    ${PendingCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of succeeded Users
    ${SuccessCount},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationUserStatusSummary_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationUserStatusSummary_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationUserStatusSummary_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationUserStatusSummary_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a managedDeviceMobileAppConfigurationUserStatus object.
.Description
Update the properties of a managedDeviceMobileAppConfigurationUserStatus object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus>: Contains properties, inherited properties and actions for an MDM mobile app configuration status for a user.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DevicesCount <Int32?>]: Devices count for that user.
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserDisplayName <String>]: User name of the DevicePolicyStatus.
  [UserPrincipalName <String>]: UserPrincipalName.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmobileappconfigurationuserstatus
#>
function Update-MgDeviceAppManagementMobileAppConfigurationUserStatus {
[Alias('Update-MgDeviceAppMgtMobileAppConfigurationUserStatus')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfigurationUserStatus
    ${ManagedDeviceMobileAppConfigurationUserStatusId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration status for a user.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Devices count for that user.
    ${DevicesCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last modified date time of the policy report.
    ${LastReportedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${Status},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # User name of the DevicePolicyStatus.
    ${UserDisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # UserPrincipalName.
    ${UserPrincipalName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationUserStatus_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationUserStatus_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationUserStatus_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfigurationUserStatus_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a iosMobileAppConfiguration object.
.Description
Update the properties of a iosMobileAppConfiguration object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment[]>: The list of group assignemenets for app configration.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfiguration>: An abstract class for Mobile app configuration for enrolled devices.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Assignments <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment[]>]: The list of group assignemenets for app configration.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [CreatedDateTime <DateTime?>]: DateTime the object was created.
  [Description <String>]: Admin provided description of the Device Configuration.
  [DeviceStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary>]: Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationVersion <Int32?>]: Version of the policy for that overview
    [ErrorCount <Int32?>]: Number of error devices
    [FailedCount <Int32?>]: Number of failed devices
    [LastUpdateDateTime <DateTime?>]: Last update time
    [NotApplicableCount <Int32?>]: Number of not applicable devices
    [PendingCount <Int32?>]: Number of pending devices
    [SuccessCount <Int32?>]: Number of succeeded devices
  [DeviceStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus[]>]: List of ManagedDeviceMobileAppConfigurationDeviceStatus.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
    [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
    [DeviceModel <String>]: The device model that is being reported
    [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
    [Status <String>]: complianceStatus
    [UserName <String>]: The User Name that is being reported
    [UserPrincipalName <String>]: UserPrincipalName.
  [DisplayName <String>]: Admin provided name of the device configuration.
  [LastModifiedDateTime <DateTime?>]: DateTime the object was last modified.
  [TargetedMobileApps <String[]>]: the associated app.
  [UserStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary>]: Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationVersion <Int32?>]: Version of the policy for that overview
    [ErrorCount <Int32?>]: Number of error Users
    [FailedCount <Int32?>]: Number of failed Users
    [LastUpdateDateTime <DateTime?>]: Last update time
    [NotApplicableCount <Int32?>]: Number of not applicable users
    [PendingCount <Int32?>]: Number of pending Users
    [SuccessCount <Int32?>]: Number of succeeded Users
  [UserStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]>]: List of ManagedDeviceMobileAppConfigurationUserStatus.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DevicesCount <Int32?>]: Devices count for that user.
    [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
    [Status <String>]: complianceStatus
    [UserDisplayName <String>]: User name of the DevicePolicyStatus.
    [UserPrincipalName <String>]: UserPrincipalName.
  [Version <Int32?>]: Version of the device configuration.

DEVICESTATUSES <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus[]>: List of ManagedDeviceMobileAppConfigurationDeviceStatus.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
  [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
  [DeviceModel <String>]: The device model that is being reported
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserName <String>]: The User Name that is being reported
  [UserPrincipalName <String>]: UserPrincipalName.

DEVICESTATUSSUMMARY <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary>: Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationVersion <Int32?>]: Version of the policy for that overview
  [ErrorCount <Int32?>]: Number of error devices
  [FailedCount <Int32?>]: Number of failed devices
  [LastUpdateDateTime <DateTime?>]: Last update time
  [NotApplicableCount <Int32?>]: Number of not applicable devices
  [PendingCount <Int32?>]: Number of pending devices
  [SuccessCount <Int32?>]: Number of succeeded devices

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy

USERSTATUSES <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]>: List of ManagedDeviceMobileAppConfigurationUserStatus.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DevicesCount <Int32?>]: Devices count for that user.
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserDisplayName <String>]: User name of the DevicePolicyStatus.
  [UserPrincipalName <String>]: UserPrincipalName.

USERSTATUSSUMMARY <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary>: Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationVersion <Int32?>]: Version of the policy for that overview
  [ErrorCount <Int32?>]: Number of error Users
  [FailedCount <Int32?>]: Number of failed Users
  [LastUpdateDateTime <DateTime?>]: Last update time
  [NotApplicableCount <Int32?>]: Number of not applicable users
  [PendingCount <Int32?>]: Number of pending Users
  [SuccessCount <Int32?>]: Number of succeeded Users
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmobileappconfiguration
#>
function Update-MgDeviceAppManagementMobileAppConfiguration {
[Alias('Update-MgDeviceAppMgtMobileAppConfiguration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration]
    # An abstract class for Mobile app configuration for enrolled devices.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment[]]
    # The list of group assignemenets for app configration.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # DateTime the object was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Admin provided description of the Device Configuration.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
    # To construct, see NOTES section for DEVICESTATUSSUMMARY properties and create a hash table.
    ${DeviceStatusSummary},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus[]]
    # List of ManagedDeviceMobileAppConfigurationDeviceStatus.
    # To construct, see NOTES section for DEVICESTATUSES properties and create a hash table.
    ${DeviceStatuses},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Admin provided name of the device configuration.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # DateTime the object was last modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String[]]
    # the associated app.
    ${TargetedMobileApps},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
    # To construct, see NOTES section for USERSTATUSSUMMARY properties and create a hash table.
    ${UserStatusSummary},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]]
    # List of ManagedDeviceMobileAppConfigurationUserStatus.
    # To construct, see NOTES section for USERSTATUSES properties and create a hash table.
    ${UserStatuses},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Version of the device configuration.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfiguration_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfiguration_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfiguration_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileAppConfiguration_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a windowsWebApp object.
.Description
Update the properties of a windowsWebApp object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphMobileAppAssignment[]>: The list of group assignments for this mobile app.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Intent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
  [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphMobileApp>: An abstract class containing the base properties for Intune mobile apps. Note: Listing mobile apps with `$expand=assignments` has been deprecated. Instead get the list of apps without the `$expand` query on `assignments`. Then, perform the expansion on individual applications.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Assignments <IMicrosoftGraphMobileAppAssignment[]>]: The list of group assignments for this mobile app.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Intent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
    [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [Categories <IMicrosoftGraphMobileAppCategory[]>]: The list of categories for this app.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The name of the app category.
    [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.
  [CreatedDateTime <DateTime?>]: The date and time the app was created.
  [Description <String>]: The description of the app.
  [Developer <String>]: The developer of the app.
  [DisplayName <String>]: The admin provided or imported title of the app.
  [InformationUrl <String>]: The more information Url.
  [IsFeatured <Boolean?>]: The value indicating whether the app is marked as featured by the admin.
  [LargeIcon <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Type <String>]: Indicates the content mime type.
    [Value <Byte[]>]: The byte array that contains the actual content.
  [LastModifiedDateTime <DateTime?>]: The date and time the app was last modified.
  [Notes <String>]: Notes for the app.
  [Owner <String>]: The owner of the app.
  [PrivacyInformationUrl <String>]: The privacy statement Url.
  [Publisher <String>]: The publisher of the app.
  [PublishingState <MobileAppPublishingState?>]: Indicates the publishing state of an app.

CATEGORIES <IMicrosoftGraphMobileAppCategory[]>: The list of categories for this app.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The name of the app category.
  [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy

LARGEICON <IMicrosoftGraphMimeContent>: Contains properties for a generic mime content.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Type <String>]: Indicates the content mime type.
  [Value <Byte[]>]: The byte array that contains the actual content.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementmobileapp
#>
function Update-MgDeviceAppManagementMobileApp {
[Alias('Update-MgDeviceAppMgtMobileApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp]
    # An abstract class containing the base properties for Intune mobile apps.
    # Note: Listing mobile apps with `$expand=assignments` has been deprecated.
    # Instead get the list of apps without the `$expand` query on `assignments`.
    # Then, perform the expansion on individual applications.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment[]]
    # The list of group assignments for this mobile app.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory[]]
    # The list of categories for this app.
    # To construct, see NOTES section for CATEGORIES properties and create a hash table.
    ${Categories},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the app was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The description of the app.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The developer of the app.
    ${Developer},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The admin provided or imported title of the app.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The more information Url.
    ${InformationUrl},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # The value indicating whether the app is marked as featured by the admin.
    ${IsFeatured},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMimeContent]
    # Contains properties for a generic mime content.
    # To construct, see NOTES section for LARGEICON properties and create a hash table.
    ${LargeIcon},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the app was last modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Notes for the app.
    ${Notes},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The owner of the app.
    ${Owner},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The privacy statement Url.
    ${PrivacyInformationUrl},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The publisher of the app.
    ${Publisher},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.MobileAppPublishingState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.MobileAppPublishingState]
    # Indicates the publishing state of an app.
    ${PublishingState},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileApp_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileApp_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileApp_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementMobileApp_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property apps in deviceAppManagement
.Description
Update the navigation property apps in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementtargetedmanagedappconfigurationapp
#>
function Update-MgDeviceAppManagementTargetedManagedAppConfigurationApp {
[Alias('Update-MgDeviceAppMgtTargetedManagedAppConfigurationApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfigurationApp_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfigurationApp_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfigurationApp_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfigurationApp_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property assignments in deviceAppManagement
.Description
Update the navigation property assignments in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppPolicyAssignment>: The type for deployment of groups or apps.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementtargetedmanagedappconfigurationassignment
#>
function Update-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment {
[Alias('Update-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment]
    # The type for deployment of groups or apps.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property deploymentSummary in deviceAppManagement
.Description
Update the navigation property deploymentSummary in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

CONFIGURATIONDEPLOYMENTSUMMARYPERAPP <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>: Not yet documented
  [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementtargetedmanagedappconfigurationdeploymentsummary
#>
function Update-MgDeviceAppManagementTargetedManagedAppConfigurationDeploymentSummary {
[Alias('Update-MgDeviceAppMgtTargetedManagedAppConfigurationDeploymentSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Not yet documented
    ${ConfigurationDeployedUserCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]]
    # Not yet documented
    # To construct, see NOTES section for CONFIGURATIONDEPLOYMENTSUMMARYPERAPP properties and create a hash table.
    ${ConfigurationDeploymentSummaryPerApp},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Not yet documented
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Not yet documented
    ${LastRefreshTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfigurationDeploymentSummary_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfigurationDeploymentSummary_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfigurationDeploymentSummary_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfigurationDeploymentSummary_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a targetedManagedAppConfiguration object.
.Description
Update the properties of a targetedManagedAppConfiguration object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppConfiguration>: Configuration used to deliver a set of custom settings as-is to all users in the targeted security group
  [(Any) <Object>]: This indicates any property can be added to this object.
  [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
    [Name <String>]: Name for this key-value pair
    [Value <String>]: Value for this key-value pair
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.

CUSTOMSETTINGS <IMicrosoftGraphKeyValuePair[]>: A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
  [Name <String>]: Name for this key-value pair
  [Value <String>]: Value for this key-value pair

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementtargetedmanagedappconfiguration
#>
function Update-MgDeviceAppManagementTargetedManagedAppConfiguration {
[Alias('Update-MgDeviceAppMgtTargetedManagedAppConfiguration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration]
    # Configuration used to deliver a set of custom settings as-is to all users in the targeted security group
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment[]]
    # Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphKeyValuePair[]]
    # A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
    # To construct, see NOTES section for CUSTOMSETTINGS properties and create a hash table.
    ${CustomSettings},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfiguration_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfiguration_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfiguration_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementTargetedManagedAppConfiguration_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a vppToken object.
.Description
Update the properties of a vppToken object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphVppToken>: You purchase multiple licenses for iOS apps through the Apple Volume Purchase Program for Business or Education. This involves setting up an Apple VPP account from the Apple website and uploading the Apple VPP Business or Education token to Intune. You can then synchronize your volume purchase information with Intune and track your volume-purchased app use. You can upload multiple Apple VPP Business or Education tokens.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AppleId <String>]: The apple Id associated with the given Apple Volume Purchase Program Token.
  [AutomaticallyUpdateApps <Boolean?>]: Whether or not apps for the VPP token will be automatically updated.
  [CountryOrRegion <String>]: Whether or not apps for the VPP token will be automatically updated.
  [ExpirationDateTime <DateTime?>]: The expiration date time of the Apple Volume Purchase Program Token.
  [LastModifiedDateTime <DateTime?>]: Last modification date time associated with the Apple Volume Purchase Program Token.
  [LastSyncDateTime <DateTime?>]: The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.
  [LastSyncStatus <VppTokenSyncStatus?>]: Possible sync statuses associated with an Apple Volume Purchase Program token.
  [OrganizationName <String>]: The organization associated with the Apple Volume Purchase Program Token
  [State <VppTokenState?>]: Possible states associated with an Apple Volume Purchase Program token.
  [Token <String>]: The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.
  [VppTokenAccountType <VppTokenAccountType?>]: Possible types of an Apple Volume Purchase Program token.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementvpptoken
#>
function Update-MgDeviceAppManagementVppToken {
[Alias('Update-MgDeviceAppMgtVppToken')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of vppToken
    ${VppTokenId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken]
    # You purchase multiple licenses for iOS apps through the Apple Volume Purchase Program for Business or Education.
    # This involves setting up an Apple VPP account from the Apple website and uploading the Apple VPP Business or Education token to Intune.
    # You can then synchronize your volume purchase information with Intune and track your volume-purchased app use.
    # You can upload multiple Apple VPP Business or Education tokens.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The apple Id associated with the given Apple Volume Purchase Program Token.
    ${AppleId},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether or not apps for the VPP token will be automatically updated.
    ${AutomaticallyUpdateApps},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Whether or not apps for the VPP token will be automatically updated.
    ${CountryOrRegion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The expiration date time of the Apple Volume Purchase Program Token.
    ${ExpirationDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last modification date time associated with the Apple Volume Purchase Program Token.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.VppTokenSyncStatus])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.VppTokenSyncStatus]
    # Possible sync statuses associated with an Apple Volume Purchase Program token.
    ${LastSyncStatus},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The organization associated with the Apple Volume Purchase Program Token
    ${OrganizationName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.VppTokenState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.VppTokenState]
    # Possible states associated with an Apple Volume Purchase Program token.
    ${State},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.
    ${Token},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.VppTokenAccountType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.VppTokenAccountType]
    # Possible types of an Apple Volume Purchase Program token.
    ${VppTokenAccountType},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementVppToken_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementVppToken_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementVppToken_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementVppToken_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property assignments in deviceAppManagement
.Description
Update the navigation property assignments in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppPolicyAssignment>: The type for deployment of groups or apps.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementwindowsinformationprotectionpolicyassignment
#>
function Update-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment {
[Alias('Update-MgDeviceAppMgtWindowInformationProtectionPolicyAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment]
    # The type for deployment of groups or apps.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicyAssignment_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property exemptAppLockerFiles in deviceAppManagement
.Description
Update the navigation property exemptAppLockerFiles in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphWindowsInformationProtectionAppLockerFile>: Windows Information Protection AppLocker File
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementwindowsinformationprotectionpolicyexemptapplockerfile
#>
function Update-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile {
[Alias('Update-MgDeviceAppMgtWindowInformationProtectionPolicyExemptAppLockerFile')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionAppLockerFile
    ${WindowsInformationProtectionAppLockerFileId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile]
    # Windows Information Protection AppLocker File
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The friendly name
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # SHA256 hash of the file
    ${FileHash},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Input File for File (File as a byte array)
    ${FileInputFile},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicyExemptAppLockerFile_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property protectedAppLockerFiles in deviceAppManagement
.Description
Update the navigation property protectedAppLockerFiles in deviceAppManagement
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphWindowsInformationProtectionAppLockerFile>: Windows Information Protection AppLocker File
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementwindowsinformationprotectionpolicyprotectedapplockerfile
#>
function Update-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile {
[Alias('Update-MgDeviceAppMgtWindowInformationProtectionPolicyProtectedAppLockerFile')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionAppLockerFile
    ${WindowsInformationProtectionAppLockerFileId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile]
    # Windows Information Protection AppLocker File
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The friendly name
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # SHA256 hash of the file
    ${FileHash},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Input File for File (File as a byte array)
    ${FileInputFile},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicyProtectedAppLockerFile_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a windowsInformationProtectionPolicy object.
.Description
Update the properties of a windowsInformationProtectionPolicy object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>: Navigation property to list of security groups targeted for policy.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphWindowsInformationProtectionPolicy>: Policy for Windows information protection without MDM
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of security groups targeted for policy.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [AzureRightsManagementServicesAllowed <Boolean?>]: Specifies whether to allow Azure RMS encryption for WIP
  [DataRecoveryCertificate <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>]: Windows Information Protection DataRecoveryCertificate
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Certificate <Byte[]>]: Data recovery Certificate
    [Description <String>]: Data recovery Certificate description
    [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
    [SubjectName <String>]: Data recovery Certificate subject name
  [EnforcementLevel <WindowsInformationProtectionEnforcementLevel?>]: Possible values for WIP Protection enforcement levels
  [EnterpriseDomain <String>]: Primary enterprise domain
  [EnterpriseIPRanges <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>]: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
    [DisplayName <String>]: Display name
    [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges
  [EnterpriseIPRangesAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
  [EnterpriseInternalProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    [DisplayName <String>]: Display name
    [Resources <String[]>]: Collection of resources
  [EnterpriseNetworkDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [EnterpriseProtectedDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of enterprise domains to be protected
  [EnterpriseProxiedDomains <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>]: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    [DisplayName <String>]: Display name
    [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
      [IPAddressOrFqdn <String>]: The IP address or FQDN
      [Proxy <String>]: Proxy IP or FQDN
  [EnterpriseProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [EnterpriseProxyServersAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
  [ExemptAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input exempt apps through xml files
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The friendly name
    [File <Byte[]>]: File as a byte array
    [FileHash <String>]: SHA256 hash of the file
    [Version <String>]: Version of the entity.
  [ExemptApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
    [Denied <Boolean?>]: If true, app is denied protection or exemption.
    [Description <String>]: The app's description.
    [DisplayName <String>]: App display name.
    [ProductName <String>]: The product name.
    [PublisherName <String>]: The publisher name
  [IconsVisible <Boolean?>]: Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
  [IndexingEncryptedStoresOrItemsBlocked <Boolean?>]: This switch is for the Windows Search Indexer, to allow or disallow indexing of items
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [NeutralDomainResources <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of domain names that can used for work or personal resource
  [ProtectedAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input protected apps through xml files
  [ProtectedApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [ProtectionUnderLockConfigRequired <Boolean?>]: Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
  [RevokeOnUnenrollDisabled <Boolean?>]: This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
  [RightsManagementServicesTemplateId <String>]: TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
  [SmbAutoEncryptedFileExtensions <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DaysWithoutContactBeforeUnenroll <Int32?>]: Offline interval before app data is wiped (days)
  [MdmEnrollmentUrl <String>]: Enrollment url for the MDM
  [MinutesOfInactivityBeforeDeviceLock <Int32?>]: Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.   Range is an integer X where 0 <= X <= 999.
  [NumberOfPastPinsRemembered <Int32?>]: Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused. The largest number you can configure for this policy setting is 50. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then storage of previous PINs is not required. This node was added in Windows 10, version 1511. Default is 0.
  [PasswordMaximumAttemptCount <Int32?>]: The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality. Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.
  [PinExpirationDays <Int32?>]: Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it. The largest number you can configure for this policy setting is 730. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then the user's PIN will never expire. This node was added in Windows 10, version 1511. Default is 0.
  [PinLowercaseLetters <WindowsInformationProtectionPinCharacterRequirements?>]: Pin Character Requirements
  [PinMinimumLength <Int32?>]: Integer value that sets the minimum number of characters required for the PIN. Default value is 4. The lowest number you can configure for this policy setting is 4. The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.
  [PinSpecialCharacters <WindowsInformationProtectionPinCharacterRequirements?>]: Pin Character Requirements
  [PinUppercaseLetters <WindowsInformationProtectionPinCharacterRequirements?>]: Pin Character Requirements
  [RevokeOnMdmHandoffDisabled <Boolean?>]: New property in RS2, pending documentation
  [WindowsHelloForBusinessBlocked <Boolean?>]: Boolean value that sets Windows Hello for Business as a method for signing into Windows.

DATARECOVERYCERTIFICATE <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>: Windows Information Protection DataRecoveryCertificate
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Certificate <Byte[]>]: Data recovery Certificate
  [Description <String>]: Data recovery Certificate description
  [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
  [SubjectName <String>]: Data recovery Certificate subject name

ENTERPRISEINTERNALPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEIPRANGES <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges

ENTERPRISENETWORKDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROTECTEDDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of enterprise domains to be protected
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROXIEDDOMAINS <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
  [DisplayName <String>]: Display name
  [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
    [IPAddressOrFqdn <String>]: The IP address or FQDN
    [Proxy <String>]: Proxy IP or FQDN

ENTERPRISEPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

EXEMPTAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input exempt apps through xml files
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

EXEMPTAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy

NEUTRALDOMAINRESOURCES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of domain names that can used for work or personal resource
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

PROTECTEDAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input protected apps through xml files
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

PROTECTEDAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

SMBAUTOENCRYPTEDFILEEXTENSIONS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagementwindowsinformationprotectionpolicy
#>
function Update-MgDeviceAppManagementWindowsInformationProtectionPolicy {
[Alias('Update-MgDeviceAppMgtWindowInformationProtectionPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy]
    # Policy for Windows information protection without MDM
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment[]]
    # Navigation property to list of security groups targeted for policy.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether to allow Azure RMS encryption for WIP
    ${AzureRightsManagementServicesAllowed},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate]
    # Windows Information Protection DataRecoveryCertificate
    # To construct, see NOTES section for DATARECOVERYCERTIFICATE properties and create a hash table.
    ${DataRecoveryCertificate},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Offline interval before app data is wiped (days)
    ${DaysWithoutContactBeforeUnenroll},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionEnforcementLevel])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionEnforcementLevel]
    # Possible values for WIP Protection enforcement levels
    ${EnforcementLevel},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Primary enterprise domain
    ${EnterpriseDomain},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]]
    # Sets the enterprise IP ranges that define the computers in the enterprise network.
    # Data that comes from those computers will be considered part of the enterprise and protected.
    # These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISEIPRANGES properties and create a hash table.
    ${EnterpriseIPRanges},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets.
    # Default is false
    ${EnterpriseIPRangesAreAuthoritative},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the comma-separated list of internal proxy servers.
    # For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'.
    # These proxies have been configured by the admin to connect to specific resources on the Internet.
    # They are considered to be enterprise network locations.
    # The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    # To construct, see NOTES section for ENTERPRISEINTERNALPROXYSERVERS properties and create a hash table.
    ${EnterpriseInternalProxyServers},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the list of domains that comprise the boundaries of the enterprise.
    # Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISENETWORKDOMAINNAMES properties and create a hash table.
    ${EnterpriseNetworkDomainNames},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of enterprise domains to be protected
    # To construct, see NOTES section for ENTERPRISEPROTECTEDDOMAINNAMES properties and create a hash table.
    ${EnterpriseProtectedDomainNames},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]]
    # Contains a list of Enterprise resource domains hosted in the cloud that need to be protected.
    # Connections to these resources are considered enterprise data.
    # If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80).
    # A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    # To construct, see NOTES section for ENTERPRISEPROXIEDDOMAINS properties and create a hash table.
    ${EnterpriseProxiedDomains},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is a list of proxy servers.
    # Any server not on this list is considered non-enterprise
    # To construct, see NOTES section for ENTERPRISEPROXYSERVERS properties and create a hash table.
    ${EnterpriseProxyServers},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies.
    # Default is false
    ${EnterpriseProxyServersAreAuthoritative},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input exempt apps through xml files
    # To construct, see NOTES section for EXEMPTAPPLOCKERFILES properties and create a hash table.
    ${ExemptAppLockerFiles},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Exempt applications can also access enterprise data, but the data handled by those applications are not protected.
    # This is because some critical enterprise applications may have compatibility problems with encrypted data.
    # To construct, see NOTES section for EXEMPTAPPS properties and create a hash table.
    ${ExemptApps},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu.
    # Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
    ${IconsVisible},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This switch is for the Windows Search Indexer, to allow or disallow indexing of items
    ${IndexingEncryptedStoresOrItemsBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Enrollment url for the MDM
    ${MdmEnrollmentUrl},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.
    # Range is an integer X where 0 <= X <= 999.
    ${MinutesOfInactivityBeforeDeviceLock},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of domain names that can used for work or personal resource
    # To construct, see NOTES section for NEUTRALDOMAINRESOURCES properties and create a hash table.
    ${NeutralDomainResources},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused.
    # The largest number you can configure for this policy setting is 50.
    # The lowest number you can configure for this policy setting is 0.
    # If this policy is set to 0, then storage of previous PINs is not required.
    # This node was added in Windows 10, version 1511.
    # Default is 0.
    ${NumberOfPastPinsRemembered},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # The number of authentication failures allowed before the device will be wiped.
    # A value of 0 disables device wipe functionality.
    # Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.
    ${PasswordMaximumAttemptCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it.
    # The largest number you can configure for this policy setting is 730.
    # The lowest number you can configure for this policy setting is 0.
    # If this policy is set to 0, then the user's PIN will never expire.
    # This node was added in Windows 10, version 1511.
    # Default is 0.
    ${PinExpirationDays},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionPinCharacterRequirements])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionPinCharacterRequirements]
    # Pin Character Requirements
    ${PinLowercaseLetters},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Integer value that sets the minimum number of characters required for the PIN.
    # Default value is 4.
    # The lowest number you can configure for this policy setting is 4.
    # The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.
    ${PinMinimumLength},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionPinCharacterRequirements])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionPinCharacterRequirements]
    # Pin Character Requirements
    ${PinSpecialCharacters},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionPinCharacterRequirements])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsInformationProtectionPinCharacterRequirements]
    # Pin Character Requirements
    ${PinUppercaseLetters},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input protected apps through xml files
    # To construct, see NOTES section for PROTECTEDAPPLOCKERFILES properties and create a hash table.
    ${ProtectedAppLockerFiles},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Protected applications can access enterprise data and the data handled by those applications are protected with encryption
    # To construct, see NOTES section for PROTECTEDAPPS properties and create a hash table.
    ${ProtectedApps},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
    ${ProtectionUnderLockConfigRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # New property in RS2, pending documentation
    ${RevokeOnMdmHandoffDisabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This policy controls whether to revoke the WIP keys when a device unenrolls from the management service.
    # If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment.
    # If the keys are not revoked, there will be no revoked file cleanup subsequently.
    ${RevokeOnUnenrollDisabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # TemplateID GUID to use for RMS encryption.
    # The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
    ${RightsManagementServicesTemplateId},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
    # To construct, see NOTES section for SMBAUTOENCRYPTEDFILEEXTENSIONS properties and create a hash table.
    ${SmbAutoEncryptedFileExtensions},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that sets Windows Hello for Business as a method for signing into Windows.
    ${WindowsHelloForBusinessBlocked},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicy_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicy_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicy_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagementWindowsInformationProtectionPolicy_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a deviceAppManagement object.
.Description
Update the properties of a deviceAppManagement object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAppManagement
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAppManagement
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ANDROIDMANAGEDAPPPROTECTIONS <IMicrosoftGraphAndroidManagedAppProtection[]>: Android managed app policies.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [AllowedDataStorageLocations <ManagedAppDataStorageLocation[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <ManagedAppClipboardSharingLevel?>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <ManagedBrowserType?>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <ManagedAppPinCharacterSet?>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomBrowserDisplayName <String>]: Friendly name of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [CustomBrowserPackageId <String>]: Unique identifier of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled
  [EncryptAppData <Boolean?>]: Indicates whether application data for managed apps should be encrypted
  [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app.
  [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app.
  [ScreenCaptureBlocked <Boolean?>]: Indicates whether a managed user can take screen captures of managed apps

BODYPARAMETER <IMicrosoftGraphDeviceAppManagement>: Singleton entity that acts as a container for all device app management functionality.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AndroidManagedAppProtections <IMicrosoftGraphAndroidManagedAppProtection[]>]: Android managed app policies.
    [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
        [(Any) <Object>]: This indicates any property can be added to this object.
    [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
    [AllowedDataStorageLocations <ManagedAppDataStorageLocation[]>]: Data storage locations where a user may store managed data.
    [AllowedInboundDataTransferSources <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
    [AllowedOutboundClipboardSharingLevel <ManagedAppClipboardSharingLevel?>]: Represents the level to which the device's clipboard may be shared between apps
    [AllowedOutboundDataTransferDestinations <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
    [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
    [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
    [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
    [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
    [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    [ManagedBrowser <ManagedBrowserType?>]: Type of managed browser
    [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
    [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
    [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
    [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
    [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
    [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
    [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
    [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
    [PinCharacterSet <ManagedAppPinCharacterSet?>]: Character set which is to be used for a user's app PIN
    [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
    [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
    [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
        [(Any) <Object>]: This indicates any property can be added to this object.
      [Version <String>]: Version of the entity.
    [CustomBrowserDisplayName <String>]: Friendly name of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    [CustomBrowserPackageId <String>]: Unique identifier of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
    [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
      [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
        [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
        [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [DisplayName <String>]: Not yet documented
      [LastRefreshTime <DateTime?>]: Not yet documented
      [Version <String>]: Version of the entity.
    [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled
    [EncryptAppData <Boolean?>]: Indicates whether application data for managed apps should be encrypted
    [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app.
    [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app.
    [ScreenCaptureBlocked <Boolean?>]: Indicates whether a managed user can take screen captures of managed apps
  [DefaultManagedAppProtections <IMicrosoftGraphDefaultManagedAppProtection[]>]: Default managed app policies.
    [AllowedDataStorageLocations <ManagedAppDataStorageLocation[]>]: Data storage locations where a user may store managed data.
    [AllowedInboundDataTransferSources <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
    [AllowedOutboundClipboardSharingLevel <ManagedAppClipboardSharingLevel?>]: Represents the level to which the device's clipboard may be shared between apps
    [AllowedOutboundDataTransferDestinations <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
    [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
    [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
    [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
    [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
    [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    [ManagedBrowser <ManagedBrowserType?>]: Type of managed browser
    [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
    [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
    [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
    [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
    [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
    [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
    [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
    [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
    [PinCharacterSet <ManagedAppPinCharacterSet?>]: Character set which is to be used for a user's app PIN
    [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
    [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
    [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AppDataEncryptionType <ManagedAppDataEncryptionType?>]: Represents the level to which app data is encrypted for managed apps
    [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to the affected users, unalterned by this service
      [Name <String>]: Name for this key-value pair
      [Value <String>]: Value for this key-value pair
    [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
    [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled. (Android only)
    [EncryptAppData <Boolean?>]: Indicates whether managed-app data should be encrypted. (Android only)
    [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True. (iOS Only)
    [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app. (Android only)
    [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data. (iOS Only)
    [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app. (Android only)
    [ScreenCaptureBlocked <Boolean?>]: Indicates whether screen capture is blocked. (Android only)
  [IosManagedAppProtections <IMicrosoftGraphIosManagedAppProtection[]>]: iOS managed app policies.
    [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
    [AllowedDataStorageLocations <ManagedAppDataStorageLocation[]>]: Data storage locations where a user may store managed data.
    [AllowedInboundDataTransferSources <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
    [AllowedOutboundClipboardSharingLevel <ManagedAppClipboardSharingLevel?>]: Represents the level to which the device's clipboard may be shared between apps
    [AllowedOutboundDataTransferDestinations <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
    [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
    [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
    [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
    [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
    [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    [ManagedBrowser <ManagedBrowserType?>]: Type of managed browser
    [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
    [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
    [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
    [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
    [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
    [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
    [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
    [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
    [PinCharacterSet <ManagedAppPinCharacterSet?>]: Character set which is to be used for a user's app PIN
    [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
    [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
    [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AppDataEncryptionType <ManagedAppDataEncryptionType?>]: Represents the level to which app data is encrypted for managed apps
    [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [CustomBrowserProtocol <String>]: A custom browser protocol to open weblink on iOS. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
    [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
    [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [IsEnabledForMicrosoftStoreForBusiness <Boolean?>]: Whether the account is enabled for syncing applications from the Microsoft Store for Business.
  [ManagedAppPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Managed app policies.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
  [ManagedAppRegistrations <IMicrosoftGraphManagedAppRegistration[]>]: The managed app registrations.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [ApplicationVersion <String>]: App version
    [AppliedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policys already applied on the registered app when it last synchronized with managment service.
    [CreatedDateTime <DateTime?>]: Date and time of creation
    [DeviceName <String>]: Host device name
    [DeviceTag <String>]: App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.
    [DeviceType <String>]: Host device type
    [FlaggedReasons <ManagedAppFlaggedReason[]>]: Zero or more reasons an app registration is flagged. E.g. app running on rooted device
    [IntendedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policies admin intended for the app as of now.
    [LastSyncDateTime <DateTime?>]: Date and time of last the app synced with management service.
    [ManagementSdkVersion <String>]: App management SDK version
    [Operations <IMicrosoftGraphManagedAppOperation[]>]: Zero or more long running operations triggered on the app registration.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DisplayName <String>]: The operation name.
      [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
      [State <String>]: The current state of the operation
      [Version <String>]: Version of the entity.
    [PlatformVersion <String>]: Operating System version
    [UserId <String>]: The user Id to who this app registration belongs.
    [Version <String>]: Version of the entity.
  [ManagedAppStatuses <IMicrosoftGraphManagedAppStatus[]>]: The managed app statuses.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: Friendly name of the status report.
    [Version <String>]: Version of the entity.
  [ManagedEBooks <IMicrosoftGraphManagedEBook[]>]: The Managed eBook.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Assignments <IMicrosoftGraphManagedEBookAssignment[]>]: The list of assignments for this eBook.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [InstallIntent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
      [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [CreatedDateTime <DateTime?>]: The date and time when the eBook file was created.
    [Description <String>]: Description.
    [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The list of installation states for this eBook.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DeviceId <String>]: Device Id.
      [DeviceName <String>]: Device name.
      [ErrorCode <String>]: The error code for install failures.
      [InstallState <InstallState?>]: Possible values for install state.
      [LastSyncDateTime <DateTime?>]: Last sync date and time.
      [OSDescription <String>]: OS Description.
      [OSVersion <String>]: OS Version.
      [UserName <String>]: Device User Name.
    [DisplayName <String>]: Name of the eBook.
    [InformationUrl <String>]: The more information Url.
    [InstallSummary <IMicrosoftGraphEBookInstallSummary>]: Contains properties for the installation summary of a book for a device.
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [FailedDeviceCount <Int32?>]: Number of Devices that have failed to install this book.
      [FailedUserCount <Int32?>]: Number of Users that have 1 or more device that failed to install this book.
      [InstalledDeviceCount <Int32?>]: Number of Devices that have successfully installed this book.
      [InstalledUserCount <Int32?>]: Number of Users whose devices have all succeeded to install this book.
      [NotInstalledDeviceCount <Int32?>]: Number of Devices that does not have this book installed.
      [NotInstalledUserCount <Int32?>]: Number of Users that did not install this book.
    [LargeCover <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Type <String>]: Indicates the content mime type.
      [Value <Byte[]>]: The byte array that contains the actual content.
    [LastModifiedDateTime <DateTime?>]: The date and time when the eBook was last modified.
    [PrivacyInformationUrl <String>]: The privacy statement Url.
    [PublishedDateTime <DateTime?>]: The date and time when the eBook was published.
    [Publisher <String>]: Publisher.
    [UserStateSummary <IMicrosoftGraphUserInstallStateSummary[]>]: The list of installation states for this eBook.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
      [FailedDeviceCount <Int32?>]: Failed Device Count.
      [InstalledDeviceCount <Int32?>]: Installed Device Count.
      [NotInstalledDeviceCount <Int32?>]: Not installed device count.
      [UserName <String>]: User name.
  [MdmWindowsInformationProtectionPolicies <IMicrosoftGraphMdmWindowsInformationProtectionPolicy[]>]: Windows information protection for apps running on devices which are MDM enrolled.
    [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of security groups targeted for policy.
    [AzureRightsManagementServicesAllowed <Boolean?>]: Specifies whether to allow Azure RMS encryption for WIP
    [DataRecoveryCertificate <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>]: Windows Information Protection DataRecoveryCertificate
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Certificate <Byte[]>]: Data recovery Certificate
      [Description <String>]: Data recovery Certificate description
      [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
      [SubjectName <String>]: Data recovery Certificate subject name
    [EnforcementLevel <WindowsInformationProtectionEnforcementLevel?>]: Possible values for WIP Protection enforcement levels
    [EnterpriseDomain <String>]: Primary enterprise domain
    [EnterpriseIPRanges <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>]: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
      [DisplayName <String>]: Display name
      [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges
    [EnterpriseIPRangesAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
    [EnterpriseInternalProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
      [DisplayName <String>]: Display name
      [Resources <String[]>]: Collection of resources
    [EnterpriseNetworkDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
    [EnterpriseProtectedDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of enterprise domains to be protected
    [EnterpriseProxiedDomains <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>]: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
      [DisplayName <String>]: Display name
      [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
        [IPAddressOrFqdn <String>]: The IP address or FQDN
        [Proxy <String>]: Proxy IP or FQDN
    [EnterpriseProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is a list of proxy servers. Any server not on this list is considered non-enterprise
    [EnterpriseProxyServersAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
    [ExemptAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input exempt apps through xml files
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DisplayName <String>]: The friendly name
      [File <Byte[]>]: File as a byte array
      [FileHash <String>]: SHA256 hash of the file
      [Version <String>]: Version of the entity.
    [ExemptApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
      [Denied <Boolean?>]: If true, app is denied protection or exemption.
      [Description <String>]: The app's description.
      [DisplayName <String>]: App display name.
      [ProductName <String>]: The product name.
      [PublisherName <String>]: The publisher name
    [IconsVisible <Boolean?>]: Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
    [IndexingEncryptedStoresOrItemsBlocked <Boolean?>]: This switch is for the Windows Search Indexer, to allow or disallow indexing of items
    [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
    [NeutralDomainResources <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of domain names that can used for work or personal resource
    [ProtectedAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input protected apps through xml files
    [ProtectedApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
    [ProtectionUnderLockConfigRequired <Boolean?>]: Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
    [RevokeOnUnenrollDisabled <Boolean?>]: This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
    [RightsManagementServicesTemplateId <String>]: TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
    [SmbAutoEncryptedFileExtensions <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
    [Id <String>]: The unique idenfier for an entity. Read-only.
  [MicrosoftStoreForBusinessLanguage <String>]: The locale information used to sync applications from the Microsoft Store for Business. Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is -<country/regioncode2>, where  is a lowercase two-letter code derived from ISO 639-1 and <country/regioncode2> is an uppercase two-letter code derived from ISO 3166. For example, en-US for English (United States) is a specific culture.
  [MicrosoftStoreForBusinessLastCompletedApplicationSyncTime <DateTime?>]: The last time an application sync from the Microsoft Store for Business was completed.
  [MicrosoftStoreForBusinessLastSuccessfulSyncDateTime <DateTime?>]: The last time the apps from the Microsoft Store for Business were synced successfully for the account.
  [MobileAppCategories <IMicrosoftGraphMobileAppCategory[]>]: The mobile app categories.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The name of the app category.
    [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.
  [MobileAppConfigurations <IMicrosoftGraphManagedDeviceMobileAppConfiguration[]>]: The Managed Device Mobile Application Configurations.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Assignments <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment[]>]: The list of group assignemenets for app configration.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [CreatedDateTime <DateTime?>]: DateTime the object was created.
    [Description <String>]: Admin provided description of the Device Configuration.
    [DeviceStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary>]: Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ConfigurationVersion <Int32?>]: Version of the policy for that overview
      [ErrorCount <Int32?>]: Number of error devices
      [FailedCount <Int32?>]: Number of failed devices
      [LastUpdateDateTime <DateTime?>]: Last update time
      [NotApplicableCount <Int32?>]: Number of not applicable devices
      [PendingCount <Int32?>]: Number of pending devices
      [SuccessCount <Int32?>]: Number of succeeded devices
    [DeviceStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus[]>]: List of ManagedDeviceMobileAppConfigurationDeviceStatus.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
      [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
      [DeviceModel <String>]: The device model that is being reported
      [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
      [Status <String>]: complianceStatus
      [UserName <String>]: The User Name that is being reported
      [UserPrincipalName <String>]: UserPrincipalName.
    [DisplayName <String>]: Admin provided name of the device configuration.
    [LastModifiedDateTime <DateTime?>]: DateTime the object was last modified.
    [TargetedMobileApps <String[]>]: the associated app.
    [UserStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary>]: Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ConfigurationVersion <Int32?>]: Version of the policy for that overview
      [ErrorCount <Int32?>]: Number of error Users
      [FailedCount <Int32?>]: Number of failed Users
      [LastUpdateDateTime <DateTime?>]: Last update time
      [NotApplicableCount <Int32?>]: Number of not applicable users
      [PendingCount <Int32?>]: Number of pending Users
      [SuccessCount <Int32?>]: Number of succeeded Users
    [UserStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]>]: List of ManagedDeviceMobileAppConfigurationUserStatus.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DevicesCount <Int32?>]: Devices count for that user.
      [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
      [Status <String>]: complianceStatus
      [UserDisplayName <String>]: User name of the DevicePolicyStatus.
      [UserPrincipalName <String>]: UserPrincipalName.
    [Version <Int32?>]: Version of the device configuration.
  [MobileApps <IMicrosoftGraphMobileApp[]>]: The mobile apps.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Assignments <IMicrosoftGraphMobileAppAssignment[]>]: The list of group assignments for this mobile app.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Intent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
      [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
        [(Any) <Object>]: This indicates any property can be added to this object.
      [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
    [Categories <IMicrosoftGraphMobileAppCategory[]>]: The list of categories for this app.
    [CreatedDateTime <DateTime?>]: The date and time the app was created.
    [Description <String>]: The description of the app.
    [Developer <String>]: The developer of the app.
    [DisplayName <String>]: The admin provided or imported title of the app.
    [InformationUrl <String>]: The more information Url.
    [IsFeatured <Boolean?>]: The value indicating whether the app is marked as featured by the admin.
    [LargeIcon <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
    [LastModifiedDateTime <DateTime?>]: The date and time the app was last modified.
    [Notes <String>]: Notes for the app.
    [Owner <String>]: The owner of the app.
    [PrivacyInformationUrl <String>]: The privacy statement Url.
    [Publisher <String>]: The publisher of the app.
    [PublishingState <MobileAppPublishingState?>]: Indicates the publishing state of an app.
  [TargetedManagedAppConfigurations <IMicrosoftGraphTargetedManagedAppConfiguration[]>]: Targeted managed app configurations.
    [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
    [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [VppTokens <IMicrosoftGraphVppToken[]>]: List of Vpp tokens for this organization.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AppleId <String>]: The apple Id associated with the given Apple Volume Purchase Program Token.
    [AutomaticallyUpdateApps <Boolean?>]: Whether or not apps for the VPP token will be automatically updated.
    [CountryOrRegion <String>]: Whether or not apps for the VPP token will be automatically updated.
    [ExpirationDateTime <DateTime?>]: The expiration date time of the Apple Volume Purchase Program Token.
    [LastModifiedDateTime <DateTime?>]: Last modification date time associated with the Apple Volume Purchase Program Token.
    [LastSyncDateTime <DateTime?>]: The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.
    [LastSyncStatus <VppTokenSyncStatus?>]: Possible sync statuses associated with an Apple Volume Purchase Program token.
    [OrganizationName <String>]: The organization associated with the Apple Volume Purchase Program Token
    [State <VppTokenState?>]: Possible states associated with an Apple Volume Purchase Program token.
    [Token <String>]: The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.
    [VppTokenAccountType <VppTokenAccountType?>]: Possible types of an Apple Volume Purchase Program token.
  [WindowsInformationProtectionPolicies <IMicrosoftGraphWindowsInformationProtectionPolicy[]>]: Windows information protection for apps running on devices which are not MDM enrolled.
    [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of security groups targeted for policy.
    [AzureRightsManagementServicesAllowed <Boolean?>]: Specifies whether to allow Azure RMS encryption for WIP
    [DataRecoveryCertificate <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>]: Windows Information Protection DataRecoveryCertificate
    [EnforcementLevel <WindowsInformationProtectionEnforcementLevel?>]: Possible values for WIP Protection enforcement levels
    [EnterpriseDomain <String>]: Primary enterprise domain
    [EnterpriseIPRanges <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>]: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
    [EnterpriseIPRangesAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
    [EnterpriseInternalProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    [EnterpriseNetworkDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
    [EnterpriseProtectedDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of enterprise domains to be protected
    [EnterpriseProxiedDomains <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>]: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    [EnterpriseProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is a list of proxy servers. Any server not on this list is considered non-enterprise
    [EnterpriseProxyServersAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
    [ExemptAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input exempt apps through xml files
    [ExemptApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
    [IconsVisible <Boolean?>]: Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
    [IndexingEncryptedStoresOrItemsBlocked <Boolean?>]: This switch is for the Windows Search Indexer, to allow or disallow indexing of items
    [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
    [NeutralDomainResources <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of domain names that can used for work or personal resource
    [ProtectedAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input protected apps through xml files
    [ProtectedApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
    [ProtectionUnderLockConfigRequired <Boolean?>]: Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
    [RevokeOnUnenrollDisabled <Boolean?>]: This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
    [RightsManagementServicesTemplateId <String>]: TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
    [SmbAutoEncryptedFileExtensions <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DaysWithoutContactBeforeUnenroll <Int32?>]: Offline interval before app data is wiped (days)
    [MdmEnrollmentUrl <String>]: Enrollment url for the MDM
    [MinutesOfInactivityBeforeDeviceLock <Int32?>]: Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.   Range is an integer X where 0 <= X <= 999.
    [NumberOfPastPinsRemembered <Int32?>]: Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused. The largest number you can configure for this policy setting is 50. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then storage of previous PINs is not required. This node was added in Windows 10, version 1511. Default is 0.
    [PasswordMaximumAttemptCount <Int32?>]: The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality. Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.
    [PinExpirationDays <Int32?>]: Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it. The largest number you can configure for this policy setting is 730. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then the user's PIN will never expire. This node was added in Windows 10, version 1511. Default is 0.
    [PinLowercaseLetters <WindowsInformationProtectionPinCharacterRequirements?>]: Pin Character Requirements
    [PinMinimumLength <Int32?>]: Integer value that sets the minimum number of characters required for the PIN. Default value is 4. The lowest number you can configure for this policy setting is 4. The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.
    [PinSpecialCharacters <WindowsInformationProtectionPinCharacterRequirements?>]: Pin Character Requirements
    [PinUppercaseLetters <WindowsInformationProtectionPinCharacterRequirements?>]: Pin Character Requirements
    [RevokeOnMdmHandoffDisabled <Boolean?>]: New property in RS2, pending documentation
    [WindowsHelloForBusinessBlocked <Boolean?>]: Boolean value that sets Windows Hello for Business as a method for signing into Windows.

DEFAULTMANAGEDAPPPROTECTIONS <IMicrosoftGraphDefaultManagedAppProtection[]>: Default managed app policies.
  [AllowedDataStorageLocations <ManagedAppDataStorageLocation[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <ManagedAppClipboardSharingLevel?>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <ManagedBrowserType?>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <ManagedAppPinCharacterSet?>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AppDataEncryptionType <ManagedAppDataEncryptionType?>]: Represents the level to which app data is encrypted for managed apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to the affected users, unalterned by this service
    [Name <String>]: Name for this key-value pair
    [Value <String>]: Value for this key-value pair
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled. (Android only)
  [EncryptAppData <Boolean?>]: Indicates whether managed-app data should be encrypted. (Android only)
  [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True. (iOS Only)
  [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app. (Android only)
  [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data. (iOS Only)
  [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app. (Android only)
  [ScreenCaptureBlocked <Boolean?>]: Indicates whether screen capture is blocked. (Android only)

IOSMANAGEDAPPPROTECTIONS <IMicrosoftGraphIosManagedAppProtection[]>: iOS managed app policies.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [AllowedDataStorageLocations <ManagedAppDataStorageLocation[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <ManagedAppClipboardSharingLevel?>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <ManagedAppDataTransferLevel?>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <ManagedBrowserType?>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <ManagedAppPinCharacterSet?>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AppDataEncryptionType <ManagedAppDataEncryptionType?>]: Represents the level to which app data is encrypted for managed apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomBrowserProtocol <String>]: A custom browser protocol to open weblink on iOS. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
  [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.

MANAGEDAPPPOLICIES <IMicrosoftGraphManagedAppPolicy[]>: Managed app policies.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

MANAGEDAPPREGISTRATIONS <IMicrosoftGraphManagedAppRegistration[]>: The managed app registrations.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [ApplicationVersion <String>]: App version
  [AppliedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policys already applied on the registered app when it last synchronized with managment service.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
  [CreatedDateTime <DateTime?>]: Date and time of creation
  [DeviceName <String>]: Host device name
  [DeviceTag <String>]: App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.
  [DeviceType <String>]: Host device type
  [FlaggedReasons <ManagedAppFlaggedReason[]>]: Zero or more reasons an app registration is flagged. E.g. app running on rooted device
  [IntendedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policies admin intended for the app as of now.
  [LastSyncDateTime <DateTime?>]: Date and time of last the app synced with management service.
  [ManagementSdkVersion <String>]: App management SDK version
  [Operations <IMicrosoftGraphManagedAppOperation[]>]: Zero or more long running operations triggered on the app registration.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The operation name.
    [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
    [State <String>]: The current state of the operation
    [Version <String>]: Version of the entity.
  [PlatformVersion <String>]: Operating System version
  [UserId <String>]: The user Id to who this app registration belongs.
  [Version <String>]: Version of the entity.

MANAGEDAPPSTATUSES <IMicrosoftGraphManagedAppStatus[]>: The managed app statuses.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: Friendly name of the status report.
  [Version <String>]: Version of the entity.

MANAGEDEBOOKS <IMicrosoftGraphManagedEBook[]>: The Managed eBook.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Assignments <IMicrosoftGraphManagedEBookAssignment[]>]: The list of assignments for this eBook.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [InstallIntent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [CreatedDateTime <DateTime?>]: The date and time when the eBook file was created.
  [Description <String>]: Description.
  [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The list of installation states for this eBook.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DeviceId <String>]: Device Id.
    [DeviceName <String>]: Device name.
    [ErrorCode <String>]: The error code for install failures.
    [InstallState <InstallState?>]: Possible values for install state.
    [LastSyncDateTime <DateTime?>]: Last sync date and time.
    [OSDescription <String>]: OS Description.
    [OSVersion <String>]: OS Version.
    [UserName <String>]: Device User Name.
  [DisplayName <String>]: Name of the eBook.
  [InformationUrl <String>]: The more information Url.
  [InstallSummary <IMicrosoftGraphEBookInstallSummary>]: Contains properties for the installation summary of a book for a device.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [FailedDeviceCount <Int32?>]: Number of Devices that have failed to install this book.
    [FailedUserCount <Int32?>]: Number of Users that have 1 or more device that failed to install this book.
    [InstalledDeviceCount <Int32?>]: Number of Devices that have successfully installed this book.
    [InstalledUserCount <Int32?>]: Number of Users whose devices have all succeeded to install this book.
    [NotInstalledDeviceCount <Int32?>]: Number of Devices that does not have this book installed.
    [NotInstalledUserCount <Int32?>]: Number of Users that did not install this book.
  [LargeCover <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Type <String>]: Indicates the content mime type.
    [Value <Byte[]>]: The byte array that contains the actual content.
  [LastModifiedDateTime <DateTime?>]: The date and time when the eBook was last modified.
  [PrivacyInformationUrl <String>]: The privacy statement Url.
  [PublishedDateTime <DateTime?>]: The date and time when the eBook was published.
  [Publisher <String>]: Publisher.
  [UserStateSummary <IMicrosoftGraphUserInstallStateSummary[]>]: The list of installation states for this eBook.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
    [FailedDeviceCount <Int32?>]: Failed Device Count.
    [InstalledDeviceCount <Int32?>]: Installed Device Count.
    [NotInstalledDeviceCount <Int32?>]: Not installed device count.
    [UserName <String>]: User name.

MDMWINDOWSINFORMATIONPROTECTIONPOLICIES <IMicrosoftGraphMdmWindowsInformationProtectionPolicy[]>: Windows information protection for apps running on devices which are MDM enrolled.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of security groups targeted for policy.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [AzureRightsManagementServicesAllowed <Boolean?>]: Specifies whether to allow Azure RMS encryption for WIP
  [DataRecoveryCertificate <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>]: Windows Information Protection DataRecoveryCertificate
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Certificate <Byte[]>]: Data recovery Certificate
    [Description <String>]: Data recovery Certificate description
    [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
    [SubjectName <String>]: Data recovery Certificate subject name
  [EnforcementLevel <WindowsInformationProtectionEnforcementLevel?>]: Possible values for WIP Protection enforcement levels
  [EnterpriseDomain <String>]: Primary enterprise domain
  [EnterpriseIPRanges <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>]: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
    [DisplayName <String>]: Display name
    [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges
  [EnterpriseIPRangesAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
  [EnterpriseInternalProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    [DisplayName <String>]: Display name
    [Resources <String[]>]: Collection of resources
  [EnterpriseNetworkDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [EnterpriseProtectedDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of enterprise domains to be protected
  [EnterpriseProxiedDomains <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>]: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    [DisplayName <String>]: Display name
    [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
      [IPAddressOrFqdn <String>]: The IP address or FQDN
      [Proxy <String>]: Proxy IP or FQDN
  [EnterpriseProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [EnterpriseProxyServersAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
  [ExemptAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input exempt apps through xml files
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The friendly name
    [File <Byte[]>]: File as a byte array
    [FileHash <String>]: SHA256 hash of the file
    [Version <String>]: Version of the entity.
  [ExemptApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
    [Denied <Boolean?>]: If true, app is denied protection or exemption.
    [Description <String>]: The app's description.
    [DisplayName <String>]: App display name.
    [ProductName <String>]: The product name.
    [PublisherName <String>]: The publisher name
  [IconsVisible <Boolean?>]: Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
  [IndexingEncryptedStoresOrItemsBlocked <Boolean?>]: This switch is for the Windows Search Indexer, to allow or disallow indexing of items
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [NeutralDomainResources <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of domain names that can used for work or personal resource
  [ProtectedAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input protected apps through xml files
  [ProtectedApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [ProtectionUnderLockConfigRequired <Boolean?>]: Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
  [RevokeOnUnenrollDisabled <Boolean?>]: This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
  [RightsManagementServicesTemplateId <String>]: TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
  [SmbAutoEncryptedFileExtensions <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.

MOBILEAPPCATEGORIES <IMicrosoftGraphMobileAppCategory[]>: The mobile app categories.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The name of the app category.
  [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.

MOBILEAPPCONFIGURATIONS <IMicrosoftGraphManagedDeviceMobileAppConfiguration[]>: The Managed Device Mobile Application Configurations.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Assignments <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment[]>]: The list of group assignemenets for app configration.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [CreatedDateTime <DateTime?>]: DateTime the object was created.
  [Description <String>]: Admin provided description of the Device Configuration.
  [DeviceStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary>]: Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationVersion <Int32?>]: Version of the policy for that overview
    [ErrorCount <Int32?>]: Number of error devices
    [FailedCount <Int32?>]: Number of failed devices
    [LastUpdateDateTime <DateTime?>]: Last update time
    [NotApplicableCount <Int32?>]: Number of not applicable devices
    [PendingCount <Int32?>]: Number of pending devices
    [SuccessCount <Int32?>]: Number of succeeded devices
  [DeviceStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus[]>]: List of ManagedDeviceMobileAppConfigurationDeviceStatus.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
    [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
    [DeviceModel <String>]: The device model that is being reported
    [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
    [Status <String>]: complianceStatus
    [UserName <String>]: The User Name that is being reported
    [UserPrincipalName <String>]: UserPrincipalName.
  [DisplayName <String>]: Admin provided name of the device configuration.
  [LastModifiedDateTime <DateTime?>]: DateTime the object was last modified.
  [TargetedMobileApps <String[]>]: the associated app.
  [UserStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary>]: Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationVersion <Int32?>]: Version of the policy for that overview
    [ErrorCount <Int32?>]: Number of error Users
    [FailedCount <Int32?>]: Number of failed Users
    [LastUpdateDateTime <DateTime?>]: Last update time
    [NotApplicableCount <Int32?>]: Number of not applicable users
    [PendingCount <Int32?>]: Number of pending Users
    [SuccessCount <Int32?>]: Number of succeeded Users
  [UserStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]>]: List of ManagedDeviceMobileAppConfigurationUserStatus.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DevicesCount <Int32?>]: Devices count for that user.
    [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
    [Status <String>]: complianceStatus
    [UserDisplayName <String>]: User name of the DevicePolicyStatus.
    [UserPrincipalName <String>]: UserPrincipalName.
  [Version <Int32?>]: Version of the device configuration.

MOBILEAPPS <IMicrosoftGraphMobileApp[]>: The mobile apps.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Assignments <IMicrosoftGraphMobileAppAssignment[]>]: The list of group assignments for this mobile app.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Intent <InstallIntent?>]: Possible values for the install intent chosen by the admin.
    [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [Categories <IMicrosoftGraphMobileAppCategory[]>]: The list of categories for this app.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The name of the app category.
    [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.
  [CreatedDateTime <DateTime?>]: The date and time the app was created.
  [Description <String>]: The description of the app.
  [Developer <String>]: The developer of the app.
  [DisplayName <String>]: The admin provided or imported title of the app.
  [InformationUrl <String>]: The more information Url.
  [IsFeatured <Boolean?>]: The value indicating whether the app is marked as featured by the admin.
  [LargeIcon <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Type <String>]: Indicates the content mime type.
    [Value <Byte[]>]: The byte array that contains the actual content.
  [LastModifiedDateTime <DateTime?>]: The date and time the app was last modified.
  [Notes <String>]: Notes for the app.
  [Owner <String>]: The owner of the app.
  [PrivacyInformationUrl <String>]: The privacy statement Url.
  [Publisher <String>]: The publisher of the app.
  [PublishingState <MobileAppPublishingState?>]: Indicates the publishing state of an app.

TARGETEDMANAGEDAPPCONFIGURATIONS <IMicrosoftGraphTargetedManagedAppConfiguration[]>: Targeted managed app configurations.
  [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
    [Name <String>]: Name for this key-value pair
    [Value <String>]: Value for this key-value pair
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.

VPPTOKENS <IMicrosoftGraphVppToken[]>: List of Vpp tokens for this organization.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AppleId <String>]: The apple Id associated with the given Apple Volume Purchase Program Token.
  [AutomaticallyUpdateApps <Boolean?>]: Whether or not apps for the VPP token will be automatically updated.
  [CountryOrRegion <String>]: Whether or not apps for the VPP token will be automatically updated.
  [ExpirationDateTime <DateTime?>]: The expiration date time of the Apple Volume Purchase Program Token.
  [LastModifiedDateTime <DateTime?>]: Last modification date time associated with the Apple Volume Purchase Program Token.
  [LastSyncDateTime <DateTime?>]: The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.
  [LastSyncStatus <VppTokenSyncStatus?>]: Possible sync statuses associated with an Apple Volume Purchase Program token.
  [OrganizationName <String>]: The organization associated with the Apple Volume Purchase Program Token
  [State <VppTokenState?>]: Possible states associated with an Apple Volume Purchase Program token.
  [Token <String>]: The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.
  [VppTokenAccountType <VppTokenAccountType?>]: Possible types of an Apple Volume Purchase Program token.

WINDOWSINFORMATIONPROTECTIONPOLICIES <IMicrosoftGraphWindowsInformationProtectionPolicy[]>: Windows information protection for apps running on devices which are not MDM enrolled.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment[]>]: Navigation property to list of security groups targeted for policy.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [AzureRightsManagementServicesAllowed <Boolean?>]: Specifies whether to allow Azure RMS encryption for WIP
  [DataRecoveryCertificate <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>]: Windows Information Protection DataRecoveryCertificate
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Certificate <Byte[]>]: Data recovery Certificate
    [Description <String>]: Data recovery Certificate description
    [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
    [SubjectName <String>]: Data recovery Certificate subject name
  [EnforcementLevel <WindowsInformationProtectionEnforcementLevel?>]: Possible values for WIP Protection enforcement levels
  [EnterpriseDomain <String>]: Primary enterprise domain
  [EnterpriseIPRanges <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>]: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
    [DisplayName <String>]: Display name
    [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges
  [EnterpriseIPRangesAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
  [EnterpriseInternalProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    [DisplayName <String>]: Display name
    [Resources <String[]>]: Collection of resources
  [EnterpriseNetworkDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [EnterpriseProtectedDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of enterprise domains to be protected
  [EnterpriseProxiedDomains <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>]: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    [DisplayName <String>]: Display name
    [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
      [IPAddressOrFqdn <String>]: The IP address or FQDN
      [Proxy <String>]: Proxy IP or FQDN
  [EnterpriseProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [EnterpriseProxyServersAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
  [ExemptAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input exempt apps through xml files
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The friendly name
    [File <Byte[]>]: File as a byte array
    [FileHash <String>]: SHA256 hash of the file
    [Version <String>]: Version of the entity.
  [ExemptApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
    [Denied <Boolean?>]: If true, app is denied protection or exemption.
    [Description <String>]: The app's description.
    [DisplayName <String>]: App display name.
    [ProductName <String>]: The product name.
    [PublisherName <String>]: The publisher name
  [IconsVisible <Boolean?>]: Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
  [IndexingEncryptedStoresOrItemsBlocked <Boolean?>]: This switch is for the Windows Search Indexer, to allow or disallow indexing of items
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [NeutralDomainResources <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of domain names that can used for work or personal resource
  [ProtectedAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input protected apps through xml files
  [ProtectedApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [ProtectionUnderLockConfigRequired <Boolean?>]: Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
  [RevokeOnUnenrollDisabled <Boolean?>]: This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
  [RightsManagementServicesTemplateId <String>]: TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
  [SmbAutoEncryptedFileExtensions <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DaysWithoutContactBeforeUnenroll <Int32?>]: Offline interval before app data is wiped (days)
  [MdmEnrollmentUrl <String>]: Enrollment url for the MDM
  [MinutesOfInactivityBeforeDeviceLock <Int32?>]: Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.   Range is an integer X where 0 <= X <= 999.
  [NumberOfPastPinsRemembered <Int32?>]: Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused. The largest number you can configure for this policy setting is 50. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then storage of previous PINs is not required. This node was added in Windows 10, version 1511. Default is 0.
  [PasswordMaximumAttemptCount <Int32?>]: The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality. Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.
  [PinExpirationDays <Int32?>]: Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it. The largest number you can configure for this policy setting is 730. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then the user's PIN will never expire. This node was added in Windows 10, version 1511. Default is 0.
  [PinLowercaseLetters <WindowsInformationProtectionPinCharacterRequirements?>]: Pin Character Requirements
  [PinMinimumLength <Int32?>]: Integer value that sets the minimum number of characters required for the PIN. Default value is 4. The lowest number you can configure for this policy setting is 4. The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.
  [PinSpecialCharacters <WindowsInformationProtectionPinCharacterRequirements?>]: Pin Character Requirements
  [PinUppercaseLetters <WindowsInformationProtectionPinCharacterRequirements?>]: Pin Character Requirements
  [RevokeOnMdmHandoffDisabled <Boolean?>]: New property in RS2, pending documentation
  [WindowsHelloForBusinessBlocked <Boolean?>]: Boolean value that sets Windows Hello for Business as a method for signing into Windows.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmanagement
#>
function Update-MgDeviceAppManagement {
[Alias('Update-MgDeviceAppMgt')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAppManagement])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAppManagement]
    # Singleton entity that acts as a container for all device app management functionality.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection[]]
    # Android managed app policies.
    # To construct, see NOTES section for ANDROIDMANAGEDAPPPROTECTIONS properties and create a hash table.
    ${AndroidManagedAppProtections},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection[]]
    # Default managed app policies.
    # To construct, see NOTES section for DEFAULTMANAGEDAPPPROTECTIONS properties and create a hash table.
    ${DefaultManagedAppProtections},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection[]]
    # iOS managed app policies.
    # To construct, see NOTES section for IOSMANAGEDAPPPROTECTIONS properties and create a hash table.
    ${IosManagedAppProtections},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether the account is enabled for syncing applications from the Microsoft Store for Business.
    ${IsEnabledForMicrosoftStoreForBusiness},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy[]]
    # Managed app policies.
    # To construct, see NOTES section for MANAGEDAPPPOLICIES properties and create a hash table.
    ${ManagedAppPolicies},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration[]]
    # The managed app registrations.
    # To construct, see NOTES section for MANAGEDAPPREGISTRATIONS properties and create a hash table.
    ${ManagedAppRegistrations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus[]]
    # The managed app statuses.
    # To construct, see NOTES section for MANAGEDAPPSTATUSES properties and create a hash table.
    ${ManagedAppStatuses},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook[]]
    # The Managed eBook.
    # To construct, see NOTES section for MANAGEDEBOOKS properties and create a hash table.
    ${ManagedEBooks},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy[]]
    # Windows information protection for apps running on devices which are MDM enrolled.
    # To construct, see NOTES section for MDMWINDOWSINFORMATIONPROTECTIONPOLICIES properties and create a hash table.
    ${MdmWindowsInformationProtectionPolicies},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The locale information used to sync applications from the Microsoft Store for Business.
    # Cultures that are specific to a country/region.
    # The names of these cultures follow RFC 4646 (Windows Vista and later).
    # The format is -<country/regioncode2>, where is a lowercase two-letter code derived from ISO 639-1 and <country/regioncode2> is an uppercase two-letter code derived from ISO 3166.
    # For example, en-US for English (United States) is a specific culture.
    ${MicrosoftStoreForBusinessLanguage},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The last time an application sync from the Microsoft Store for Business was completed.
    ${MicrosoftStoreForBusinessLastCompletedApplicationSyncTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The last time the apps from the Microsoft Store for Business were synced successfully for the account.
    ${MicrosoftStoreForBusinessLastSuccessfulSyncDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory[]]
    # The mobile app categories.
    # To construct, see NOTES section for MOBILEAPPCATEGORIES properties and create a hash table.
    ${MobileAppCategories},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration[]]
    # The Managed Device Mobile Application Configurations.
    # To construct, see NOTES section for MOBILEAPPCONFIGURATIONS properties and create a hash table.
    ${MobileAppConfigurations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp[]]
    # The mobile apps.
    # To construct, see NOTES section for MOBILEAPPS properties and create a hash table.
    ${MobileApps},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration[]]
    # Targeted managed app configurations.
    # To construct, see NOTES section for TARGETEDMANAGEDAPPCONFIGURATIONS properties and create a hash table.
    ${TargetedManagedAppConfigurations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken[]]
    # List of Vpp tokens for this organization.
    # To construct, see NOTES section for VPPTOKENS properties and create a hash table.
    ${VppTokens},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy[]]
    # Windows information protection for apps running on devices which are not MDM enrolled.
    # To construct, see NOTES section for WINDOWSINFORMATIONPROTECTIONPOLICIES properties and create a hash table.
    ${WindowsInformationProtectionPolicies},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagement_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppManagement_UpdateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property deviceManagementTroubleshootingEvents in users
.Description
Update the navigation property deviceManagementTroubleshootingEvents in users
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceManagementTroubleshootingEvent>: Event representing an general failure.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [CorrelationId <String>]: Id used for tracing the failure in the service.
  [EventDateTime <DateTime?>]: Time when the event occurred .

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mguserdevicemanagementtroubleshootingevent
#>
function Update-MgUserDeviceManagementTroubleshootingEvent {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceManagementTroubleshootingEvent
    ${DeviceManagementTroubleshootingEventId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent]
    # Event representing an general failure.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Id used for tracing the failure in the service.
    ${CorrelationId},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Time when the event occurred .
    ${EventDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserDeviceManagementTroubleshootingEvent_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserDeviceManagementTroubleshootingEvent_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserDeviceManagementTroubleshootingEvent_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserDeviceManagementTroubleshootingEvent_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a deviceCategory object.
.Description
Update the properties of a deviceCategory object.
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCategory
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCategory
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceCategory>: Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Description <String>]: Optional description for the device category.
  [DisplayName <String>]: Display name for the device category.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgusermanageddevicecategory
#>
function Update-MgUserManagedDeviceCategory {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCategory])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCategory]
    # Device categories provides a way to organize your devices.
    # Using device categories, company administrators can define their own categories that make sense to their company.
    # These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment.
    # You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Optional description for the device category.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Display name for the device category.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCategory_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCategory_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCategory_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCategory_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property deviceCompliancePolicyStates in users
.Description
Update the navigation property deviceCompliancePolicyStates in users
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceCompliancePolicyState>: Device Compliance Policy State for a given device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceCompliancePolicySettingState[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy

SETTINGSTATES <IMicrosoftGraphDeviceCompliancePolicySettingState[]>: .
  [CurrentValue <String>]: Current value of setting on device
  [ErrorCode <Int64?>]: Error code for the setting
  [ErrorDescription <String>]: Error description
  [InstanceDisplayName <String>]: Name of setting instance that is being reported.
  [Setting <String>]: The setting that is being reported
  [SettingName <String>]: Localized/user friendly setting name that is being reported
  [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
    [DisplayName <String>]: Not yet documented
    [Id <String>]: Not yet documented
    [SourceType <String>]: settingSourceType
  [State <String>]: complianceStatus
  [UserEmail <String>]: UserEmail
  [UserId <String>]: UserId
  [UserName <String>]: UserName
  [UserPrincipalName <String>]: UserPrincipalName.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgusermanageddevicecompliancepolicystate
#>
function Update-MgUserManagedDeviceCompliancePolicyState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceCompliancePolicyState
    ${DeviceCompliancePolicyStateId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState]
    # Device Compliance Policy State for a given device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The name of the policy for this policyBase
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.PolicyPlatformType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.PolicyPlatformType]
    # Supported platform types for policies.
    ${PlatformType},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of how many setting a policy holds
    ${SettingCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicySettingState[]]
    # .
    # To construct, see NOTES section for SETTINGSTATES properties and create a hash table.
    ${SettingStates},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${State},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # The version of the policy
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCompliancePolicyState_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCompliancePolicyState_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCompliancePolicyState_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCompliancePolicyState_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property deviceConfigurationStates in users
.Description
Update the navigation property deviceConfigurationStates in users
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceConfigurationState>: Device Configuration State for a given device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceConfigurationSettingState[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy

SETTINGSTATES <IMicrosoftGraphDeviceConfigurationSettingState[]>: .
  [CurrentValue <String>]: Current value of setting on device
  [ErrorCode <Int64?>]: Error code for the setting
  [ErrorDescription <String>]: Error description
  [InstanceDisplayName <String>]: Name of setting instance that is being reported.
  [Setting <String>]: The setting that is being reported
  [SettingName <String>]: Localized/user friendly setting name that is being reported
  [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
    [DisplayName <String>]: Not yet documented
    [Id <String>]: Not yet documented
    [SourceType <String>]: settingSourceType
  [State <String>]: complianceStatus
  [UserEmail <String>]: UserEmail
  [UserId <String>]: UserId
  [UserName <String>]: UserName
  [UserPrincipalName <String>]: UserPrincipalName.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgusermanageddeviceconfigurationstate
#>
function Update-MgUserManagedDeviceConfigurationState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceConfigurationState
    ${DeviceConfigurationStateId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState]
    # Device Configuration State for a given device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The name of the policy for this policyBase
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.PolicyPlatformType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.PolicyPlatformType]
    # Supported platform types for policies.
    ${PlatformType},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of how many setting a policy holds
    ${SettingCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationSettingState[]]
    # .
    # To construct, see NOTES section for SETTINGSTATES properties and create a hash table.
    ${SettingStates},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${State},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # The version of the policy
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceConfigurationState_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceConfigurationState_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceConfigurationState_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceConfigurationState_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property logCollectionRequests in users
.Description
Update the navigation property logCollectionRequests in users
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceLogCollectionResponse
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceLogCollectionResponse
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceLogCollectionResponse>: Windows Log Collection request entity.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [EnrolledByUser <String>]: The User Principal Name (UPN) of the user that enrolled the device.
  [ExpirationDateTimeUtc <DateTime?>]: The DateTime of the expiration of the logs.
  [InitiatedByUserPrincipalName <String>]: The UPN for who initiated the request.
  [ManagedDeviceId <String>]: Indicates Intune device unique identifier.
  [ReceivedDateTimeUtc <DateTime?>]: The DateTime the request was received.
  [RequestedDateTimeUtc <DateTime?>]: The DateTime of the request.
  [SizeInKb <Double?>]: The size of the logs in KB. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
  [Status <AppLogUploadState?>]: AppLogUploadStatus

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgusermanageddevicelogcollectionresponse
#>
function Update-MgUserManagedDeviceLogCollectionResponse {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceLogCollectionResponse])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of deviceLogCollectionResponse
    ${DeviceLogCollectionResponseId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceLogCollectionResponse]
    # Windows Log Collection request entity.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The User Principal Name (UPN) of the user that enrolled the device.
    ${EnrolledByUser},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The DateTime of the expiration of the logs.
    ${ExpirationDateTimeUtc},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The UPN for who initiated the request.
    ${InitiatedByUserPrincipalName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Indicates Intune device unique identifier.
    ${ManagedDeviceId1},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The DateTime the request was received.
    ${ReceivedDateTimeUtc},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The DateTime of the request.
    ${RequestedDateTimeUtc},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Double]
    # The size of the logs in KB.
    # Valid values -1.79769313486232E+308 to 1.79769313486232E+308
    ${SizeInKb},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.AppLogUploadState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.AppLogUploadState]
    # AppLogUploadStatus
    ${Status},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceLogCollectionResponse_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceLogCollectionResponse_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceLogCollectionResponse_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceLogCollectionResponse_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a windowsDeviceMalwareState object.
.Description
Update the properties of a windowsDeviceMalwareState object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsDeviceMalwareState
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsDeviceMalwareState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphWindowsDeviceMalwareState>: Malware detection entity.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AdditionalInformationUrl <String>]: Information URL to learn more about the malware
  [Category <WindowsMalwareCategory?>]: Malware category id
  [DetectionCount <Int32?>]: Number of times the malware is detected
  [DisplayName <String>]: Malware name
  [ExecutionState <WindowsMalwareExecutionState?>]: Malware execution status
  [InitialDetectionDateTime <DateTime?>]: Initial detection datetime of the malware
  [LastStateChangeDateTime <DateTime?>]: The last time this particular threat was changed
  [Severity <WindowsMalwareSeverity?>]: Malware severity
  [State <WindowsMalwareState?>]: Malware current status
  [ThreatState <WindowsMalwareThreatState?>]: Malware threat status

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgusermanageddevicewindowsprotectionstatedetectedmalwarestate
#>
function Update-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsDeviceMalwareState])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of windowsDeviceMalwareState
    ${WindowsDeviceMalwareStateId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsDeviceMalwareState]
    # Malware detection entity.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Information URL to learn more about the malware
    ${AdditionalInformationUrl},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsMalwareCategory])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsMalwareCategory]
    # Malware category id
    ${Category},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of times the malware is detected
    ${DetectionCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Malware name
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsMalwareExecutionState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsMalwareExecutionState]
    # Malware execution status
    ${ExecutionState},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Initial detection datetime of the malware
    ${InitialDetectionDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The last time this particular threat was changed
    ${LastStateChangeDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsMalwareSeverity])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsMalwareSeverity]
    # Malware severity
    ${Severity},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsMalwareState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsMalwareState]
    # Malware current status
    ${State},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsMalwareThreatState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsMalwareThreatState]
    # Malware threat status
    ${ThreatState},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceWindowsProtectionStateDetectedMalwareState_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the properties of a windowsProtectionState object.
.Description
Update the properties of a windowsProtectionState object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsProtectionState
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsProtectionState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphWindowsProtectionState>: Device protection status entity.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AntiMalwareVersion <String>]: Current anti malware version
  [DetectedMalwareState <IMicrosoftGraphWindowsDeviceMalwareState[]>]: Device malware list
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AdditionalInformationUrl <String>]: Information URL to learn more about the malware
    [Category <WindowsMalwareCategory?>]: Malware category id
    [DetectionCount <Int32?>]: Number of times the malware is detected
    [DisplayName <String>]: Malware name
    [ExecutionState <WindowsMalwareExecutionState?>]: Malware execution status
    [InitialDetectionDateTime <DateTime?>]: Initial detection datetime of the malware
    [LastStateChangeDateTime <DateTime?>]: The last time this particular threat was changed
    [Severity <WindowsMalwareSeverity?>]: Malware severity
    [State <WindowsMalwareState?>]: Malware current status
    [ThreatState <WindowsMalwareThreatState?>]: Malware threat status
  [DeviceState <WindowsDeviceHealthState?>]: Computer endpoint protection state
  [EngineVersion <String>]: Current endpoint protection engine's version
  [FullScanOverdue <Boolean?>]: When TRUE indicates full scan is overdue, when FALSE indicates full scan is not overdue. Defaults to setting on client device.
  [FullScanRequired <Boolean?>]: When TRUE indicates full scan is required, when FALSE indicates full scan is not required. Defaults to setting on client device.
  [IsVirtualMachine <Boolean?>]: When TRUE indicates the device is a virtual machine, when FALSE indicates the device is not a virtual machine. Defaults to setting on client device.
  [LastFullScanDateTime <DateTime?>]: Last quick scan datetime
  [LastFullScanSignatureVersion <String>]: Last full scan signature version
  [LastQuickScanDateTime <DateTime?>]: Last quick scan datetime
  [LastQuickScanSignatureVersion <String>]: Last quick scan signature version
  [LastReportedDateTime <DateTime?>]: Last device health status reported time
  [MalwareProtectionEnabled <Boolean?>]: When TRUE indicates anti malware is enabled when FALSE indicates anti malware is not enabled.
  [NetworkInspectionSystemEnabled <Boolean?>]: When TRUE indicates network inspection system enabled, when FALSE indicates network inspection system is not enabled. Defaults to setting on client device.
  [ProductStatus <WindowsDefenderProductStatus?>]: Product Status of Windows Defender
  [QuickScanOverdue <Boolean?>]: When TRUE indicates quick scan is overdue, when FALSE indicates quick scan is not overdue. Defaults to setting on client device.
  [RealTimeProtectionEnabled <Boolean?>]: When TRUE indicates real time protection is enabled, when FALSE indicates real time protection is not enabled. Defaults to setting on client device.
  [RebootRequired <Boolean?>]: When TRUE indicates reboot is required, when FALSE indicates when TRUE indicates reboot is not required. Defaults to setting on client device.
  [SignatureUpdateOverdue <Boolean?>]: When TRUE indicates signature is out of date, when FALSE indicates signature is not out of date. Defaults to setting on client device.
  [SignatureVersion <String>]: Current malware definitions version
  [TamperProtectionEnabled <Boolean?>]: When TRUE indicates the Windows Defender tamper protection feature is enabled, when FALSE indicates the Windows Defender tamper protection feature is not enabled. Defaults to setting on client device.

DETECTEDMALWARESTATE <IMicrosoftGraphWindowsDeviceMalwareState[]>: Device malware list
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AdditionalInformationUrl <String>]: Information URL to learn more about the malware
  [Category <WindowsMalwareCategory?>]: Malware category id
  [DetectionCount <Int32?>]: Number of times the malware is detected
  [DisplayName <String>]: Malware name
  [ExecutionState <WindowsMalwareExecutionState?>]: Malware execution status
  [InitialDetectionDateTime <DateTime?>]: Initial detection datetime of the malware
  [LastStateChangeDateTime <DateTime?>]: The last time this particular threat was changed
  [Severity <WindowsMalwareSeverity?>]: Malware severity
  [State <WindowsMalwareState?>]: Malware current status
  [ThreatState <WindowsMalwareThreatState?>]: Malware threat status

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgusermanageddevicewindowsprotectionstate
#>
function Update-MgUserManagedDeviceWindowsProtectionState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsProtectionState])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsProtectionState]
    # Device protection status entity.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Current anti malware version
    ${AntiMalwareVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsDeviceMalwareState[]]
    # Device malware list
    # To construct, see NOTES section for DETECTEDMALWARESTATE properties and create a hash table.
    ${DetectedMalwareState},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsDeviceHealthState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsDeviceHealthState]
    # Computer endpoint protection state
    ${DeviceState},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Current endpoint protection engine's version
    ${EngineVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When TRUE indicates full scan is overdue, when FALSE indicates full scan is not overdue.
    # Defaults to setting on client device.
    ${FullScanOverdue},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When TRUE indicates full scan is required, when FALSE indicates full scan is not required.
    # Defaults to setting on client device.
    ${FullScanRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When TRUE indicates the device is a virtual machine, when FALSE indicates the device is not a virtual machine.
    # Defaults to setting on client device.
    ${IsVirtualMachine},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last quick scan datetime
    ${LastFullScanDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Last full scan signature version
    ${LastFullScanSignatureVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last quick scan datetime
    ${LastQuickScanDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Last quick scan signature version
    ${LastQuickScanSignatureVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last device health status reported time
    ${LastReportedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When TRUE indicates anti malware is enabled when FALSE indicates anti malware is not enabled.
    ${MalwareProtectionEnabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When TRUE indicates network inspection system enabled, when FALSE indicates network inspection system is not enabled.
    # Defaults to setting on client device.
    ${NetworkInspectionSystemEnabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.WindowsDefenderProductStatus])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.WindowsDefenderProductStatus]
    # Product Status of Windows Defender
    ${ProductStatus},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When TRUE indicates quick scan is overdue, when FALSE indicates quick scan is not overdue.
    # Defaults to setting on client device.
    ${QuickScanOverdue},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When TRUE indicates real time protection is enabled, when FALSE indicates real time protection is not enabled.
    # Defaults to setting on client device.
    ${RealTimeProtectionEnabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When TRUE indicates reboot is required, when FALSE indicates when TRUE indicates reboot is not required.
    # Defaults to setting on client device.
    ${RebootRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When TRUE indicates signature is out of date, when FALSE indicates signature is not out of date.
    # Defaults to setting on client device.
    ${SignatureUpdateOverdue},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Current malware definitions version
    ${SignatureVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When TRUE indicates the Windows Defender tamper protection feature is enabled, when FALSE indicates the Windows Defender tamper protection feature is not enabled.
    # Defaults to setting on client device.
    ${TamperProtectionEnabled},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceWindowsProtectionState_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceWindowsProtectionState_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceWindowsProtectionState_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceWindowsProtectionState_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

<#
.Synopsis
Update the navigation property managedDevices in users
.Description
Update the navigation property managedDevices in users
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}
.Example
PS C:\> {{ Add code here }}

{{ Add output here }}

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDevice>: Devices that are managed or pre-enrolled through Intune
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [ComplianceState <ComplianceState?>]: Compliance state.
  [ConfigurationManagerClientEnabledFeatures <IMicrosoftGraphConfigurationManagerClientEnabledFeatures>]: configuration Manager client enabled features
    [(Any) <Object>]: This indicates any property can be added to this object.
    [CompliancePolicy <Boolean?>]: Whether compliance policy is managed by Intune
    [DeviceConfiguration <Boolean?>]: Whether device configuration is managed by Intune
    [Inventory <Boolean?>]: Whether inventory is managed by Intune
    [ModernApps <Boolean?>]: Whether modern application is managed by Intune
    [ResourceAccess <Boolean?>]: Whether resource access is managed by Intune
    [WindowsUpdateForBusiness <Boolean?>]: Whether Windows Update for Business is managed by Intune
  [DeviceCategory <IMicrosoftGraphDeviceCategory>]: Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Description <String>]: Optional description for the device category.
    [DisplayName <String>]: Display name for the device category.
  [DeviceCompliancePolicyStates <IMicrosoftGraphDeviceCompliancePolicyState[]>]: Device compliance policy states for this device.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The name of the policy for this policyBase
    [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
    [SettingCount <Int32?>]: Count of how many setting a policy holds
    [SettingStates <IMicrosoftGraphDeviceCompliancePolicySettingState[]>]: 
      [CurrentValue <String>]: Current value of setting on device
      [ErrorCode <Int64?>]: Error code for the setting
      [ErrorDescription <String>]: Error description
      [InstanceDisplayName <String>]: Name of setting instance that is being reported.
      [Setting <String>]: The setting that is being reported
      [SettingName <String>]: Localized/user friendly setting name that is being reported
      [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
        [DisplayName <String>]: Not yet documented
        [Id <String>]: Not yet documented
        [SourceType <String>]: settingSourceType
      [State <String>]: complianceStatus
      [UserEmail <String>]: UserEmail
      [UserId <String>]: UserId
      [UserName <String>]: UserName
      [UserPrincipalName <String>]: UserPrincipalName.
    [State <String>]: complianceStatus
    [Version <Int32?>]: The version of the policy
  [DeviceConfigurationStates <IMicrosoftGraphDeviceConfigurationState[]>]: Device configuration states for this device.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [DisplayName <String>]: The name of the policy for this policyBase
    [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
    [SettingCount <Int32?>]: Count of how many setting a policy holds
    [SettingStates <IMicrosoftGraphDeviceConfigurationSettingState[]>]: 
      [CurrentValue <String>]: Current value of setting on device
      [ErrorCode <Int64?>]: Error code for the setting
      [ErrorDescription <String>]: Error description
      [InstanceDisplayName <String>]: Name of setting instance that is being reported.
      [Setting <String>]: The setting that is being reported
      [SettingName <String>]: Localized/user friendly setting name that is being reported
      [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [State <String>]: complianceStatus
      [UserEmail <String>]: UserEmail
      [UserId <String>]: UserId
      [UserName <String>]: UserName
      [UserPrincipalName <String>]: UserPrincipalName.
    [State <String>]: complianceStatus
    [Version <Int32?>]: The version of the policy
  [DeviceEnrollmentType <DeviceEnrollmentType?>]: Possible ways of adding a mobile device to management.
  [DeviceHealthAttestationState <IMicrosoftGraphDeviceHealthAttestationState>]: deviceHealthAttestationState
    [(Any) <Object>]: This indicates any property can be added to this object.
    [AttestationIdentityKey <String>]: TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.
    [BitLockerStatus <String>]: On or Off of BitLocker Drive Encryption
    [BootAppSecurityVersion <String>]: The security version number of the Boot Application
    [BootDebugging <String>]: When bootDebugging is enabled, the device is used in development and testing
    [BootManagerSecurityVersion <String>]: The security version number of the Boot Application
    [BootManagerVersion <String>]: The version of the Boot Manager
    [BootRevisionListInfo <String>]: The Boot Revision List that was loaded during initial boot on the attested device
    [CodeIntegrity <String>]: When code integrity is enabled, code execution is restricted to integrity verified code
    [CodeIntegrityCheckVersion <String>]: The version of the Boot Manager
    [CodeIntegrityPolicy <String>]: The Code Integrity policy that is controlling the security of the boot environment
    [ContentNamespaceUrl <String>]: The DHA report version. (Namespace version)
    [ContentVersion <String>]: The HealthAttestation state schema version
    [DataExcutionPolicy <String>]: DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
    [DeviceHealthAttestationStatus <String>]: The DHA report version. (Namespace version)
    [EarlyLaunchAntiMalwareDriverProtection <String>]: ELAM provides protection for the computers in your network when they start up
    [HealthAttestationSupportedStatus <String>]: This attribute indicates if DHA is supported for the device
    [HealthStatusMismatchInfo <String>]: This attribute appears if DHA-Service detects an integrity issue
    [IssuedDateTime <DateTime?>]: The DateTime when device was evaluated or issued to MDM
    [LastUpdateDateTime <String>]: The Timestamp of the last update.
    [OperatingSystemKernelDebugging <String>]: When operatingSystemKernelDebugging is enabled, the device is used in development and testing
    [OperatingSystemRevListInfo <String>]: The Operating System Revision List that was loaded during initial boot on the attested device
    [Pcr0 <String>]: The measurement that is captured in PCR[0]
    [PcrHashAlgorithm <String>]: Informational attribute that identifies the HASH algorithm that was used by TPM
    [ResetCount <Int64?>]: The number of times a PC device has hibernated or resumed
    [RestartCount <Int64?>]: The number of times a PC device has rebooted
    [SafeMode <String>]: Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
    [SecureBoot <String>]: When Secure Boot is enabled, the core components must have the correct cryptographic signatures
    [SecureBootConfigurationPolicyFingerPrint <String>]: Fingerprint of the Custom Secure Boot Configuration Policy
    [TestSigning <String>]: When test signing is allowed, the device does not enforce signature validation during boot
    [TpmVersion <String>]: The security version number of the Boot Application
    [VirtualSecureMode <String>]: VSM is a container that protects high value assets from a compromised kernel
    [WindowsPe <String>]: Operating system running with limited services that is used to prepare a computer for Windows
  [DeviceRegistrationState <DeviceRegistrationState?>]: Device registration status.
  [ExchangeAccessState <DeviceManagementExchangeAccessState?>]: Device Exchange Access State.
  [ExchangeAccessStateReason <DeviceManagementExchangeAccessStateReason?>]: Device Exchange Access State Reason.
  [LogCollectionRequests <IMicrosoftGraphDeviceLogCollectionResponse[]>]: List of log collection requests
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [EnrolledByUser <String>]: The User Principal Name (UPN) of the user that enrolled the device.
    [ExpirationDateTimeUtc <DateTime?>]: The DateTime of the expiration of the logs.
    [InitiatedByUserPrincipalName <String>]: The UPN for who initiated the request.
    [ManagedDeviceId <String>]: Indicates Intune device unique identifier.
    [ReceivedDateTimeUtc <DateTime?>]: The DateTime the request was received.
    [RequestedDateTimeUtc <DateTime?>]: The DateTime of the request.
    [SizeInKb <Double?>]: The size of the logs in KB. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
    [Status <AppLogUploadState?>]: AppLogUploadStatus
  [ManagedDeviceName <String>]: Automatically generated name to identify a device. Can be overwritten to a user friendly name.
  [ManagedDeviceOwnerType <ManagedDeviceOwnerType?>]: Owner type of device.
  [ManagementAgent <ManagementAgentType?>]: managementAgentType
  [Notes <String>]: Notes on the device created by IT Admin. Default is null. To retrieve actual values GET call needs to be made, with device id and included in select parameter. Supports: $select. $Search is not supported.
  [PartnerReportedThreatState <ManagedDevicePartnerReportedHealthState?>]: Available health states for the Device Health API
  [Users <IMicrosoftGraphUser[]>]: The primary users associated with the managed device.
    [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AboutMe <String>]: A freeform text entry field for the user to describe themselves. Returned only on $select.
    [AccountEnabled <Boolean?>]: true if the account is enabled; otherwise, false. This property is required when a user is created. Returned only on $select. Supports $filter (eq, ne, not, and in).
    [Activities <IMicrosoftGraphUserActivity[]>]: The user's activities across devices. Read-only. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ActivationUrl <String>]: Required. URL used to launch the activity in the best native experience represented by the appId. Might launch a web-based app if no native app exists.
      [ActivitySourceHost <String>]: Required. URL for the domain representing the cross-platform identity mapping for the app. Mapping is stored either as a JSON file hosted on the domain or configurable via Windows Dev Center. The JSON file is named cross-platform-app-identifiers and is hosted at root of your HTTPS domain, either at the top level domain or include a sub domain. For example: https://contoso.com or https://myapp.contoso.com but NOT https://myapp.contoso.com/somepath. You must have a unique file and domain (or sub domain) per cross-platform app identity. For example, a separate file and domain is needed for Word vs. PowerPoint.
      [AppActivityId <String>]: Required. The unique activity ID in the context of the app - supplied by caller and immutable thereafter.
      [AppDisplayName <String>]: Optional. Short text description of the app used to generate the activity for use in cases when the app is not installed on the user’s local device.
      [ContentInfo <IMicrosoftGraphJson>]: Json
        [(Any) <Object>]: This indicates any property can be added to this object.
      [ContentUrl <String>]: Optional. Used in the event the content can be rendered outside of a native or web-based app experience (for example, a pointer to an item in an RSS feed).
      [CreatedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was created on the server.
      [ExpirationDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object expired on the server.
      [FallbackUrl <String>]: Optional. URL used to launch the activity in a web-based app, if available.
      [HistoryItems <IMicrosoftGraphActivityHistoryItem[]>]: Optional. NavigationProperty/Containment; navigation property to the activity's historyItems.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [ActiveDurationSeconds <Int32?>]: Optional. The duration of active user engagement. if not supplied, this is calculated from the startedDateTime and lastActiveDateTime.
        [Activity <IMicrosoftGraphUserActivity>]: userActivity
        [CreatedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was created on the server.
        [ExpirationDateTime <DateTime?>]: Optional. UTC DateTime when the historyItem will undergo hard-delete. Can be set by the client.
        [LastActiveDateTime <DateTime?>]: Optional. UTC DateTime when the historyItem (activity session) was last understood as active or finished - if null, historyItem status should be Ongoing.
        [LastModifiedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was modified on the server.
        [StartedDateTime <DateTime?>]: Required. UTC DateTime when the historyItem (activity session) was started. Required for timeline history.
        [Status <String>]: status
        [UserTimezone <String>]: Optional. The timezone in which the user's device used to generate the activity was located at activity creation time. Values supplied as Olson IDs in order to support cross-platform representation.
      [LastModifiedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was modified on the server.
      [Status <String>]: status
      [UserTimezone <String>]: Optional. The timezone in which the user's device used to generate the activity was located at activity creation time; values supplied as Olson IDs in order to support cross-platform representation.
      [VisualElements <IMicrosoftGraphVisualInfo>]: visualInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Attribution <IMicrosoftGraphImageInfo>]: imageInfo
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AddImageQuery <Boolean?>]: Optional; parameter used to indicate the server is able to render image dynamically in response to parameterization. For example – a high contrast image
          [AlternateText <String>]: Optional; alt-text accessible content for the image
          [AlternativeText <String>]: 
          [IconUrl <String>]: Optional; URI that points to an icon which represents the application used to generate the activity
        [BackgroundColor <String>]: Optional. Background color used to render the activity in the UI - brand color for the application source of the activity. Must be a valid hex color
        [Content <IMicrosoftGraphJson>]: Json
        [Description <String>]: Optional. Longer text description of the user's unique activity (example: document name, first sentence, and/or metadata)
        [DisplayText <String>]: Required. Short text description of the user's unique activity (for example, document name in cases where an activity refers to document creation)
    [AgeGroup <String>]: Sets the age group of the user. Allowed values: null, Minor, NotAdult and Adult. Refer to the legal age group property definitions for further information. Returned only on $select. Supports $filter (eq, ne, not, and in).
    [AgreementAcceptances <IMicrosoftGraphAgreementAcceptance[]>]: The user's terms of use acceptance statuses. Read-only. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AgreementFileId <String>]: The identifier of the agreement file accepted by the user.
      [AgreementId <String>]: The identifier of the agreement.
      [DeviceDisplayName <String>]: The display name of the device used for accepting the agreement.
      [DeviceId <String>]: The unique identifier of the device used for accepting the agreement. Supports $filter (eq) and eq for null values.
      [DeviceOSType <String>]: The operating system used to accept the agreement.
      [DeviceOSVersion <String>]: The operating system version of the device used to accept the agreement.
      [ExpirationDateTime <DateTime?>]: The expiration date time of the acceptance. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Supports $filter (eq, ge, le) and eq for null values.
      [RecordedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
      [State <String>]: agreementAcceptanceState
      [UserDisplayName <String>]: Display name of the user when the acceptance was recorded.
      [UserEmail <String>]: Email of the user when the acceptance was recorded.
      [UserId <String>]: The identifier of the user who accepted the agreement. Supports $filter (eq).
      [UserPrincipalName <String>]: UPN of the user when the acceptance was recorded.
    [AppRoleAssignments <IMicrosoftGraphAppRoleAssignment[]>]: Represents the app roles a user has been granted for an application. Supports $expand.
      [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AppRoleId <String>]: The identifier (id) for the app role which is assigned to the principal. This app role must be exposed in the appRoles property on the resource application's service principal (resourceId). If the resource application has not declared any app roles, a default app role ID of 00000000-0000-0000-0000-000000000000 can be specified to signal that the principal is assigned to the resource app without any specific app roles. Required on create.
      [CreatedDateTime <DateTime?>]: The time when the app role assignment was created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
      [PrincipalDisplayName <String>]: The display name of the user, group, or service principal that was granted the app role assignment. Read-only. Supports $filter (eq and startswith).
      [PrincipalId <String>]: The unique identifier (id) for the user, security group, or service principal being granted the app role. Security groups with dynamic memberships are supported. Required on create.
      [PrincipalType <String>]: The type of the assigned principal. This can either be User, Group, or ServicePrincipal. Read-only.
      [ResourceDisplayName <String>]: The display name of the resource app's service principal to which the assignment is made.
      [ResourceId <String>]: The unique identifier (id) for the resource service principal for which the assignment is made. Required on create. Supports $filter (eq only).
    [AssignedLicenses <IMicrosoftGraphAssignedLicense[]>]: The licenses that are assigned to the user, including inherited (group-based) licenses. This property doesn't differentiate directly-assigned and inherited licenses. Use the licenseAssignmentStates property to identify the directly-assigned and inherited licenses.  Not nullable. Returned only on $select. Supports $filter (eq, not, /$count eq 0, /$count ne 0).
      [DisabledPlans <String[]>]: A collection of the unique identifiers for plans that have been disabled.
      [SkuId <String>]: The unique identifier for the SKU.
    [AssignedPlans <IMicrosoftGraphAssignedPlan[]>]: The plans that are assigned to the user. Read-only. Not nullable. Returned only on $select. Supports $filter (eq and not).
      [AssignedDateTime <DateTime?>]: The date and time at which the plan was assigned. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
      [CapabilityStatus <String>]: Condition of the capability assignment. The possible values are Enabled, Warning, Suspended, Deleted, LockedOut. See a detailed description of each value.
      [Service <String>]: The name of the service; for example, exchange.
      [ServicePlanId <String>]: A GUID that identifies the service plan. For a complete list of GUIDs and their equivalent friendly service names, see Product names and service plan identifiers for licensing.
    [Authentication <IMicrosoftGraphAuthentication>]: authentication
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [EmailMethods <IMicrosoftGraphEmailAuthenticationMethod[]>]: The email address registered to a user for authentication.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [EmailAddress <String>]: The email address registered to this user.
      [Fido2Methods <IMicrosoftGraphFido2AuthenticationMethod[]>]: Represents the FIDO2 security keys registered to a user for authentication.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AaGuid <String>]: Authenticator Attestation GUID, an identifier that indicates the type (e.g. make and model) of the authenticator.
        [AttestationCertificates <String[]>]: The attestation certificate(s) attached to this security key.
        [AttestationLevel <String>]: attestationLevel
        [CreatedDateTime <DateTime?>]: The timestamp when this key was registered to the user.
        [DisplayName <String>]: The display name of the key as given by the user.
        [Model <String>]: The manufacturer-assigned model of the FIDO2 security key.
      [Methods <IMicrosoftGraphAuthenticationMethod[]>]: Represents all authentication methods registered to a user.
        [Id <String>]: The unique idenfier for an entity. Read-only.
      [MicrosoftAuthenticatorMethods <IMicrosoftGraphMicrosoftAuthenticatorAuthenticationMethod[]>]: The details of the Microsoft Authenticator app registered to a user for authentication.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedDateTime <DateTime?>]: The date and time that this app was registered. This property is null if the device is not registered for passwordless Phone Sign-In.
        [Device <IMicrosoftGraphDevice>]: device
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AccountEnabled <Boolean?>]: true if the account is enabled; otherwise, false. Required. Default is true.  Supports $filter (eq, ne, not, in). Only callers in Global Administrator and Cloud Device Administrator roles can set this property.
          [AlternativeSecurityIds <IMicrosoftGraphAlternativeSecurityId[]>]: For internal use only. Not nullable. Supports $filter (eq, not, ge, le).
            [IdentityProvider <String>]: For internal use only.
            [Key <Byte[]>]: For internal use only.
            [Type <Int32?>]: For internal use only.
          [ApproximateLastSignInDateTime <DateTime?>]: The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Supports $filter (eq, ne, not, ge, le, and eq on null values) and $orderBy.
          [ComplianceExpirationDateTime <DateTime?>]: The timestamp when the device is no longer deemed compliant. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [DeviceCategory <String>]: User-defined property set by Intune to automatically add devices to groups and simplify managing devices.
          [DeviceId <String>]: Unique identifier set by Azure Device Registration Service at the time of registration. This is an alternate key that can be used to reference the device object. Supports $filter (eq, ne, not, startsWith).
          [DeviceMetadata <String>]: For internal use only. Set to null.
          [DeviceOwnership <String>]: Ownership of the device. This property is set by Intune. Possible values are: unknown, company, personal.
          [DeviceVersion <Int32?>]: For internal use only.
          [DisplayName <String>]: The display name for the device. Required. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values), $search, and $orderBy.
          [EnrollmentProfileName <String>]: Enrollment profile applied to the device. For example, Apple Device Enrollment Profile, Device enrollment - Corporate device identifiers, or Windows Autopilot profile name. This property is set by Intune.
          [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the device. Read-only. Nullable.
            [Id <String>]: The unique idenfier for an entity. Read-only.
          [IsCompliant <Boolean?>]: true if the device complies with Mobile Device Management (MDM) policies; otherwise, false. Read-only. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices. Supports $filter (eq, ne, not).
          [IsManaged <Boolean?>]: true if the device is managed by a Mobile Device Management (MDM) app; otherwise, false. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices. Supports $filter (eq, ne, not).
          [MdmAppId <String>]: Application identifier used to register device into MDM. Read-only. Supports $filter (eq, ne, not, startsWith).
          [MemberOf <IMicrosoftGraphDirectoryObject[]>]: Groups and administrative units that this device is a member of. Read-only. Nullable. Supports $expand.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
          [OnPremisesLastSyncDateTime <DateTime?>]: The last time at which the object was synced with the on-premises directory. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z Read-only. Supports $filter (eq, ne, not, ge, le, in).
          [OnPremisesSyncEnabled <Boolean?>]: true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only. Supports $filter (eq, ne, not, in, and eq on null values).
          [OperatingSystem <String>]: The type of operating system on the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values).
          [OperatingSystemVersion <String>]: The version of the operating system on the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values).
          [PhysicalIds <String[]>]: For internal use only. Not nullable. Supports $filter (eq, not, ge, le, startsWith,/$count eq 0, /$count ne 0).
          [ProfileType <String>]: The profile type of the device. Possible values: RegisteredDevice (default), SecureVM, Printer, Shared, IoT.
          [RegisteredOwners <IMicrosoftGraphDirectoryObject[]>]: The user that cloud joined the device or registered their personal device. The registered owner is set at the time of registration. Read-only. Nullable. Supports $expand.
          [RegisteredUsers <IMicrosoftGraphDirectoryObject[]>]: Collection of registered users of the device. For cloud joined devices and registered personal devices, registered users are set to the same value as registered owners at the time of registration. Read-only. Nullable. Supports $expand.
          [RegistrationDateTime <DateTime?>]: Date and time of when the device was registered. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [SystemLabels <String[]>]: List of labels applied to the device by the system. Supports $filter (/$count eq 0, /$count ne 0).
          [TransitiveMemberOf <IMicrosoftGraphDirectoryObject[]>]: Groups and administrative units that the device is a member of. This operation is transitive. Supports $expand.
          [TrustType <String>]: Type of trust for the joined device. Read-only. Possible values:  Workplace (indicates bring your own personal devices), AzureAd (Cloud only joined devices), ServerAd (on-premises domain joined devices joined to Azure AD). For more details, see Introduction to device management in Azure Active Directory
        [DeviceTag <String>]: Tags containing app metadata.
        [DisplayName <String>]: The name of the device on which this app is registered.
        [PhoneAppVersion <String>]: Numerical version of this instance of the Authenticator app.
      [Operations <IMicrosoftGraphLongRunningOperation[]>]: Represents the status of a long-running operation.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedDateTime <DateTime?>]: The start time of the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        [LastActionDateTime <DateTime?>]: The time of the last action in the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        [ResourceLocation <String>]: URI of the resource that the operation is performed on.
        [Status <String>]: longRunningOperationStatus
        [StatusDetail <String>]: Details about the status of the operation.
      [PasswordMethods <IMicrosoftGraphPasswordAuthenticationMethod[]>]: Represents the password that's registered to a user for authentication. For security, the password itself will never be returned in the object, but action can be taken to reset a password.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedDateTime <DateTime?>]: The date and time when this password was last updated. This property is currently not populated. Read-only. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        [Password <String>]: For security, the password is always returned as null from a LIST or GET operation.
      [PhoneMethods <IMicrosoftGraphPhoneAuthenticationMethod[]>]: The phone numbers registered to a user for authentication.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [PhoneNumber <String>]: The phone number to text or call for authentication. Phone numbers use the format +{country code} {number}x{extension}, with extension optional. For example, +1 5555551234 or +1 5555551234x123 are valid. Numbers are rejected when creating or updating if they do not match the required format.
        [PhoneType <String>]: authenticationPhoneType
        [SmsSignInState <String>]: authenticationMethodSignInState
      [SoftwareOathMethods <IMicrosoftGraphSoftwareOathAuthenticationMethod[]>]: The software OATH TOTP applications registered to a user for authentication.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [SecretKey <String>]: The secret key of the method. Always returns null.
      [TemporaryAccessPassMethods <IMicrosoftGraphTemporaryAccessPassAuthenticationMethod[]>]: Represents a Temporary Access Pass registered to a user for authentication through time-limited passcodes.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedDateTime <DateTime?>]: The date and time when the Temporary Access Pass was created.
        [IsUsable <Boolean?>]: The state of the authentication method that indicates whether it's currently usable by the user.
        [IsUsableOnce <Boolean?>]: Determines whether the pass is limited to a one-time use. If true, the pass can be used once; if false, the pass can be used multiple times within the Temporary Access Pass lifetime.
        [LifetimeInMinutes <Int32?>]: The lifetime of the Temporary Access Pass in minutes starting at startDateTime. Must be between 10 and 43200 inclusive (equivalent to 30 days).
        [MethodUsabilityReason <String>]: Details about the usability state (isUsable). Reasons can include: EnabledByPolicy, DisabledByPolicy, Expired, NotYetValid, OneTimeUsed.
        [StartDateTime <DateTime?>]: The date and time when the Temporary Access Pass becomes available to use and when isUsable is true is enforced.
        [TemporaryAccessPass <String>]: The Temporary Access Pass used to authenticate. Returned only on creation of a new temporaryAccessPassAuthenticationMethod object; Hidden in subsequent read operations and returned as null with GET.
      [WindowsHelloForBusinessMethods <IMicrosoftGraphWindowsHelloForBusinessAuthenticationMethod[]>]: Represents the Windows Hello for Business authentication method registered to a user for authentication.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedDateTime <DateTime?>]: The date and time that this Windows Hello for Business key was registered.
        [Device <IMicrosoftGraphDevice>]: device
        [DisplayName <String>]: The name of the device on which Windows Hello for Business is registered
        [KeyStrength <String>]: authenticationMethodKeyStrength
    [AuthorizationInfo <IMicrosoftGraphAuthorizationInfo>]: authorizationInfo
      [(Any) <Object>]: This indicates any property can be added to this object.
      [CertificateUserIds <String[]>]: 
    [Birthday <DateTime?>]: The birthday of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned only on $select.
    [BusinessPhones <String[]>]: The telephone numbers for the user. NOTE: Although this is a string collection, only one number can be set for this property. Read-only for users synced from on-premises directory. Returned by default. Supports $filter (eq, not, ge, le, startsWith).
    [Calendar <IMicrosoftGraphCalendar>]: calendar
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AllowedOnlineMeetingProviders <String[]>]: Represent the online meeting service providers that can be used to create online meetings in this calendar. Possible values are: unknown, skypeForBusiness, skypeForConsumer, teamsForBusiness.
      [CalendarPermissions <IMicrosoftGraphCalendarPermission[]>]: The permissions of the users with whom the calendar is shared.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AllowedRoles <String[]>]: List of allowed sharing or delegating permission levels for the calendar. Possible values are: none, freeBusyRead, limitedRead, read, write, delegateWithoutPrivateEventAccess, delegateWithPrivateEventAccess, custom.
        [EmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Address <String>]: The email address of the person or entity.
          [Name <String>]: The display name of the person or entity.
        [IsInsideOrganization <Boolean?>]: True if the user in context (sharee or delegate) is inside the same organization as the calendar owner.
        [IsRemovable <Boolean?>]: True if the user can be removed from the list of sharees or delegates for the specified calendar, false otherwise. The 'My organization' user determines the permissions other people within your organization have to the given calendar. You cannot remove 'My organization' as a sharee to a calendar.
        [Role <String>]: calendarRoleType
      [CalendarView <IMicrosoftGraphEvent[]>]: The calendar view for the calendar. Navigation property. Read-only.
        [Categories <String[]>]: The categories associated with the item
        [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
        [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AllowNewTimeProposals <Boolean?>]: true if the meeting organizer allows invitees to propose a new time when responding; otherwise, false. Optional. Default is true.
        [Attachments <IMicrosoftGraphAttachment[]>]: The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [ContentType <String>]: The MIME type.
          [IsInline <Boolean?>]: true if the attachment is an inline attachment; otherwise, false.
          [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
          [Name <String>]: The attachment's file name.
          [Size <Int32?>]: The length of the attachment in bytes.
        [Attendees <IMicrosoftGraphAttendee[]>]: The collection of attendees for the event.
          [Type <String>]: attendeeType
          [EmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
          [ProposedNewTime <IMicrosoftGraphTimeSlot>]: timeSlot
            [(Any) <Object>]: This indicates any property can be added to this object.
            [End <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
              [(Any) <Object>]: This indicates any property can be added to this object.
              [DateTime <String>]: A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000).
              [TimeZone <String>]: Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values.
            [Start <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
          [Status <IMicrosoftGraphResponseStatus>]: responseStatus
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Response <String>]: responseType
            [Time <DateTime?>]: The date and time when the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [Body <IMicrosoftGraphItemBody>]: itemBody
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Content <String>]: The content of the item.
          [ContentType <String>]: bodyType
        [BodyPreview <String>]: The preview of the message associated with the event. It is in text format.
        [Calendar <IMicrosoftGraphCalendar>]: calendar
        [End <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the event. Nullable.
        [HasAttachments <Boolean?>]: Set to true if the event has attachments.
        [HideAttendees <Boolean?>]: When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. Default is false.
        [ICalUId <String>]: A unique identifier for an event across calendars. This ID is different for each occurrence in a recurring series. Read-only.
        [Importance <String>]: importance
        [Instances <IMicrosoftGraphEvent[]>]: The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions that have been modified, but does not include occurrences that have been cancelled from the series. Navigation property. Read-only. Nullable.
        [IsAllDay <Boolean?>]: 
        [IsCancelled <Boolean?>]: 
        [IsDraft <Boolean?>]: 
        [IsOnlineMeeting <Boolean?>]: 
        [IsOrganizer <Boolean?>]: 
        [IsReminderOn <Boolean?>]: 
        [Location <IMicrosoftGraphLocation>]: location
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Address <IMicrosoftGraphPhysicalAddress>]: physicalAddress
            [(Any) <Object>]: This indicates any property can be added to this object.
            [City <String>]: The city.
            [CountryOrRegion <String>]: The country or region. It's a free-format string value, for example, 'United States'.
            [PostalCode <String>]: The postal code.
            [State <String>]: The state.
            [Street <String>]: The street.
          [Coordinates <IMicrosoftGraphOutlookGeoCoordinates>]: outlookGeoCoordinates
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Accuracy <Double?>]: The accuracy of the latitude and longitude. As an example, the accuracy can be measured in meters, such as the latitude and longitude are accurate to within 50 meters.
            [Altitude <Double?>]: The altitude of the location.
            [AltitudeAccuracy <Double?>]: The accuracy of the altitude.
            [Latitude <Double?>]: The latitude of the location.
            [Longitude <Double?>]: The longitude of the location.
          [DisplayName <String>]: The name associated with the location.
          [LocationEmailAddress <String>]: Optional email address of the location.
          [LocationType <String>]: locationType
          [LocationUri <String>]: Optional URI representing the location.
          [UniqueId <String>]: For internal use only.
          [UniqueIdType <String>]: locationUniqueIdType
        [Locations <IMicrosoftGraphLocation[]>]: 
        [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the event. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Value <String[]>]: A collection of property values.
        [OnlineMeeting <IMicrosoftGraphOnlineMeetingInfo>]: onlineMeetingInfo
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ConferenceId <String>]: The ID of the conference.
          [JoinUrl <String>]: The external link that launches the online meeting. This is a URL that clients will launch into a browser and will redirect the user to join the meeting.
          [Phones <IMicrosoftGraphPhone[]>]: All of the phone numbers associated with this conference.
            [Language <String>]: 
            [Number <String>]: The phone number.
            [Region <String>]: 
            [Type <String>]: phoneType
          [QuickDial <String>]: The pre-formatted quickdial for this call.
          [TollFreeNumbers <String[]>]: The toll free numbers that can be used to join the conference.
          [TollNumber <String>]: The toll number that can be used to join the conference.
        [OnlineMeetingProvider <String>]: onlineMeetingProviderType
        [OnlineMeetingUrl <String>]: 
        [Organizer <IMicrosoftGraphRecipient>]: recipient
          [(Any) <Object>]: This indicates any property can be added to this object.
          [EmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
        [OriginalEndTimeZone <String>]: 
        [OriginalStart <DateTime?>]: 
        [OriginalStartTimeZone <String>]: 
        [Recurrence <IMicrosoftGraphPatternedRecurrence>]: patternedRecurrence
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Pattern <IMicrosoftGraphRecurrencePattern>]: recurrencePattern
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DayOfMonth <Int32?>]: The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly.
            [DaysOfWeek <String[]>]: A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly.
            [FirstDayOfWeek <String>]: dayOfWeek
            [Index <String>]: weekIndex
            [Interval <Int32?>]: The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required.
            [Month <Int32?>]: The month in which the event occurs.  This is a number from 1 to 12.
            [Type <String>]: recurrencePatternType
          [Range <IMicrosoftGraphRecurrenceRange>]: recurrenceRange
            [(Any) <Object>]: This indicates any property can be added to this object.
            [EndDate <DateTime?>]: The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate.
            [NumberOfOccurrences <Int32?>]: The number of times to repeat the event. Required and must be positive if type is numbered.
            [RecurrenceTimeZone <String>]: Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used.
            [StartDate <DateTime?>]: The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.
            [Type <String>]: recurrenceRangeType
        [ReminderMinutesBeforeStart <Int32?>]: 
        [ResponseRequested <Boolean?>]: 
        [ResponseStatus <IMicrosoftGraphResponseStatus>]: responseStatus
        [Sensitivity <String>]: sensitivity
        [SeriesMasterId <String>]: 
        [ShowAs <String>]: freeBusyStatus
        [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the event. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Value <String>]: A property value.
        [Start <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [Subject <String>]: 
        [TransactionId <String>]: 
        [Type <String>]: eventType
        [WebLink <String>]: 
      [CanEdit <Boolean?>]: true if the user can write to the calendar, false otherwise. This property is true for the user who created the calendar. This property is also true for a user who has been shared a calendar and granted write access.
      [CanShare <Boolean?>]: true if the user has the permission to share the calendar, false otherwise. Only the user who created the calendar can share it.
      [CanViewPrivateItems <Boolean?>]: true if the user can read calendar items that have been marked private, false otherwise.
      [ChangeKey <String>]: Identifies the version of the calendar object. Every time the calendar is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
      [Color <String>]: calendarColor
      [DefaultOnlineMeetingProvider <String>]: onlineMeetingProviderType
      [Events <IMicrosoftGraphEvent[]>]: The events in the calendar. Navigation property. Read-only.
      [HexColor <String>]: The calendar color, expressed in a hex color code of three hexadecimal values, each ranging from 00 to FF and representing the red, green, or blue components of the color in the RGB color space. If the user has never explicitly set a color for the calendar, this property is empty. Read-only.
      [IsDefaultCalendar <Boolean?>]: true if this is the default calendar where new events are created by default, false otherwise.
      [IsRemovable <Boolean?>]: Indicates whether this user calendar can be deleted from the user mailbox.
      [IsTallyingResponses <Boolean?>]: Indicates whether this user calendar supports tracking of meeting responses. Only meeting invites sent from users' primary calendars support tracking of meeting responses.
      [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the calendar. Read-only. Nullable.
      [Name <String>]: The calendar name.
      [Owner <IMicrosoftGraphEmailAddress>]: emailAddress
      [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the calendar. Read-only. Nullable.
    [CalendarGroups <IMicrosoftGraphCalendarGroup[]>]: The user's calendar groups. Read-only. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Calendars <IMicrosoftGraphCalendar[]>]: The calendars in the calendar group. Navigation property. Read-only. Nullable.
      [ChangeKey <String>]: Identifies the version of the calendar group. Every time the calendar group is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
      [ClassId <String>]: The class identifier. Read-only.
      [Name <String>]: The group name.
    [CalendarView <IMicrosoftGraphEvent[]>]: The calendar view for the calendar. Read-only. Nullable.
    [Calendars <IMicrosoftGraphCalendar[]>]: The user's calendars. Read-only. Nullable.
    [Chats <IMicrosoftGraphChat[]>]: 
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ChatType <String>]: chatType
      [CreatedDateTime <DateTime?>]: Date and time at which the chat was created. Read-only.
      [InstalledApps <IMicrosoftGraphTeamsAppInstallation[]>]: A collection of all the apps in the chat. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [ConsentedPermissionSet <IMicrosoftGraphTeamsAppPermissionSet>]: teamsAppPermissionSet
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ResourceSpecificPermissions <IMicrosoftGraphTeamsAppResourceSpecificPermission[]>]: A collection of resource-specific permissions.
            [PermissionType <String>]: teamsAppResourceSpecificPermissionType
            [PermissionValue <String>]: The name of the resource-specific permission.
        [TeamsApp <IMicrosoftGraphTeamsApp>]: teamsApp
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AppDefinitions <IMicrosoftGraphTeamsAppDefinition[]>]: The details for each version of the app.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Authorization <IMicrosoftGraphTeamsAppAuthorization>]: teamsAppAuthorization
              [(Any) <Object>]: This indicates any property can be added to this object.
              [RequiredPermissionSet <IMicrosoftGraphTeamsAppPermissionSet>]: teamsAppPermissionSet
            [Bot <IMicrosoftGraphTeamworkBot>]: teamworkBot
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
            [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Application <IMicrosoftGraphIdentity>]: identity
                [(Any) <Object>]: This indicates any property can be added to this object.
                [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
                [Id <String>]: Unique identifier for the identity.
              [Device <IMicrosoftGraphIdentity>]: identity
              [User <IMicrosoftGraphIdentity>]: identity
            [Description <String>]: Verbose description of the application.
            [DisplayName <String>]: The name of the app provided by the app developer.
            [LastModifiedDateTime <DateTime?>]: 
            [PublishingState <String>]: teamsAppPublishingState
            [ShortDescription <String>]: Short description of the application.
            [TeamsAppId <String>]: The ID from the Teams app manifest.
            [Version <String>]: The version number of the application.
          [DisplayName <String>]: The name of the catalog app provided by the app developer in the Microsoft Teams zip app package.
          [DistributionMethod <String>]: teamsAppDistributionMethod
          [ExternalId <String>]: The ID of the catalog provided by the app developer in the Microsoft Teams zip app package.
        [TeamsAppDefinition <IMicrosoftGraphTeamsAppDefinition>]: teamsAppDefinition
      [LastMessagePreview <IMicrosoftGraphChatMessageInfo>]: chatMessageInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Body <IMicrosoftGraphItemBody>]: itemBody
        [CreatedDateTime <DateTime?>]: Date time object representing the time at which message was created.
        [EventDetail <IMicrosoftGraphEventMessageDetail>]: eventMessageDetail
          [(Any) <Object>]: This indicates any property can be added to this object.
        [From <IMicrosoftGraphChatMessageFromIdentitySet>]: chatMessageFromIdentitySet
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Application <IMicrosoftGraphIdentity>]: identity
          [Device <IMicrosoftGraphIdentity>]: identity
          [User <IMicrosoftGraphIdentity>]: identity
        [IsDeleted <Boolean?>]: If set to true, the original message has been deleted.
        [MessageType <String>]: chatMessageType
      [LastUpdatedDateTime <DateTime?>]: Date and time at which the chat was renamed or list of members were last changed. Read-only.
      [Members <IMicrosoftGraphConversationMember[]>]: A collection of all the members in the chat. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DisplayName <String>]: The display name of the user.
        [Roles <String[]>]: The roles for that user. This property contains additional qualifiers only when relevant - for example, if the member has owner privileges, the roles property contains owner as one of the values. Similarly, if the member is an in-tenant guest, the roles property contains guest as one of the values. A basic member should not have any values specified in the roles property. An Out-of-tenant external member is assigned the owner role.
        [VisibleHistoryStartDateTime <DateTime?>]: The timestamp denoting how far back a conversation's history is shared with the conversation member. This property is settable only for members of a chat.
      [Messages <IMicrosoftGraphChatMessage[]>]: A collection of all the messages in the chat. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Attachments <IMicrosoftGraphChatMessageAttachment[]>]: References to attached objects like files, tabs, meetings etc.
          [Content <String>]: The content of the attachment. If the attachment is a rich card, set the property to the rich card object. This property and contentUrl are mutually exclusive.
          [ContentType <String>]: The media type of the content attachment. It can have the following values: reference: Attachment is a link to another file. Populate the contentURL with the link to the object.Any contentTypes supported by the Bot Framework's Attachment objectapplication/vnd.microsoft.card.codesnippet: A code snippet. application/vnd.microsoft.card.announcement: An announcement header.
          [ContentUrl <String>]: URL for the content of the attachment. Supported protocols: http, https, file and data.
          [Id <String>]: Read-only. Unique id of the attachment.
          [Name <String>]: Name of the attachment.
          [TeamsAppId <String>]: The ID of the Teams app that is associated with the attachment. The property is specifically used to attribute a Teams message card to the specified app.
          [ThumbnailUrl <String>]: URL to a thumbnail image that the channel can use if it supports using an alternative, smaller form of content or contentUrl. For example, if you set contentType to application/word and set contentUrl to the location of the Word document, you might include a thumbnail image that represents the document. The channel could display the thumbnail image instead of the document. When the user clicks the image, the channel would open the document.
        [Body <IMicrosoftGraphItemBody>]: itemBody
        [ChannelIdentity <IMicrosoftGraphChannelIdentity>]: channelIdentity
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ChannelId <String>]: The identity of the channel in which the message was posted.
          [TeamId <String>]: The identity of the team in which the message was posted.
        [ChatId <String>]: If the message was sent in a chat, represents the identity of the chat.
        [CreatedDateTime <DateTime?>]: Timestamp of when the chat message was created.
        [DeletedDateTime <DateTime?>]: Read only. Timestamp at which the chat message was deleted, or null if not deleted.
        [Etag <String>]: Read-only. Version number of the chat message.
        [EventDetail <IMicrosoftGraphEventMessageDetail>]: eventMessageDetail
        [From <IMicrosoftGraphChatMessageFromIdentitySet>]: chatMessageFromIdentitySet
        [HostedContents <IMicrosoftGraphChatMessageHostedContent[]>]: Content in a message hosted by Microsoft Teams - for example, images or code snippets.
          [ContentBytes <Byte[]>]: Write only. Bytes for the hosted content (such as images).
          [ContentType <String>]: Write only. Content type. sicj as image/png, image/jpg.
          [Id <String>]: The unique idenfier for an entity. Read-only.
        [Importance <String>]: chatMessageImportance
        [LastEditedDateTime <DateTime?>]: Read only. Timestamp when edits to the chat message were made. Triggers an 'Edited' flag in the Teams UI. If no edits are made the value is null.
        [LastModifiedDateTime <DateTime?>]: Read only. Timestamp when the chat message is created (initial setting) or modified, including when a reaction is added or removed.
        [Locale <String>]: Locale of the chat message set by the client. Always set to en-us.
        [Mentions <IMicrosoftGraphChatMessageMention[]>]: List of entities mentioned in the chat message. Supported entities are: user, bot, team, and channel.
          [Id <Int32?>]: Index of an entity being mentioned in the specified chatMessage. Matches the {index} value in the corresponding <at id='{index}'> tag in the message body.
          [MentionText <String>]: String used to represent the mention. For example, a user's display name, a team name.
          [Mentioned <IMicrosoftGraphChatMessageMentionedIdentitySet>]: chatMessageMentionedIdentitySet
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Application <IMicrosoftGraphIdentity>]: identity
            [Device <IMicrosoftGraphIdentity>]: identity
            [User <IMicrosoftGraphIdentity>]: identity
            [Conversation <IMicrosoftGraphTeamworkConversationIdentity>]: teamworkConversationIdentity
              [(Any) <Object>]: This indicates any property can be added to this object.
              [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
              [Id <String>]: Unique identifier for the identity.
              [ConversationIdentityType <String>]: teamworkConversationIdentityType
        [MessageHistory <IMicrosoftGraphChatMessageHistoryItem[]>]: List of activity history of a message item, including modification time and actions, such as reactionAdded, reactionRemoved, or reaction changes, on the message.
          [Actions <String>]: chatMessageActions
          [ModifiedDateTime <DateTime?>]: The date and time when the message was modified.
          [Reaction <IMicrosoftGraphChatMessageReaction>]: chatMessageReaction
            [(Any) <Object>]: This indicates any property can be added to this object.
            [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
            [ReactionType <String>]: Supported values are like, angry, sad, laugh, heart, surprised.
            [User <IMicrosoftGraphChatMessageReactionIdentitySet>]: chatMessageReactionIdentitySet
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Application <IMicrosoftGraphIdentity>]: identity
              [Device <IMicrosoftGraphIdentity>]: identity
              [User <IMicrosoftGraphIdentity>]: identity
        [MessageType <String>]: chatMessageType
        [PolicyViolation <IMicrosoftGraphChatMessagePolicyViolation>]: chatMessagePolicyViolation
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DlpAction <String>]: chatMessagePolicyViolationDlpActionTypes
          [JustificationText <String>]: Justification text provided by the sender of the message when overriding a policy violation.
          [PolicyTip <IMicrosoftGraphChatMessagePolicyViolationPolicyTip>]: chatMessagePolicyViolationPolicyTip
            [(Any) <Object>]: This indicates any property can be added to this object.
            [ComplianceUrl <String>]: The URL a user can visit to read about the data loss prevention policies for the organization. (ie, policies about what users shouldn't say in chats)
            [GeneralText <String>]: Explanatory text shown to the sender of the message.
            [MatchedConditionDescriptions <String[]>]: The list of improper data in the message that was detected by the data loss prevention app. Each DLP app defines its own conditions, examples include 'Credit Card Number' and 'Social Security Number'.
          [UserAction <String>]: chatMessagePolicyViolationUserActionTypes
          [VerdictDetails <String>]: chatMessagePolicyViolationVerdictDetailsTypes
        [Reactions <IMicrosoftGraphChatMessageReaction[]>]: Reactions for this chat message (for example, Like).
        [Replies <IMicrosoftGraphChatMessage[]>]: Replies for a specified message. Supports $expand for channel messages.
        [ReplyToId <String>]: Read-only. ID of the parent chat message or root chat message of the thread. (Only applies to chat messages in channels, not chats.)
        [Subject <String>]: The subject of the chat message, in plaintext.
        [Summary <String>]: Summary text of the chat message that could be used for push notifications and summary views or fall back views. Only applies to channel chat messages, not chat messages in a chat.
        [WebUrl <String>]: Read-only. Link to the message in Microsoft Teams.
      [OnlineMeetingInfo <IMicrosoftGraphTeamworkOnlineMeetingInfo>]: teamworkOnlineMeetingInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [CalendarEventId <String>]: The identifier of the calendar event associated with the meeting.
        [JoinWebUrl <String>]: The URL that users click to join or uniquely identify the meeting.
        [Organizer <IMicrosoftGraphTeamworkUserIdentity>]: teamworkUserIdentity
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
          [Id <String>]: Unique identifier for the identity.
          [UserIdentityType <String>]: teamworkUserIdentityType
      [PermissionGrants <IMicrosoftGraphResourceSpecificPermissionGrant[]>]: 
        [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [ClientAppId <String>]: ID of the service principal of the Azure AD app that has been granted access. Read-only.
        [ClientId <String>]: ID of the Azure AD app that has been granted access. Read-only.
        [Permission <String>]: The name of the resource-specific permission. Read-only.
        [PermissionType <String>]: The type of permission. Possible values are: Application, Delegated. Read-only.
        [ResourceAppId <String>]: ID of the Azure AD app that is hosting the resource. Read-only.
      [PinnedMessages <IMicrosoftGraphPinnedChatMessageInfo[]>]: A collection of all the pinned messages in the chat. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Message <IMicrosoftGraphChatMessage>]: chatMessage
      [Tabs <IMicrosoftGraphTeamsTab[]>]: A collection of all the tabs in the chat. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Configuration <IMicrosoftGraphTeamsTabConfiguration>]: teamsTabConfiguration
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ContentUrl <String>]: Url used for rendering tab contents in Teams. Required.
          [EntityId <String>]: Identifier for the entity hosted by the tab provider.
          [RemoveUrl <String>]: Url called by Teams client when a Tab is removed using the Teams Client.
          [WebsiteUrl <String>]: Url for showing tab contents outside of Teams.
        [DisplayName <String>]: Name of the tab.
        [TeamsApp <IMicrosoftGraphTeamsApp>]: teamsApp
        [WebUrl <String>]: Deep link URL of the tab instance. Read only.
      [TenantId <String>]: The identifier of the tenant in which the chat was created. Read-only.
      [Topic <String>]: (Optional) Subject or topic for the chat. Only available for group chats.
      [Viewpoint <IMicrosoftGraphChatViewpoint>]: chatViewpoint
        [(Any) <Object>]: This indicates any property can be added to this object.
        [IsHidden <Boolean?>]: Indicates whether the chat is hidden for the current user.
        [LastMessageReadDateTime <DateTime?>]: Represents the dateTime up until which the current user has read chatMessages in a specific chat.
      [WebUrl <String>]: The URL for the chat in Microsoft Teams. The URL should be treated as an opaque blob, and not parsed. Read-only.
    [City <String>]: The city in which the user is located. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [CompanyName <String>]: The company name which the user is associated. This property can be useful for describing the company that an external user comes from. The maximum length is 64 characters.Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [ConsentProvidedForMinor <String>]: Sets whether consent has been obtained for minors. Allowed values: null, Granted, Denied and NotRequired. Refer to the legal age group property definitions for further information. Returned only on $select. Supports $filter (eq, ne, not, and in).
    [ContactFolders <IMicrosoftGraphContactFolder[]>]: The user's contacts folders. Read-only. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ChildFolders <IMicrosoftGraphContactFolder[]>]: The collection of child folders in the folder. Navigation property. Read-only. Nullable.
      [Contacts <IMicrosoftGraphContact[]>]: The contacts in the folder. Navigation property. Read-only. Nullable.
        [Categories <String[]>]: The categories associated with the item
        [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
        [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AssistantName <String>]: The name of the contact's assistant.
        [Birthday <DateTime?>]: The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [BusinessAddress <IMicrosoftGraphPhysicalAddress>]: physicalAddress
        [BusinessHomePage <String>]: The business home page of the contact.
        [BusinessPhones <String[]>]: The contact's business phone numbers.
        [Children <String[]>]: The names of the contact's children.
        [CompanyName <String>]: The name of the contact's company.
        [Department <String>]: The contact's department.
        [DisplayName <String>]: The contact's display name. You can specify the display name in a create or update operation. Note that later updates to other properties may cause an automatically generated value to overwrite the displayName value you have specified. To preserve a pre-existing value, always include it as displayName in an update operation.
        [EmailAddresses <IMicrosoftGraphEmailAddress[]>]: The contact's email addresses.
        [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the contact. Read-only. Nullable.
        [FileAs <String>]: The name the contact is filed under.
        [Generation <String>]: The contact's generation.
        [GivenName <String>]: The contact's given name.
        [HomeAddress <IMicrosoftGraphPhysicalAddress>]: physicalAddress
        [HomePhones <String[]>]: The contact's home phone numbers.
        [ImAddresses <String[]>]: 
        [Initials <String>]: 
        [JobTitle <String>]: 
        [Manager <String>]: 
        [MiddleName <String>]: 
        [MobilePhone <String>]: 
        [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the contact. Read-only. Nullable.
        [NickName <String>]: 
        [OfficeLocation <String>]: 
        [OtherAddress <IMicrosoftGraphPhysicalAddress>]: physicalAddress
        [ParentFolderId <String>]: 
        [PersonalNotes <String>]: 
        [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Height <Int32?>]: The height of the photo. Read-only.
          [Width <Int32?>]: The width of the photo. Read-only.
        [Profession <String>]: 
        [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the contact. Read-only. Nullable.
        [SpouseName <String>]: 
        [Surname <String>]: 
        [Title <String>]: 
        [YomiCompanyName <String>]: 
        [YomiGivenName <String>]: 
        [YomiSurname <String>]: 
      [DisplayName <String>]: The folder's display name.
      [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the contactFolder. Read-only. Nullable.
      [ParentFolderId <String>]: The ID of the folder's parent folder.
      [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the contactFolder. Read-only. Nullable.
    [Contacts <IMicrosoftGraphContact[]>]: The user's contacts. Read-only. Nullable.
    [Country <String>]: The country/region in which the user is located; for example, US or UK. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [CreatedDateTime <DateTime?>]: The date and time the user was created, in ISO 8601 format and in UTC time. The value cannot be modified and is automatically populated when the entity is created. Nullable. For on-premises users, the value represents when they were first created in Azure AD. Property is null for some users created before June 2018 and on-premises users that were synced to Azure AD before June 2018. Read-only. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in).
    [CreatedObjects <IMicrosoftGraphDirectoryObject[]>]: Directory objects that were created by the user. Read-only. Nullable.
    [CreationType <String>]: Indicates whether the user account was created through one of the following methods:  As a regular school or work account (null). As an external account (Invitation). As a local account for an Azure Active Directory B2C tenant (LocalAccount). Through self-service sign-up by an internal user using email verification (EmailVerified). Through self-service sign-up by an external user signing up through a link that is part of a user flow (SelfServiceSignUp). Read-only.Returned only on $select. Supports $filter (eq, ne, not, in).
    [CustomSecurityAttributes <IMicrosoftGraphCustomSecurityAttributeValue>]: customSecurityAttributeValue
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Department <String>]: The name for the department in which the user works. Maximum length is 64 characters. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, and eq on null values).
    [DeviceEnrollmentLimit <Int32?>]: The limit on the maximum number of devices that the user is permitted to enroll. Allowed values are 5 or 1000.
    [DeviceManagementTroubleshootingEvents <IMicrosoftGraphDeviceManagementTroubleshootingEvent[]>]: The list of troubleshooting events for this user.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CorrelationId <String>]: Id used for tracing the failure in the service.
      [EventDateTime <DateTime?>]: Time when the event occurred .
    [DirectReports <IMicrosoftGraphDirectoryObject[]>]: The users and contacts that report to the user. (The users and contacts that have their manager property set to this user.) Read-only. Nullable. Supports $expand.
    [DisplayName <String>]: The name displayed in the address book for the user. This is usually the combination of the user's first name, middle initial and last name. This property is required when a user is created and it cannot be cleared during updates. Maximum length is 256 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values), $orderBy, and $search.
    [Drive <IMicrosoftGraphDrive>]: drive
      [(Any) <Object>]: This indicates any property can be added to this object.
      [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [CreatedByUser <IMicrosoftGraphUser>]: user
      [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
      [Description <String>]: Provides a user-visible description of the item. Optional.
      [ETag <String>]: ETag for the item. Read-only.
      [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [LastModifiedByUser <IMicrosoftGraphUser>]: user
      [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
      [Name <String>]: The name of the item. Read-write.
      [ParentReference <IMicrosoftGraphItemReference>]: itemReference
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DriveId <String>]: Unique identifier of the drive instance that contains the driveItem. Only returned if the item is located in a [drive][]. Read-only.
        [DriveType <String>]: Identifies the type of drive. Only returned if the item is located in a [drive][]. See [drive][] resource for values.
        [Id <String>]: Unique identifier of the driveItem in the drive or a listItem in a list. Read-only.
        [Name <String>]: The name of the item being referenced. Read-only.
        [Path <String>]: Path that can be used to navigate to the item. Read-only.
        [ShareId <String>]: A unique identifier for a shared resource that can be accessed via the [Shares][] API.
        [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ListId <String>]: The unique identifier (guid) for the item's list in SharePoint.
          [ListItemId <String>]: An integer identifier for the item within the containing list.
          [ListItemUniqueId <String>]: The unique identifier (guid) for the item within OneDrive for Business or a SharePoint site.
          [SiteId <String>]: The unique identifier (guid) for the item's site collection (SPSite).
          [SiteUrl <String>]: The SharePoint URL for the site that contains the item.
          [TenantId <String>]: The unique identifier (guid) for the tenancy.
          [WebId <String>]: The unique identifier (guid) for the item's site (SPWeb).
        [SiteId <String>]: For OneDrive for Business and SharePoint, this property represents the ID of the site that contains the parent document library of the driveItem resource or the parent list of the listItem resource. The value is the same as the id property of that [site][] resource. It is an opaque string that consists of three identifiers of the site. For OneDrive, this property is not populated.
      [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Bundles <IMicrosoftGraphDriveItem[]>]: Collection of [bundles][bundle] (albums and multi-select-shared sets of items). Only in personal OneDrive.
        [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [CreatedByUser <IMicrosoftGraphUser>]: user
        [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
        [Description <String>]: Provides a user-visible description of the item. Optional.
        [ETag <String>]: ETag for the item. Read-only.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [LastModifiedByUser <IMicrosoftGraphUser>]: user
        [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
        [Name <String>]: The name of the item. Read-write.
        [ParentReference <IMicrosoftGraphItemReference>]: itemReference
        [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Analytics <IMicrosoftGraphItemAnalytics>]: itemAnalytics
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AllTime <IMicrosoftGraphItemActivityStat>]: itemActivityStat
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Access <IMicrosoftGraphItemActionStat>]: itemActionStat
              [(Any) <Object>]: This indicates any property can be added to this object.
              [ActionCount <Int32?>]: The number of times the action took place. Read-only.
              [ActorCount <Int32?>]: The number of distinct actors that performed the action. Read-only.
            [Activities <IMicrosoftGraphItemActivity[]>]: Exposes the itemActivities represented in this itemActivityStat resource.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Access <IMicrosoftGraphAccessAction>]: accessAction
                [(Any) <Object>]: This indicates any property can be added to this object.
              [ActivityDateTime <DateTime?>]: Details about when the activity took place. Read-only.
              [Actor <IMicrosoftGraphIdentitySet>]: identitySet
              [DriveItem <IMicrosoftGraphDriveItem>]: driveItem
            [Create <IMicrosoftGraphItemActionStat>]: itemActionStat
            [Delete <IMicrosoftGraphItemActionStat>]: itemActionStat
            [Edit <IMicrosoftGraphItemActionStat>]: itemActionStat
            [EndDateTime <DateTime?>]: When the interval ends. Read-only.
            [IncompleteData <IMicrosoftGraphIncompleteData>]: incompleteData
              [(Any) <Object>]: This indicates any property can be added to this object.
              [MissingDataBeforeDateTime <DateTime?>]: The service does not have source data before the specified time.
              [WasThrottled <Boolean?>]: Some data was not recorded due to excessive activity.
            [IsTrending <Boolean?>]: Indicates whether the item is 'trending.' Read-only.
            [Move <IMicrosoftGraphItemActionStat>]: itemActionStat
            [StartDateTime <DateTime?>]: When the interval starts. Read-only.
          [ItemActivityStats <IMicrosoftGraphItemActivityStat[]>]: 
          [LastSevenDays <IMicrosoftGraphItemActivityStat>]: itemActivityStat
        [Audio <IMicrosoftGraphAudio>]: audio
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Album <String>]: The title of the album for this audio file.
          [AlbumArtist <String>]: The artist named on the album for the audio file.
          [Artist <String>]: The performing artist for the audio file.
          [Bitrate <Int64?>]: Bitrate expressed in kbps.
          [Composers <String>]: The name of the composer of the audio file.
          [Copyright <String>]: Copyright information for the audio file.
          [Disc <Int32?>]: The number of the disc this audio file came from.
          [DiscCount <Int32?>]: The total number of discs in this album.
          [Duration <Int64?>]: Duration of the audio file, expressed in milliseconds
          [Genre <String>]: The genre of this audio file.
          [HasDrm <Boolean?>]: Indicates if the file is protected with digital rights management.
          [IsVariableBitrate <Boolean?>]: Indicates if the file is encoded with a variable bitrate.
          [Title <String>]: The title of the audio file.
          [Track <Int32?>]: The number of the track on the original disc for this audio file.
          [TrackCount <Int32?>]: The total number of tracks on the original disc for this audio file.
          [Year <Int32?>]: The year the audio file was recorded.
        [Bundle <IMicrosoftGraphBundle>]: bundle
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Album <IMicrosoftGraphAlbum>]: album
            [(Any) <Object>]: This indicates any property can be added to this object.
            [CoverImageItemId <String>]: Unique identifier of the [driveItem][] that is the cover of the album.
          [ChildCount <Int32?>]: Number of children contained immediately within this container.
        [CTag <String>]: An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.
        [Children <IMicrosoftGraphDriveItem[]>]: Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
        [Content <Byte[]>]: The content stream, if the item represents a file.
        [Deleted <IMicrosoftGraphDeleted>]: deleted
          [(Any) <Object>]: This indicates any property can be added to this object.
          [State <String>]: Represents the state of the deleted item.
        [File <IMicrosoftGraphFile>]: file
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Hashes <IMicrosoftGraphHashes>]: hashes
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Crc32Hash <String>]: The CRC32 value of the file in little endian (if available). Read-only.
            [QuickXorHash <String>]: A proprietary hash of the file that can be used to determine if the contents of the file have changed (if available). Read-only.
            [Sha1Hash <String>]: SHA1 hash for the contents of the file (if available). Read-only.
            [Sha256Hash <String>]: SHA256 hash for the contents of the file (if available). Read-only.
          [MimeType <String>]: The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file was uploaded. Read-only.
          [ProcessingMetadata <Boolean?>]: 
        [FileSystemInfo <IMicrosoftGraphFileSystemInfo>]: fileSystemInfo
          [(Any) <Object>]: This indicates any property can be added to this object.
          [CreatedDateTime <DateTime?>]: The UTC date and time the file was created on a client.
          [LastAccessedDateTime <DateTime?>]: The UTC date and time the file was last accessed. Available for the recent file list only.
          [LastModifiedDateTime <DateTime?>]: The UTC date and time the file was last modified on a client.
        [Folder <IMicrosoftGraphFolder>]: folder
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ChildCount <Int32?>]: Number of children contained immediately within this container.
          [View <IMicrosoftGraphFolderView>]: folderView
            [(Any) <Object>]: This indicates any property can be added to this object.
            [SortBy <String>]: The method by which the folder should be sorted.
            [SortOrder <String>]: If true, indicates that items should be sorted in descending order. Otherwise, items should be sorted ascending.
            [ViewType <String>]: The type of view that should be used to represent the folder.
        [Image <IMicrosoftGraphImage>]: image
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Height <Int32?>]: Optional. Height of the image, in pixels. Read-only.
          [Width <Int32?>]: Optional. Width of the image, in pixels. Read-only.
        [ListItem <IMicrosoftGraphListItem>]: listItem
          [(Any) <Object>]: This indicates any property can be added to this object.
          [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [CreatedByUser <IMicrosoftGraphUser>]: user
          [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
          [Description <String>]: Provides a user-visible description of the item. Optional.
          [ETag <String>]: ETag for the item. Read-only.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [LastModifiedByUser <IMicrosoftGraphUser>]: user
          [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
          [Name <String>]: The name of the item. Read-write.
          [ParentReference <IMicrosoftGraphItemReference>]: itemReference
          [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Analytics <IMicrosoftGraphItemAnalytics>]: itemAnalytics
          [ContentType <IMicrosoftGraphContentTypeInfo>]: contentTypeInfo
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The ID of the content type.
            [Name <String>]: The name of the content type.
          [DocumentSetVersions <IMicrosoftGraphDocumentSetVersion[]>]: Version information for a document set version created by a user.
            [Fields <IMicrosoftGraphFieldValueSet>]: fieldValueSet
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
            [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [LastModifiedDateTime <DateTime?>]: Date and time the version was last modified. Read-only.
            [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Level <String>]: The state of publication for this document. Either published or checkout. Read-only.
              [VersionId <String>]: The unique identifier for the version that is visible to the current caller. Read-only.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Comment <String>]: Comment about the captured version.
            [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [CreatedDateTime <DateTime?>]: Date and time when this version was created.
            [Items <IMicrosoftGraphDocumentSetVersionItem[]>]: Items within the document set that are captured as part of this version.
              [ItemId <String>]: The unique identifier for the item.
              [Title <String>]: The title of the item.
              [VersionId <String>]: The version ID of the item.
            [ShouldCaptureMinorVersion <Boolean?>]: If true, minor versions of items are also captured; otherwise, only major versions will be captured. Default value is false.
          [DriveItem <IMicrosoftGraphDriveItem>]: driveItem
          [Fields <IMicrosoftGraphFieldValueSet>]: fieldValueSet
          [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
          [Versions <IMicrosoftGraphListItemVersion[]>]: The list of previous versions of the list item.
            [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [LastModifiedDateTime <DateTime?>]: Date and time the version was last modified. Read-only.
            [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Fields <IMicrosoftGraphFieldValueSet>]: fieldValueSet
        [Location <IMicrosoftGraphGeoCoordinates>]: geoCoordinates
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Altitude <Double?>]: Optional. The altitude (height), in feet,  above sea level for the item. Read-only.
          [Latitude <Double?>]: Optional. The latitude, in decimal, for the item. Read-only.
          [Longitude <Double?>]: Optional. The longitude, in decimal, for the item. Read-only.
        [Malware <IMicrosoftGraphMalware>]: malware
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Description <String>]: Contains the virus details for the malware facet.
        [Package <IMicrosoftGraphPackage>]: package
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Type <String>]: A string indicating the type of package. While oneNote is the only currently defined value, you should expect other package types to be returned and handle them accordingly.
        [PendingOperations <IMicrosoftGraphPendingOperations>]: pendingOperations
          [(Any) <Object>]: This indicates any property can be added to this object.
          [PendingContentUpdate <IMicrosoftGraphPendingContentUpdate>]: pendingContentUpdate
            [(Any) <Object>]: This indicates any property can be added to this object.
            [QueuedDateTime <DateTime?>]: Date and time the pending binary operation was queued in UTC time. Read-only.
        [Permissions <IMicrosoftGraphPermission[]>]: The set of permissions for the item. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [ExpirationDateTime <DateTime?>]: A format of yyyy-MM-ddTHH:mm:ssZ of DateTimeOffset indicates the expiration time of the permission. DateTime.MinValue indicates there is no expiration set for this permission. Optional.
          [GrantedTo <IMicrosoftGraphIdentitySet>]: identitySet
          [GrantedToIdentities <IMicrosoftGraphIdentitySet[]>]: 
          [GrantedToIdentitiesV2 <IMicrosoftGraphSharePointIdentitySet[]>]: For link type permissions, the details of the users to whom permission was granted. Read-only.
            [Application <IMicrosoftGraphIdentity>]: identity
            [Device <IMicrosoftGraphIdentity>]: identity
            [User <IMicrosoftGraphIdentity>]: identity
            [Group <IMicrosoftGraphIdentity>]: identity
            [SiteGroup <IMicrosoftGraphSharePointIdentity>]: sharePointIdentity
              [(Any) <Object>]: This indicates any property can be added to this object.
              [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
              [Id <String>]: Unique identifier for the identity.
              [LoginName <String>]: The sign in name of the SharePoint identity.
            [SiteUser <IMicrosoftGraphSharePointIdentity>]: sharePointIdentity
          [GrantedToV2 <IMicrosoftGraphSharePointIdentitySet>]: sharePointIdentitySet
          [HasPassword <Boolean?>]: Indicates whether the password is set for this permission. This property only appears in the response. Optional. Read-only. For OneDrive Personal only..
          [InheritedFrom <IMicrosoftGraphItemReference>]: itemReference
          [Invitation <IMicrosoftGraphSharingInvitation>]: sharingInvitation
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Email <String>]: The email address provided for the recipient of the sharing invitation. Read-only.
            [InvitedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [RedeemedBy <String>]: 
            [SignInRequired <Boolean?>]: If true the recipient of the invitation needs to sign in in order to access the shared item. Read-only.
          [Link <IMicrosoftGraphSharingLink>]: sharingLink
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Application <IMicrosoftGraphIdentity>]: identity
            [PreventsDownload <Boolean?>]: If true then the user can only use this link to view the item on the web, and cannot use it to download the contents of the item. Only for OneDrive for Business and SharePoint.
            [Scope <String>]: The scope of the link represented by this permission. Value anonymous indicates the link is usable by anyone, organization indicates the link is only usable for users signed into the same tenant.
            [Type <String>]: The type of the link created.
            [WebHtml <String>]: For embed links, this property contains the HTML code for an <iframe> element that will embed the item in a webpage.
            [WebUrl <String>]: A URL that opens the item in the browser on the OneDrive website.
          [Roles <String[]>]: The type of permission, for example, read. See below for the full list of roles. Read-only.
          [ShareId <String>]: A unique token that can be used to access this shared item via the shares API. Read-only.
        [Photo <IMicrosoftGraphPhoto>]: photo
          [(Any) <Object>]: This indicates any property can be added to this object.
          [CameraMake <String>]: Camera manufacturer. Read-only.
          [CameraModel <String>]: Camera model. Read-only.
          [ExposureDenominator <Double?>]: The denominator for the exposure time fraction from the camera. Read-only.
          [ExposureNumerator <Double?>]: The numerator for the exposure time fraction from the camera. Read-only.
          [FNumber <Double?>]: The F-stop value from the camera. Read-only.
          [FocalLength <Double?>]: The focal length from the camera. Read-only.
          [Iso <Int32?>]: The ISO value from the camera. Read-only.
          [Orientation <Int32?>]: The orientation value from the camera. Writable on OneDrive Personal.
          [TakenDateTime <DateTime?>]: Represents the date and time the photo was taken. Read-only.
        [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
        [RemoteItem <IMicrosoftGraphRemoteItem>]: remoteItem
          [(Any) <Object>]: This indicates any property can be added to this object.
          [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
          [File <IMicrosoftGraphFile>]: file
          [FileSystemInfo <IMicrosoftGraphFileSystemInfo>]: fileSystemInfo
          [Folder <IMicrosoftGraphFolder>]: folder
          [Id <String>]: Unique identifier for the remote item in its drive. Read-only.
          [Image <IMicrosoftGraphImage>]: image
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
          [Name <String>]: Optional. Filename of the remote item. Read-only.
          [Package <IMicrosoftGraphPackage>]: package
          [ParentReference <IMicrosoftGraphItemReference>]: itemReference
          [Shared <IMicrosoftGraphShared>]: shared
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Owner <IMicrosoftGraphIdentitySet>]: identitySet
            [Scope <String>]: Indicates the scope of how the item is shared: anonymous, organization, or users. Read-only.
            [SharedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [SharedDateTime <DateTime?>]: The UTC date and time when the item was shared. Read-only.
          [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
          [Size <Int64?>]: Size of the remote item. Read-only.
          [SpecialFolder <IMicrosoftGraphSpecialFolder>]: specialFolder
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Name <String>]: The unique identifier for this item in the /drive/special collection
          [Video <IMicrosoftGraphVideo>]: video
            [(Any) <Object>]: This indicates any property can be added to this object.
            [AudioBitsPerSample <Int32?>]: Number of audio bits per sample.
            [AudioChannels <Int32?>]: Number of audio channels.
            [AudioFormat <String>]: Name of the audio format (AAC, MP3, etc.).
            [AudioSamplesPerSecond <Int32?>]: Number of audio samples per second.
            [Bitrate <Int32?>]: Bit rate of the video in bits per second.
            [Duration <Int64?>]: Duration of the file in milliseconds.
            [FourCc <String>]: 'Four character code' name of the video format.
            [FrameRate <Double?>]: Frame rate of the video.
            [Height <Int32?>]: Height of the video, in pixels.
            [Width <Int32?>]: Width of the video, in pixels.
          [WebDavUrl <String>]: DAV compatible URL for the item.
          [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
        [Root <IMicrosoftGraphRoot>]: root
          [(Any) <Object>]: This indicates any property can be added to this object.
        [SearchResult <IMicrosoftGraphSearchResult>]: searchResult
          [(Any) <Object>]: This indicates any property can be added to this object.
          [OnClickTelemetryUrl <String>]: A callback URL that can be used to record telemetry information. The application should issue a GET on this URL if the user interacts with this item to improve the quality of results.
        [Shared <IMicrosoftGraphShared>]: shared
        [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
        [Size <Int64?>]: Size of the item in bytes. Read-only.
        [SpecialFolder <IMicrosoftGraphSpecialFolder>]: specialFolder
        [Subscriptions <IMicrosoftGraphSubscription[]>]: The set of subscriptions on the item. Only supported on the root of a drive.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [ApplicationId <String>]: Optional. Identifier of the application used to create the subscription. Read-only.
          [ChangeType <String>]: Required. Indicates the type of change in the subscribed resource that will raise a change notification. The supported values are: created, updated, deleted. Multiple values can be combined using a comma-separated list. Note:  Drive root item and list change notifications support only the updated changeType. User and group change notifications support updated and deleted changeType. Use updated to receive notifications when user or group is created, updated or soft deleted.  Use deleted to receive notifications when user or group is permanently deleted.
          [ClientState <String>]: Required. Specifies the value of the clientState property sent by the service in each change notification. The maximum length is 128 characters. The client can check that the change notification came from the service by comparing the value of the clientState property sent with the subscription with the value of the clientState property received with each change notification.
          [CreatorId <String>]: Optional. Identifier of the user or service principal that created the subscription. If the app used delegated permissions to create the subscription, this field contains the id of the signed-in user the app called on behalf of. If the app used application permissions, this field contains the id of the service principal corresponding to the app. Read-only.
          [EncryptionCertificate <String>]: Optional. A base64-encoded representation of a certificate with a public key used to encrypt resource data in change notifications. Optional but required when includeResourceData is true.
          [EncryptionCertificateId <String>]: Optional. A custom app-provided identifier to help identify the certificate needed to decrypt resource data.
          [ExpirationDateTime <DateTime?>]: Required. Specifies the date and time when the webhook subscription expires. The time is in UTC, and can be an amount of time from subscription creation that varies for the resource subscribed to. For the maximum supported subscription length of time, see the table below.
          [IncludeResourceData <Boolean?>]: Optional. When set to true, change notifications include resource data (such as content of a chat message).
          [LatestSupportedTlsVersion <String>]: Optional. Specifies the latest version of Transport Layer Security (TLS) that the notification endpoint, specified by notificationUrl, supports. The possible values are: v10, v11, v12, v13. For subscribers whose notification endpoint supports a version lower than the currently recommended version (TLS 1.2), specifying this property by a set timeline allows them to temporarily use their deprecated version of TLS before completing their upgrade to TLS 1.2. For these subscribers, not setting this property per the timeline would result in subscription operations failing. For subscribers whose notification endpoint already supports TLS 1.2, setting this property is optional. In such cases, Microsoft Graph defaults the property to v1_2.
          [LifecycleNotificationUrl <String>]: Required for Teams resources if  the expirationDateTime value is more than 1 hour from now; optional otherwise. The URL of the endpoint that receives lifecycle notifications, including subscriptionRemoved, reauthorizationRequired, and missed notifications. This URL must make use of the HTTPS protocol. For more information, see Reduce missing subscriptions and change notifications.
          [NotificationQueryOptions <String>]: Optional. OData query options for specifying value for the targeting resource. Clients receive notifications when resource reaches the state matching the query options provided here. With this new property in the subscription creation payload along with all existing properties, Webhooks will deliver notifications whenever a resource reaches the desired state mentioned in the notificationQueryOptions property. For example, when the print job is completed or when a print job resource isFetchable property value becomes true etc.  Supported only for Universal Print Service. For more information, see Subscribe to change notifications from cloud printing APIs using Microsoft Graph.
          [NotificationUrl <String>]: Required. The URL of the endpoint that will receive the change notifications. This URL must make use of the HTTPS protocol. Any query string parameter included in the notificationUrl property will be included in the HTTP POST request when Microsoft Graph sends the change notifications.
          [NotificationUrlAppId <String>]: Optional. The app ID that the subscription service can use to generate the validation token. This allows the client to validate the authenticity of the notification received.
          [Resource <String>]: Required. Specifies the resource that will be monitored for changes. Do not include the base URL (https://graph.microsoft.com/v1.0/). See the possible resource path values for each supported resource.
        [Thumbnails <IMicrosoftGraphThumbnailSet[]>]: Collection containing [ThumbnailSet][] objects associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Large <IMicrosoftGraphThumbnail>]: thumbnail
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Content <Byte[]>]: The content stream for the thumbnail.
            [Height <Int32?>]: The height of the thumbnail, in pixels.
            [SourceItemId <String>]: The unique identifier of the item that provided the thumbnail. This is only available when a folder thumbnail is requested.
            [Url <String>]: The URL used to fetch the thumbnail content.
            [Width <Int32?>]: The width of the thumbnail, in pixels.
          [Medium <IMicrosoftGraphThumbnail>]: thumbnail
          [Small <IMicrosoftGraphThumbnail>]: thumbnail
          [Source <IMicrosoftGraphThumbnail>]: thumbnail
        [Versions <IMicrosoftGraphDriveItemVersion[]>]: The list of previous versions of the item. For more info, see [getting previous versions][]. Read-only. Nullable.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [LastModifiedDateTime <DateTime?>]: Date and time the version was last modified. Read-only.
          [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Content <Byte[]>]: The content stream for this version of the item.
          [Size <Int64?>]: Indicates the size of the content stream for this version of the item.
        [Video <IMicrosoftGraphVideo>]: video
        [WebDavUrl <String>]: WebDAV compatible URL for the item.
        [Workbook <IMicrosoftGraphWorkbook>]: workbook
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Application <IMicrosoftGraphWorkbookApplication>]: workbookApplication
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [CalculationMode <String>]: Returns the calculation mode used in the workbook. Possible values are: Automatic, AutomaticExceptTables, Manual.
          [Comments <IMicrosoftGraphWorkbookComment[]>]: Represents a collection of comments in a workbook.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Content <String>]: The content of comment.
            [ContentType <String>]: Indicates the type for the comment.
            [Replies <IMicrosoftGraphWorkbookCommentReply[]>]: 
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Content <String>]: The content of a comment reply.
              [ContentType <String>]: Indicates the type for the comment reply.
          [Functions <IMicrosoftGraphWorkbookFunctions>]: workbookFunctions
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
          [Names <IMicrosoftGraphWorkbookNamedItem[]>]: Represents a collection of workbooks scoped named items (named ranges and constants). Read-only.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Comment <String>]: Represents the comment associated with this name.
            [Name <String>]: The name of the object. Read-only.
            [Scope <String>]: Indicates whether the name is scoped to the workbook or to a specific worksheet. Read-only.
            [Type <String>]: Indicates what type of reference is associated with the name. The possible values are: String, Integer, Double, Boolean, Range. Read-only.
            [Value <IMicrosoftGraphJson>]: Json
            [Visible <Boolean?>]: Specifies whether the object is visible or not.
            [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Charts <IMicrosoftGraphWorkbookChart[]>]: Returns collection of charts that are part of the worksheet. Read-only.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Axes <IMicrosoftGraphWorkbookChartAxes>]: workbookChartAxes
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [CategoryAxis <IMicrosoftGraphWorkbookChartAxis>]: workbookChartAxis
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Format <IMicrosoftGraphWorkbookChartAxisFormat>]: workbookChartAxisFormat
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                        [(Any) <Object>]: This indicates any property can be added to this object.
                        [Id <String>]: The unique idenfier for an entity. Read-only.
                        [Bold <Boolean?>]: Represents the bold status of font.
                        [Color <String>]: HTML color code representation of the text color. E.g. #FF0000 represents Red.
                        [Italic <Boolean?>]: Represents the italic status of the font.
                        [Name <String>]: Font name (e.g. 'Calibri')
                        [Size <Double?>]: Size of the font (e.g. 11)
                        [Underline <String>]: Type of underline applied to the font. The possible values are: None, Single.
                      [Line <IMicrosoftGraphWorkbookChartLineFormat>]: workbookChartLineFormat
                        [(Any) <Object>]: This indicates any property can be added to this object.
                        [Id <String>]: The unique idenfier for an entity. Read-only.
                        [Color <String>]: HTML color code representing the color of lines in the chart.
                    [MajorGridlines <IMicrosoftGraphWorkbookChartGridlines>]: workbookChartGridlines
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Format <IMicrosoftGraphWorkbookChartGridlinesFormat>]: workbookChartGridlinesFormat
                        [(Any) <Object>]: This indicates any property can be added to this object.
                        [Id <String>]: The unique idenfier for an entity. Read-only.
                        [Line <IMicrosoftGraphWorkbookChartLineFormat>]: workbookChartLineFormat
                      [Visible <Boolean?>]: Boolean value representing if the axis gridlines are visible or not.
                    [MajorUnit <IMicrosoftGraphJson>]: Json
                    [Maximum <IMicrosoftGraphJson>]: Json
                    [Minimum <IMicrosoftGraphJson>]: Json
                    [MinorGridlines <IMicrosoftGraphWorkbookChartGridlines>]: workbookChartGridlines
                    [MinorUnit <IMicrosoftGraphJson>]: Json
                    [Title <IMicrosoftGraphWorkbookChartAxisTitle>]: workbookChartAxisTitle
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Format <IMicrosoftGraphWorkbookChartAxisTitleFormat>]: workbookChartAxisTitleFormat
                        [(Any) <Object>]: This indicates any property can be added to this object.
                        [Id <String>]: The unique idenfier for an entity. Read-only.
                        [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                      [Text <String>]: Represents the axis title.
                      [Visible <Boolean?>]: A boolean that specifies the visibility of an axis title.
                  [SeriesAxis <IMicrosoftGraphWorkbookChartAxis>]: workbookChartAxis
                  [ValueAxis <IMicrosoftGraphWorkbookChartAxis>]: workbookChartAxis
                [DataLabels <IMicrosoftGraphWorkbookChartDataLabels>]: workbookChartDataLabels
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Format <IMicrosoftGraphWorkbookChartDataLabelFormat>]: workbookChartDataLabelFormat
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                  [Position <String>]: DataLabelPosition value that represents the position of the data label. The possible values are: None, Center, InsideEnd, InsideBase, OutsideEnd, Left, Right, Top, Bottom, BestFit, Callout.
                  [Separator <String>]: String representing the separator used for the data labels on a chart.
                  [ShowBubbleSize <Boolean?>]: Boolean value representing if the data label bubble size is visible or not.
                  [ShowCategoryName <Boolean?>]: Boolean value representing if the data label category name is visible or not.
                  [ShowLegendKey <Boolean?>]: Boolean value representing if the data label legend key is visible or not.
                  [ShowPercentage <Boolean?>]: Boolean value representing if the data label percentage is visible or not.
                  [ShowSeriesName <Boolean?>]: Boolean value representing if the data label series name is visible or not.
                  [ShowValue <Boolean?>]: Boolean value representing if the data label value is visible or not.
                [Format <IMicrosoftGraphWorkbookChartAreaFormat>]: workbookChartAreaFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                  [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                [Height <Double?>]: Represents the height, in points, of the chart object.
                [Left <Double?>]: The distance, in points, from the left side of the chart to the worksheet origin.
                [Legend <IMicrosoftGraphWorkbookChartLegend>]: workbookChartLegend
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Format <IMicrosoftGraphWorkbookChartLegendFormat>]: workbookChartLegendFormat
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                    [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                  [Overlay <Boolean?>]: Boolean value for whether the chart legend should overlap with the main body of the chart.
                  [Position <String>]: Represents the position of the legend on the chart. The possible values are: Top, Bottom, Left, Right, Corner, Custom.
                  [Visible <Boolean?>]: A boolean value the represents the visibility of a ChartLegend object.
                [Name <String>]: Represents the name of a chart object.
                [Series <IMicrosoftGraphWorkbookChartSeries[]>]: Represents either a single series or collection of series in the chart. Read-only.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Format <IMicrosoftGraphWorkbookChartSeriesFormat>]: workbookChartSeriesFormat
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                    [Line <IMicrosoftGraphWorkbookChartLineFormat>]: workbookChartLineFormat
                  [Name <String>]: Represents the name of a series in a chart.
                  [Points <IMicrosoftGraphWorkbookChartPoint[]>]: Represents a collection of all points in the series. Read-only.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Format <IMicrosoftGraphWorkbookChartPointFormat>]: workbookChartPointFormat
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                    [Value <IMicrosoftGraphJson>]: Json
                [Title <IMicrosoftGraphWorkbookChartTitle>]: workbookChartTitle
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Format <IMicrosoftGraphWorkbookChartTitleFormat>]: workbookChartTitleFormat
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                    [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                  [Overlay <Boolean?>]: Boolean value representing if the chart title will overlay the chart or not.
                  [Text <String>]: Represents the title text of a chart.
                  [Visible <Boolean?>]: A boolean value the represents the visibility of a chart title object.
                [Top <Double?>]: Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).
                [Width <Double?>]: Represents the width, in points, of the chart object.
                [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
              [Name <String>]: The display name of the worksheet.
              [Names <IMicrosoftGraphWorkbookNamedItem[]>]: Returns collection of names that are associated with the worksheet. Read-only.
              [PivotTables <IMicrosoftGraphWorkbookPivotTable[]>]: Collection of PivotTables that are part of the worksheet.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Name <String>]: Name of the PivotTable.
                [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
              [Position <Int32?>]: The zero-based position of the worksheet within the workbook.
              [Protection <IMicrosoftGraphWorkbookWorksheetProtection>]: workbookWorksheetProtection
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Options <IMicrosoftGraphWorkbookWorksheetProtectionOptions>]: workbookWorksheetProtectionOptions
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [AllowAutoFilter <Boolean?>]: Represents the worksheet protection option of allowing using auto filter feature.
                  [AllowDeleteColumns <Boolean?>]: Represents the worksheet protection option of allowing deleting columns.
                  [AllowDeleteRows <Boolean?>]: Represents the worksheet protection option of allowing deleting rows.
                  [AllowFormatCells <Boolean?>]: Represents the worksheet protection option of allowing formatting cells.
                  [AllowFormatColumns <Boolean?>]: Represents the worksheet protection option of allowing formatting columns.
                  [AllowFormatRows <Boolean?>]: Represents the worksheet protection option of allowing formatting rows.
                  [AllowInsertColumns <Boolean?>]: Represents the worksheet protection option of allowing inserting columns.
                  [AllowInsertHyperlinks <Boolean?>]: Represents the worksheet protection option of allowing inserting hyperlinks.
                  [AllowInsertRows <Boolean?>]: Represents the worksheet protection option of allowing inserting rows.
                  [AllowPivotTables <Boolean?>]: Represents the worksheet protection option of allowing using pivot table feature.
                  [AllowSort <Boolean?>]: Represents the worksheet protection option of allowing using sort feature.
                [Protected <Boolean?>]: Indicates if the worksheet is protected.  Read-only.
              [Tables <IMicrosoftGraphWorkbookTable[]>]: Collection of tables that are part of the worksheet. Read-only.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Columns <IMicrosoftGraphWorkbookTableColumn[]>]: Represents a collection of all the columns in the table. Read-only.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Filter <IMicrosoftGraphWorkbookFilter>]: workbookFilter
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Criteria <IMicrosoftGraphWorkbookFilterCriteria>]: workbookFilterCriteria
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Color <String>]: 
                      [Criterion1 <String>]: 
                      [Criterion2 <String>]: 
                      [DynamicCriteria <String>]: 
                      [FilterOn <String>]: 
                      [Icon <IMicrosoftGraphWorkbookIcon>]: workbookIcon
                        [(Any) <Object>]: This indicates any property can be added to this object.
                        [Index <Int32?>]: Represents the index of the icon in the given set.
                        [Set <String>]: Represents the set that the icon is part of. The possible values are: Invalid, ThreeArrows, ThreeArrowsGray, ThreeFlags, ThreeTrafficLights1, ThreeTrafficLights2, ThreeSigns, ThreeSymbols, ThreeSymbols2, FourArrows, FourArrowsGray, FourRedToBlack, FourRating, FourTrafficLights, FiveArrows, FiveArrowsGray, FiveRating, FiveQuarters, ThreeStars, ThreeTriangles, FiveBoxes.
                      [Operator <String>]: 
                      [Values <IMicrosoftGraphJson>]: Json
                  [Index <Int32?>]: Returns the index number of the column within the columns collection of the table. Zero-indexed. Read-only.
                  [Name <String>]: Returns the name of the table column.
                  [Values <IMicrosoftGraphJson>]: Json
                [HighlightFirstColumn <Boolean?>]: Indicates whether the first column contains special formatting.
                [HighlightLastColumn <Boolean?>]: Indicates whether the last column contains special formatting.
                [LegacyId <String>]: Legacy Id used in older Excle clients. The value of the identifier remains the same even when the table is renamed. This property should be interpreted as an opaque string value and should not be parsed to any other type. Read-only.
                [Name <String>]: Name of the table.
                [Rows <IMicrosoftGraphWorkbookTableRow[]>]: Represents a collection of all the rows in the table. Read-only.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Index <Int32?>]: Returns the index number of the row within the rows collection of the table. Zero-indexed. Read-only.
                  [Values <IMicrosoftGraphJson>]: Json
                [ShowBandedColumns <Boolean?>]: Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.
                [ShowBandedRows <Boolean?>]: Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.
                [ShowFilterButton <Boolean?>]: Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.
                [ShowHeaders <Boolean?>]: Indicates whether the header row is visible or not. This value can be set to show or remove the header row.
                [ShowTotals <Boolean?>]: Indicates whether the total row is visible or not. This value can be set to show or remove the total row.
                [Sort <IMicrosoftGraphWorkbookTableSort>]: workbookTableSort
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Fields <IMicrosoftGraphWorkbookSortField[]>]: Represents the current conditions used to last sort the table. Read-only.
                    [Ascending <Boolean?>]: Represents whether the sorting is done in an ascending fashion.
                    [Color <String>]: Represents the color that is the target of the condition if the sorting is on font or cell color.
                    [DataOption <String>]: Represents additional sorting options for this field. The possible values are: Normal, TextAsNumber.
                    [Icon <IMicrosoftGraphWorkbookIcon>]: workbookIcon
                    [Key <Int32?>]: Represents the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row).
                    [SortOn <String>]: Represents the type of sorting of this condition. The possible values are: Value, CellColor, FontColor, Icon.
                  [MatchCase <Boolean?>]: Represents whether the casing impacted the last sort of the table. Read-only.
                  [Method <String>]: Represents Chinese character ordering method last used to sort the table. The possible values are: PinYin, StrokeCount. Read-only.
                [Style <String>]: Constant value that represents the Table style. The possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified.
                [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
              [Visibility <String>]: The Visibility of the worksheet. The possible values are: Visible, Hidden, VeryHidden.
          [Operations <IMicrosoftGraphWorkbookOperation[]>]: The status of workbook operations. Getting an operation collection is not supported, but you can get the status of a long-running operation if the Location header is returned in the response. Read-only.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Error <IMicrosoftGraphWorkbookOperationError>]: workbookOperationError
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Code <String>]: The error code.
              [InnerError <IMicrosoftGraphWorkbookOperationError>]: workbookOperationError
              [Message <String>]: The error message.
            [ResourceLocation <String>]: The resource URI for the result.
            [Status <String>]: workbookOperationStatus
          [Tables <IMicrosoftGraphWorkbookTable[]>]: Represents a collection of tables associated with the workbook. Read-only.
          [Worksheets <IMicrosoftGraphWorkbookWorksheet[]>]: Represents a collection of worksheets associated with the workbook. Read-only.
      [DriveType <String>]: Describes the type of drive represented by this resource. OneDrive personal drives will return personal. OneDrive for Business will return business. SharePoint document libraries will return documentLibrary. Read-only.
      [Following <IMicrosoftGraphDriveItem[]>]: The list of items the user is following. Only in OneDrive for Business.
      [Items <IMicrosoftGraphDriveItem[]>]: All items contained in the drive. Read-only. Nullable.
      [List <IMicrosoftGraphList>]: list
        [(Any) <Object>]: This indicates any property can be added to this object.
        [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [CreatedByUser <IMicrosoftGraphUser>]: user
        [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
        [Description <String>]: Provides a user-visible description of the item. Optional.
        [ETag <String>]: ETag for the item. Read-only.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [LastModifiedByUser <IMicrosoftGraphUser>]: user
        [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
        [Name <String>]: The name of the item. Read-write.
        [ParentReference <IMicrosoftGraphItemReference>]: itemReference
        [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Columns <IMicrosoftGraphColumnDefinition[]>]: The collection of field definitions for this list.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Boolean <IMicrosoftGraphBooleanColumn>]: booleanColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
          [Calculated <IMicrosoftGraphCalculatedColumn>]: calculatedColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Format <String>]: For dateTime output types, the format of the value. Possible values are: dateOnly or dateTime.
            [Formula <String>]: The formula used to compute the value for this column.
            [OutputType <String>]: The output type used to format values in this column. Possible values are: boolean, currency, dateTime, number, or text.
          [Choice <IMicrosoftGraphChoiceColumn>]: choiceColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [AllowTextEntry <Boolean?>]: If true, allows custom values that aren't in the configured choices.
            [Choices <String[]>]: The list of values available for this column.
            [DisplayAs <String>]: How the choices are to be presented in the UX. Must be one of checkBoxes, dropDownMenu, or radioButtons
          [ColumnGroup <String>]: For site columns, the name of the group this column belongs to. Helps organize related columns.
          [ContentApprovalStatus <IMicrosoftGraphContentApprovalStatusColumn>]: contentApprovalStatusColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
          [Currency <IMicrosoftGraphCurrencyColumn>]: currencyColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Locale <String>]: Specifies the locale from which to infer the currency symbol.
          [DateTime <IMicrosoftGraphDateTimeColumn>]: dateTimeColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DisplayAs <String>]: How the value should be presented in the UX. Must be one of default, friendly, or standard. See below for more details. If unspecified, treated as default.
            [Format <String>]: Indicates whether the value should be presented as a date only or a date and time. Must be one of dateOnly or dateTime
          [DefaultValue <IMicrosoftGraphDefaultColumnValue>]: defaultColumnValue
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Formula <String>]: The formula used to compute the default value for the column.
            [Value <String>]: The direct value to use as the default value for the column.
          [Description <String>]: The user-facing description of the column.
          [DisplayName <String>]: The user-facing name of the column.
          [EnforceUniqueValues <Boolean?>]: If true, no two list items may have the same value for this column.
          [Geolocation <IMicrosoftGraphGeolocationColumn>]: geolocationColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
          [Hidden <Boolean?>]: Specifies whether the column is displayed in the user interface.
          [HyperlinkOrPicture <IMicrosoftGraphHyperlinkOrPictureColumn>]: hyperlinkOrPictureColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [IsPicture <Boolean?>]: Specifies whether the display format used for URL columns is an image or a hyperlink.
          [Indexed <Boolean?>]: Specifies whether the column values can be used for sorting and searching.
          [IsDeletable <Boolean?>]: Indicates whether this column can be deleted.
          [IsReorderable <Boolean?>]: Indicates whether values in the column can be reordered. Read-only.
          [IsSealed <Boolean?>]: Specifies whether the column can be changed.
          [Lookup <IMicrosoftGraphLookupColumn>]: lookupColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [AllowMultipleValues <Boolean?>]: Indicates whether multiple values can be selected from the source.
            [AllowUnlimitedLength <Boolean?>]: Indicates whether values in the column should be able to exceed the standard limit of 255 characters.
            [ColumnName <String>]: The name of the lookup source column.
            [ListId <String>]: The unique identifier of the lookup source list.
            [PrimaryLookupColumnId <String>]: If specified, this column is a secondary lookup, pulling an additional field from the list item looked up by the primary lookup. Use the list item looked up by the primary as the source for the column named here.
          [Name <String>]: The API-facing name of the column as it appears in the [fields][] on a [listItem][]. For the user-facing name, see displayName.
          [Number <IMicrosoftGraphNumberColumn>]: numberColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DecimalPlaces <String>]: How many decimal places to display. See below for information about the possible values.
            [DisplayAs <String>]: How the value should be presented in the UX. Must be one of number or percentage. If unspecified, treated as number.
            [Maximum <Double?>]: The maximum permitted value.
            [Minimum <Double?>]: The minimum permitted value.
          [PersonOrGroup <IMicrosoftGraphPersonOrGroupColumn>]: personOrGroupColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [AllowMultipleSelection <Boolean?>]: Indicates whether multiple values can be selected from the source.
            [ChooseFromType <String>]: Whether to allow selection of people only, or people and groups. Must be one of peopleAndGroups or peopleOnly.
            [DisplayAs <String>]: How to display the information about the person or group chosen. See below.
          [PropagateChanges <Boolean?>]: If 'true', changes to this column will be propagated to lists that implement the column.
          [ReadOnly <Boolean?>]: Specifies whether the column values can be modified.
          [Required <Boolean?>]: Specifies whether the column value isn't optional.
          [SourceColumn <IMicrosoftGraphColumnDefinition>]: columnDefinition
          [SourceContentType <IMicrosoftGraphContentTypeInfo>]: contentTypeInfo
          [Term <IMicrosoftGraphTermColumn>]: termColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [AllowMultipleValues <Boolean?>]: Specifies whether the column will allow more than one value.
            [ParentTerm <IMicrosoftGraphTermStoreTerm>]: term
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Children <IMicrosoftGraphTermStoreTerm[]>]: Children of current term.
              [CreatedDateTime <DateTime?>]: Date and time of term creation. Read-only.
              [Descriptions <IMicrosoftGraphTermStoreLocalizedDescription[]>]: Description about term that is dependent on the languageTag.
                [Description <String>]: The description in the localized language.
                [LanguageTag <String>]: The language tag for the label.
              [Labels <IMicrosoftGraphTermStoreLocalizedLabel[]>]: Label metadata for a term.
                [IsDefault <Boolean?>]: Indicates whether the label is the default label.
                [LanguageTag <String>]: The language tag for the label.
                [Name <String>]: The name of the label.
              [LastModifiedDateTime <DateTime?>]: Last date and time of term modification. Read-only.
              [Properties <IMicrosoftGraphKeyValue[]>]: Collection of properties on the term.
                [Key <String>]: Key for the key-value pair.
                [Value <String>]: Value for the key-value pair.
              [Relations <IMicrosoftGraphTermStoreRelation[]>]: To indicate which terms are related to the current term as either pinned or reused.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [FromTerm <IMicrosoftGraphTermStoreTerm>]: term
                [Relationship <String>]: relationType
                [Set <IMicrosoftGraphTermStoreSet>]: set
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Children <IMicrosoftGraphTermStoreTerm[]>]: Children terms of set in term [store].
                  [CreatedDateTime <DateTime?>]: Date and time of set creation. Read-only.
                  [Description <String>]: Description that gives details on the term usage.
                  [LocalizedNames <IMicrosoftGraphTermStoreLocalizedName[]>]: Name of the set for each languageTag.
                    [LanguageTag <String>]: The language tag for the label.
                    [Name <String>]: The name in the localized language.
                  [ParentGroup <IMicrosoftGraphTermStoreGroup>]: group
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [CreatedDateTime <DateTime?>]: Date and time of the group creation. Read-only.
                    [Description <String>]: Description that gives details on the term usage.
                    [DisplayName <String>]: Name of the group.
                    [ParentSiteId <String>]: ID of the parent site of this group.
                    [Scope <String>]: termGroupScope
                    [Sets <IMicrosoftGraphTermStoreSet[]>]: All sets under the group in a term [store].
                  [Properties <IMicrosoftGraphKeyValue[]>]: Custom properties for the set.
                  [Relations <IMicrosoftGraphTermStoreRelation[]>]: Indicates which terms have been pinned or reused directly under the set.
                  [Terms <IMicrosoftGraphTermStoreTerm[]>]: All the terms under the set.
                [ToTerm <IMicrosoftGraphTermStoreTerm>]: term
              [Set <IMicrosoftGraphTermStoreSet>]: set
            [ShowFullyQualifiedName <Boolean?>]: Specifies whether to display the entire term path or only the term label.
            [TermSet <IMicrosoftGraphTermStoreSet>]: set
          [Text <IMicrosoftGraphTextColumn>]: textColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
            [AllowMultipleLines <Boolean?>]: Whether to allow multiple lines of text.
            [AppendChangesToExistingText <Boolean?>]: Whether updates to this column should replace existing text, or append to it.
            [LinesForEditing <Int32?>]: The size of the text box.
            [MaxLength <Int32?>]: The maximum number of characters for the value.
            [TextType <String>]: The type of text being stored. Must be one of plain or richText
          [Thumbnail <IMicrosoftGraphThumbnailColumn>]: thumbnailColumn
            [(Any) <Object>]: This indicates any property can be added to this object.
          [Type <String>]: columnTypes
          [Validation <IMicrosoftGraphColumnValidation>]: columnValidation
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DefaultLanguage <String>]: Default BCP 47 language tag for the description.
            [Descriptions <IMicrosoftGraphDisplayNameLocalization[]>]: Localized messages that explain what is needed for this column's value to be considered valid. User will be prompted with this message if validation fails.
              [DisplayName <String>]: If present, the value of this field contains the displayName string that has been set for the language present in the languageTag field.
              [LanguageTag <String>]: Provides the language culture-code and friendly name of the language that the displayName field has been provided in.
            [Formula <String>]: The formula to validate column value. For examples, see Examples of common formulas in lists.
        [ContentTypes <IMicrosoftGraphContentType[]>]: The collection of content types present in this list.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AssociatedHubsUrls <String[]>]: List of canonical URLs for hub sites with which this content type is associated to. This will contain all hub sites where this content type is queued to be enforced or is already enforced. Enforcing a content type means that the content type will be applied to the lists in the enforced sites.
          [Base <IMicrosoftGraphContentType>]: contentType
          [BaseTypes <IMicrosoftGraphContentType[]>]: The collection of content types that are ancestors of this content type.
          [ColumnLinks <IMicrosoftGraphColumnLink[]>]: The collection of columns that are required by this content type.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Name <String>]: The name of the column  in this content type.
          [ColumnPositions <IMicrosoftGraphColumnDefinition[]>]: Column order information in a content type.
          [Columns <IMicrosoftGraphColumnDefinition[]>]: The collection of column definitions for this contentType.
          [Description <String>]: The descriptive text for the item.
          [DocumentSet <IMicrosoftGraphDocumentSet>]: documentSet
            [(Any) <Object>]: This indicates any property can be added to this object.
            [AllowedContentTypes <IMicrosoftGraphContentTypeInfo[]>]: Content types allowed in document set.
            [DefaultContents <IMicrosoftGraphDocumentSetContent[]>]: Default contents of document set.
              [ContentType <IMicrosoftGraphContentTypeInfo>]: contentTypeInfo
              [FileName <String>]: Name of the file in resource folder that should be added as a default content or a template in the document set.
              [FolderName <String>]: Folder name in which the file will be placed when a new document set is created in the library.
            [PropagateWelcomePageChanges <Boolean?>]: Specifies whether to push welcome page changes to inherited content types.
            [SharedColumns <IMicrosoftGraphColumnDefinition[]>]: 
            [ShouldPrefixNameToFile <Boolean?>]: Indicates whether to add the name of the document set to each file name.
            [WelcomePageColumns <IMicrosoftGraphColumnDefinition[]>]: 
            [WelcomePageUrl <String>]: Welcome page absolute URL.
          [DocumentTemplate <IMicrosoftGraphDocumentSetContent>]: documentSetContent
          [Group <String>]: The name of the group this content type belongs to. Helps organize related content types.
          [Hidden <Boolean?>]: Indicates whether the content type is hidden in the list's 'New' menu.
          [InheritedFrom <IMicrosoftGraphItemReference>]: itemReference
          [IsBuiltIn <Boolean?>]: Specifies if a content type is a built-in content type.
          [Name <String>]: The name of the content type.
          [Order <IMicrosoftGraphContentTypeOrder>]: contentTypeOrder
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Default <Boolean?>]: Indicates whether this is the default content type
            [Position <Int32?>]: Specifies the position in which the content type appears in the selection UI.
          [ParentId <String>]: The unique identifier of the content type.
          [PropagateChanges <Boolean?>]: If true, any changes made to the content type will be pushed to inherited content types and lists that implement the content type.
          [ReadOnly <Boolean?>]: If true, the content type can't be modified unless this value is first set to false.
          [Sealed <Boolean?>]: If true, the content type can't be modified by users or through push-down operations. Only site collection administrators can seal or unseal content types.
        [DisplayName <String>]: The displayable title of the list.
        [Drive <IMicrosoftGraphDrive>]: drive
        [Items <IMicrosoftGraphListItem[]>]: All items contained in the list.
        [List <IMicrosoftGraphListInfo>]: listInfo
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ContentTypesEnabled <Boolean?>]: If true, indicates that content types are enabled for this list.
          [Hidden <Boolean?>]: If true, indicates that the list is not normally visible in the SharePoint user experience.
          [Template <String>]: An enumerated value that represents the base list template used in creating the list. Possible values include documentLibrary, genericList, task, survey, announcements, contacts, and more.
        [Operations <IMicrosoftGraphRichLongRunningOperation[]>]: The collection of long-running operations on the list.
          [CreatedDateTime <DateTime?>]: The start time of the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
          [LastActionDateTime <DateTime?>]: The time of the last action in the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
          [ResourceLocation <String>]: URI of the resource that the operation is performed on.
          [Status <String>]: longRunningOperationStatus
          [StatusDetail <String>]: Details about the status of the operation.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Error <IMicrosoftGraphPublicError>]: publicError
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Code <String>]: Represents the error code.
            [Details <IMicrosoftGraphPublicErrorDetail[]>]: Details of the error.
              [Code <String>]: The error code.
              [Message <String>]: The error message.
              [Target <String>]: The target of the error.
            [InnerError <IMicrosoftGraphPublicInnerError>]: publicInnerError
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Code <String>]: The error code.
              [Details <IMicrosoftGraphPublicErrorDetail[]>]: A collection of error details.
              [Message <String>]: The error message.
              [Target <String>]: The target of the error.
            [Message <String>]: A non-localized message for the developer.
            [Target <String>]: The target of the error.
          [PercentageComplete <Int32?>]: A value between 0 and 100 that indicates the progress of the operation.
          [ResourceId <String>]: The unique identifier for the result.
          [Type <String>]: The type of the operation.
        [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
        [Subscriptions <IMicrosoftGraphSubscription[]>]: The set of subscriptions on the list.
        [System <IMicrosoftGraphSystemFacet>]: systemFacet
          [(Any) <Object>]: This indicates any property can be added to this object.
      [Owner <IMicrosoftGraphIdentitySet>]: identitySet
      [Quota <IMicrosoftGraphQuota>]: quota
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Deleted <Int64?>]: Total space consumed by files in the recycle bin, in bytes. Read-only.
        [Remaining <Int64?>]: Total space remaining before reaching the quota limit, in bytes. Read-only.
        [State <String>]: Enumeration value that indicates the state of the storage space. Read-only.
        [StoragePlanInformation <IMicrosoftGraphStoragePlanInformation>]: storagePlanInformation
          [(Any) <Object>]: This indicates any property can be added to this object.
          [UpgradeAvailable <Boolean?>]: Indicates whether there are higher storage quota plans available. Read-only.
        [Total <Int64?>]: Total allowed storage space, in bytes. Read-only.
        [Used <Int64?>]: Total space used, in bytes. Read-only.
      [Root <IMicrosoftGraphDriveItem>]: driveItem
      [SharePointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
      [Special <IMicrosoftGraphDriveItem[]>]: Collection of common folders available in OneDrive. Read-only. Nullable.
      [System <IMicrosoftGraphSystemFacet>]: systemFacet
    [Drives <IMicrosoftGraphDrive[]>]: A collection of drives available for this user. Read-only.
    [EmployeeExperience <IMicrosoftGraphEmployeeExperienceUser>]: employeeExperienceUser
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [LearningCourseActivities <IMicrosoftGraphLearningCourseActivity[]>]: 
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CompletedDateTime <DateTime?>]: Date and time when the assignment was completed. Optional.
        [CompletionPercentage <Int32?>]: The percentage completion value of the course activity. Optional.
        [ExternalcourseActivityId <String>]: A course activity ID generated by the provider. Optional.
        [LearnerUserId <String>]: The user ID of the learner to whom the activity is assigned. Required.
        [LearningContentId <String>]: The ID of the learning content created in Viva Learning. Required.
        [LearningProviderId <String>]: The registration ID of the provider. Required.
        [Status <String>]: courseStatus
    [EmployeeHireDate <DateTime?>]: The date and time when the user was hired or will start work in case of a future hire. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in).
    [EmployeeId <String>]: The employee identifier assigned to the user by the organization. The maximum length is 16 characters. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
    [EmployeeLeaveDateTime <DateTime?>]: The date and time when the user left or will leave the organization. To read this property, the calling app must be assigned the User-LifeCycleInfo.Read.All permission. To write this property, the calling app must be assigned the User.Read.All and User-LifeCycleInfo.ReadWrite.All permissions. To read this property in delegated scenarios, the admin needs one of the following Azure AD roles: Lifecycle Workflows Administrator, Global Reader, or Global Administrator. To write this property in delegated scenarios, the admin needs the Global Administrator role. Supports $filter (eq, ne, not , ge, le, in). For more information, see Configure the employeeLeaveDateTime property for a user.
    [EmployeeOrgData <IMicrosoftGraphEmployeeOrgData>]: employeeOrgData
      [(Any) <Object>]: This indicates any property can be added to this object.
      [CostCenter <String>]: The cost center associated with the user. Returned only on $select. Supports $filter.
      [Division <String>]: The name of the division in which the user works. Returned only on $select. Supports $filter.
    [EmployeeType <String>]: Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith).
    [Events <IMicrosoftGraphEvent[]>]: The user's events. Default is to show Events under the Default Calendar. Read-only. Nullable.
    [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the user. Read-only. Supports $expand. Nullable.
    [ExternalUserState <String>]: For an external user invited to the tenant using the invitation API, this property represents the invited user's invitation status. For invited users, the state can be PendingAcceptance or Accepted, or null for all other users. Returned only on $select. Supports $filter (eq, ne, not , in).
    [ExternalUserStateChangeDateTime <DateTime?>]: Shows the timestamp for the latest change to the externalUserState property. Returned only on $select. Supports $filter (eq, ne, not , in).
    [FaxNumber <String>]: The fax number of the user. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
    [FollowedSites <IMicrosoftGraphSite[]>]: 
      [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [CreatedByUser <IMicrosoftGraphUser>]: user
      [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
      [Description <String>]: Provides a user-visible description of the item. Optional.
      [ETag <String>]: ETag for the item. Read-only.
      [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [LastModifiedByUser <IMicrosoftGraphUser>]: user
      [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
      [Name <String>]: The name of the item. Read-write.
      [ParentReference <IMicrosoftGraphItemReference>]: itemReference
      [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Analytics <IMicrosoftGraphItemAnalytics>]: itemAnalytics
      [Columns <IMicrosoftGraphColumnDefinition[]>]: The collection of column definitions reusable across lists under this site.
      [ContentTypes <IMicrosoftGraphContentType[]>]: The collection of content types defined for this site.
      [DisplayName <String>]: The full title for the site. Read-only.
      [Drive <IMicrosoftGraphDrive>]: drive
      [Drives <IMicrosoftGraphDrive[]>]: The collection of drives (document libraries) under this site.
      [Error <IMicrosoftGraphPublicError>]: publicError
      [ExternalColumns <IMicrosoftGraphColumnDefinition[]>]: 
      [Items <IMicrosoftGraphBaseItem[]>]: Used to address any item contained in this site. This collection can't be enumerated.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [CreatedByUser <IMicrosoftGraphUser>]: user
        [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
        [Description <String>]: Provides a user-visible description of the item. Optional.
        [ETag <String>]: ETag for the item. Read-only.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [LastModifiedByUser <IMicrosoftGraphUser>]: user
        [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
        [Name <String>]: The name of the item. Read-write.
        [ParentReference <IMicrosoftGraphItemReference>]: itemReference
        [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
      [Lists <IMicrosoftGraphList[]>]: The collection of lists under this site.
      [Onenote <IMicrosoftGraphOnenote>]: onenote
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Notebooks <IMicrosoftGraphNotebook[]>]: The collection of OneNote notebooks that are owned by the user or group. Read-only. Nullable.
          [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [DisplayName <String>]: The name of the notebook.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [LastModifiedDateTime <DateTime?>]: The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [Self <String>]: The endpoint where you can get details about the page. Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [IsDefault <Boolean?>]: Indicates whether this is the user's default notebook. Read-only.
          [IsShared <Boolean?>]: Indicates whether the notebook is shared. If true, the contents of the notebook can be seen by people other than the owner. Read-only.
          [Links <IMicrosoftGraphNotebookLinks>]: notebookLinks
            [(Any) <Object>]: This indicates any property can be added to this object.
            [OneNoteClientUrl <IMicrosoftGraphExternalLink>]: externalLink
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Href <String>]: The URL of the link.
            [OneNoteWebUrl <IMicrosoftGraphExternalLink>]: externalLink
          [SectionGroups <IMicrosoftGraphSectionGroup[]>]: The section groups in the notebook. Read-only. Nullable.
            [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [DisplayName <String>]: The name of the notebook.
            [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [LastModifiedDateTime <DateTime?>]: The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
            [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
            [Self <String>]: The endpoint where you can get details about the page. Read-only.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [ParentNotebook <IMicrosoftGraphNotebook>]: notebook
            [ParentSectionGroup <IMicrosoftGraphSectionGroup>]: sectionGroup
            [SectionGroups <IMicrosoftGraphSectionGroup[]>]: The section groups in the section. Read-only. Nullable.
            [SectionGroupsUrl <String>]: The URL for the sectionGroups navigation property, which returns all the section groups in the section group. Read-only.
            [Sections <IMicrosoftGraphOnenoteSection[]>]: The sections in the section group. Read-only. Nullable.
              [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
              [DisplayName <String>]: The name of the notebook.
              [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
              [LastModifiedDateTime <DateTime?>]: The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
              [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
              [Self <String>]: The endpoint where you can get details about the page. Read-only.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [IsDefault <Boolean?>]: Indicates whether this is the user's default section. Read-only.
              [Links <IMicrosoftGraphSectionLinks>]: sectionLinks
                [(Any) <Object>]: This indicates any property can be added to this object.
                [OneNoteClientUrl <IMicrosoftGraphExternalLink>]: externalLink
                [OneNoteWebUrl <IMicrosoftGraphExternalLink>]: externalLink
              [Pages <IMicrosoftGraphOnenotePage[]>]: The collection of pages in the section.  Read-only. Nullable.
                [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
                [Self <String>]: The endpoint where you can get details about the page. Read-only.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Content <Byte[]>]: The page's HTML content.
                [ContentUrl <String>]: The URL for the page's HTML content.  Read-only.
                [CreatedByAppId <String>]: The unique identifier of the application that created the page. Read-only.
                [LastModifiedDateTime <DateTime?>]: The date and time when the page was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
                [Level <Int32?>]: The indentation level of the page. Read-only.
                [Links <IMicrosoftGraphPageLinks>]: pageLinks
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [OneNoteClientUrl <IMicrosoftGraphExternalLink>]: externalLink
                  [OneNoteWebUrl <IMicrosoftGraphExternalLink>]: externalLink
                [Order <Int32?>]: The order of the page within its parent section. Read-only.
                [ParentNotebook <IMicrosoftGraphNotebook>]: notebook
                [ParentSection <IMicrosoftGraphOnenoteSection>]: onenoteSection
                [Title <String>]: The title of the page.
                [UserTags <String[]>]: 
              [PagesUrl <String>]: The pages endpoint where you can get details for all the pages in the section. Read-only.
              [ParentNotebook <IMicrosoftGraphNotebook>]: notebook
              [ParentSectionGroup <IMicrosoftGraphSectionGroup>]: sectionGroup
            [SectionsUrl <String>]: The URL for the sections navigation property, which returns all the sections in the section group. Read-only.
          [SectionGroupsUrl <String>]: The URL for the sectionGroups navigation property, which returns all the section groups in the notebook. Read-only.
          [Sections <IMicrosoftGraphOnenoteSection[]>]: The sections in the notebook. Read-only. Nullable.
          [SectionsUrl <String>]: The URL for the sections navigation property, which returns all the sections in the notebook. Read-only.
          [UserRole <String>]: onenoteUserRole
        [Operations <IMicrosoftGraphOnenoteOperation[]>]: The status of OneNote operations. Getting an operations collection is not supported, but you can get the status of long-running operations if the Operation-Location header is returned in the response. Read-only. Nullable.
          [CreatedDateTime <DateTime?>]: The start time of the operation.
          [LastActionDateTime <DateTime?>]: The time of the last action of the operation.
          [Status <String>]: operationStatus
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Error <IMicrosoftGraphOnenoteOperationError>]: onenoteOperationError
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Code <String>]: The error code.
            [Message <String>]: The error message.
          [PercentComplete <String>]: The operation percent complete if the operation is still in running status.
          [ResourceId <String>]: The resource id.
          [ResourceLocation <String>]: The resource URI for the object. For example, the resource URI for a copied page or section.
        [Pages <IMicrosoftGraphOnenotePage[]>]: The pages in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
        [Resources <IMicrosoftGraphOnenoteResource[]>]: The image and other file resources in OneNote pages. Getting a resources collection is not supported, but you can get the binary content of a specific resource. Read-only. Nullable.
          [Self <String>]: The endpoint where you can get details about the page. Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Content <Byte[]>]: The content stream
          [ContentUrl <String>]: The URL for downloading the content
        [SectionGroups <IMicrosoftGraphSectionGroup[]>]: The section groups in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
        [Sections <IMicrosoftGraphOnenoteSection[]>]: The sections in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
      [Operations <IMicrosoftGraphRichLongRunningOperation[]>]: The collection of long-running operations on the site.
      [Permissions <IMicrosoftGraphPermission[]>]: The permissions associated with the site. Nullable.
      [Root <IMicrosoftGraphRoot>]: root
      [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
      [SiteCollection <IMicrosoftGraphSiteCollection>]: siteCollection
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DataLocationCode <String>]: The geographic region code for where this site collection resides. Read-only.
        [Hostname <String>]: The hostname for the site collection. Read-only.
        [Root <IMicrosoftGraphRoot>]: root
      [Sites <IMicrosoftGraphSite[]>]: The collection of the sub-sites under this site.
      [TermStore <IMicrosoftGraphTermStore>]: store
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DefaultLanguageTag <String>]: Default language of the term store.
        [Groups <IMicrosoftGraphTermStoreGroup[]>]: Collection of all groups available in the term store.
        [LanguageTags <String[]>]: List of languages for the term store.
        [Sets <IMicrosoftGraphTermStoreSet[]>]: Collection of all sets available in the term store. This relationship can only be used to load a specific term set.
      [TermStores <IMicrosoftGraphTermStore[]>]: The collection of termStores under this site.
    [GivenName <String>]: The given name (first name) of the user. Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
    [HireDate <DateTime?>]: The hire date of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned only on $select.  Note: This property is specific to SharePoint Online. We recommend using the native employeeHireDate property to set and update hire date values using Microsoft Graph APIs.
    [Identities <IMicrosoftGraphObjectIdentity[]>]: Represents the identities that can be used to sign in to this user account. An identity can be provided by Microsoft (also known as a local account), by organizations, or by social identity providers such as Facebook, Google, and Microsoft, and tied to a user account. May contain multiple items with the same signInType value. Returned only on $select. Supports $filter (eq) including on null values, only where the signInType is not userPrincipalName.
      [Issuer <String>]: Specifies the issuer of the identity, for example facebook.com.For local accounts (where signInType is not federated), this property is the local B2C tenant default domain name, for example contoso.onmicrosoft.com.For external users from other Azure AD organization, this will be the domain of the federated organization, for example contoso.com.Supports $filter. 512 character limit.
      [IssuerAssignedId <String>]: Specifies the unique identifier assigned to the user by the issuer. The combination of issuer and issuerAssignedId must be unique within the organization. Represents the sign-in name for the user, when signInType is set to emailAddress or userName (also known as local accounts).When signInType is set to: emailAddress, (or a custom string that starts with emailAddress like emailAddress1) issuerAssignedId must be a valid email addressuserName, issuerAssignedId must begin with alphabetical character or number, and can only contain alphanumeric characters and the following symbols: - or Supports $filter. 64 character limit.
      [SignInType <String>]: Specifies the user sign-in types in your directory, such as emailAddress, userName, federated, or userPrincipalName. federated represents a unique identifier for a user from an issuer, that can be in any format chosen by the issuer. Setting or updating a userPrincipalName identity will update the value of the userPrincipalName property on the user object. The validations performed on the userPrincipalName property on the user object, for example, verified domains and acceptable characters, will be performed when setting or updating a userPrincipalName identity. Additional validation is enforced on issuerAssignedId when the sign-in type is set to emailAddress or userName. This property can also be set to any custom string.
    [ImAddresses <String[]>]: The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only. Returned only on $select. Supports $filter (eq, not, ge, le, startsWith).
    [InferenceClassification <IMicrosoftGraphInferenceClassification>]: inferenceClassification
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Overrides <IMicrosoftGraphInferenceClassificationOverride[]>]: A set of overrides for a user to always classify messages from specific senders in certain ways: focused, or other. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [ClassifyAs <String>]: inferenceClassificationType
        [SenderEmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
    [Insights <IMicrosoftGraphOfficeGraphInsights>]: officeGraphInsights
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Shared <IMicrosoftGraphSharedInsight[]>]: Calculated relationship identifying documents shared with or by the user. This includes URLs, file attachments, and reference attachments to OneDrive for Business and SharePoint files found in Outlook messages and meetings. This also includes URLs and reference attachments to Teams conversations. Ordered by recency of share.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [LastShared <IMicrosoftGraphSharingDetail>]: sharingDetail
          [(Any) <Object>]: This indicates any property can be added to this object.
          [SharedBy <IMicrosoftGraphInsightIdentity>]: insightIdentity
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Address <String>]: The email address of the user who shared the item.
            [DisplayName <String>]: The display name of the user who shared the item.
            [Id <String>]: The id of the user who shared the item.
          [SharedDateTime <DateTime?>]: The date and time the file was last shared. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [SharingReference <IMicrosoftGraphResourceReference>]: resourceReference
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The item's unique identifier.
            [Type <String>]: A string value that can be used to classify the item, such as 'microsoft.graph.driveItem'
            [WebUrl <String>]: A URL leading to the referenced item.
          [SharingSubject <String>]: The subject with which the document was shared.
          [SharingType <String>]: Determines the way the document was shared, can be by a 'Link', 'Attachment', 'Group', 'Site'.
        [LastSharedMethod <IMicrosoftGraphEntity>]: entity
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
        [Resource <IMicrosoftGraphEntity>]: entity
        [ResourceReference <IMicrosoftGraphResourceReference>]: resourceReference
        [ResourceVisualization <IMicrosoftGraphResourceVisualization>]: resourceVisualization
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ContainerDisplayName <String>]: A string describing where the item is stored. For example, the name of a SharePoint site or the user name identifying the owner of the OneDrive storing the item.
          [ContainerType <String>]: Can be used for filtering by the type of container in which the file is stored. Such as Site or OneDriveBusiness.
          [ContainerWebUrl <String>]: A path leading to the folder in which the item is stored.
          [MediaType <String>]: The item's media type. Can be used for filtering for a specific type of file based on supported IANA Media Mime Types. Note that not all Media Mime Types are supported.
          [PreviewImageUrl <String>]: A URL leading to the preview image for the item.
          [PreviewText <String>]: A preview text for the item.
          [Title <String>]: The item's title text.
          [Type <String>]: The item's media type. Can be used for filtering for a specific file based on a specific type. See below for supported types.
        [SharingHistory <IMicrosoftGraphSharingDetail[]>]: 
      [Trending <IMicrosoftGraphTrending[]>]: Calculated relationship identifying documents trending around a user. Trending documents are calculated based on activity of the user's closest network of people and include files stored in OneDrive for Business and SharePoint. Trending insights help the user to discover potentially useful content that the user has access to, but has never viewed before.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [LastModifiedDateTime <DateTime?>]: 
        [Resource <IMicrosoftGraphEntity>]: entity
        [ResourceReference <IMicrosoftGraphResourceReference>]: resourceReference
        [ResourceVisualization <IMicrosoftGraphResourceVisualization>]: resourceVisualization
        [Weight <Double?>]: Value indicating how much the document is currently trending. The larger the number, the more the document is currently trending around the user (the more relevant it is). Returned documents are sorted by this value.
      [Used <IMicrosoftGraphUsedInsight[]>]: Calculated relationship identifying the latest documents viewed or modified by a user, including OneDrive for Business and SharePoint documents, ranked by recency of use.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [LastUsed <IMicrosoftGraphUsageDetails>]: usageDetails
          [(Any) <Object>]: This indicates any property can be added to this object.
          [LastAccessedDateTime <DateTime?>]: The date and time the resource was last accessed by the user. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [LastModifiedDateTime <DateTime?>]: The date and time the resource was last modified by the user. The timestamp represents date and time information using ISO 8601 format and is always in UTC time.For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        [Resource <IMicrosoftGraphEntity>]: entity
        [ResourceReference <IMicrosoftGraphResourceReference>]: resourceReference
        [ResourceVisualization <IMicrosoftGraphResourceVisualization>]: resourceVisualization
    [Interests <String[]>]: A list for the user to describe their interests. Returned only on $select.
    [IsResourceAccount <Boolean?>]: Do not use – reserved for future use.
    [JobTitle <String>]: The user's job title. Maximum length is 128 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
    [JoinedTeams <IMicrosoftGraphTeam[]>]: 
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AllChannels <IMicrosoftGraphChannel[]>]: List of channels either hosted in or shared with the team (incoming channels).
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedDateTime <DateTime?>]: Read only. Timestamp at which the channel was created.
        [Description <String>]: Optional textual description for the channel.
        [DisplayName <String>]: Channel name as it will appear to the user in Microsoft Teams. The maximum length is 50 characters.
        [Email <String>]: The email address for sending messages to the channel. Read-only.
        [FilesFolder <IMicrosoftGraphDriveItem>]: driveItem
        [IsFavoriteByDefault <Boolean?>]: Indicates whether the channel should automatically be marked 'favorite' for all members of the team. Can only be set programmatically with Create team. Default: false.
        [Members <IMicrosoftGraphConversationMember[]>]: A collection of membership records associated with the channel.
        [MembershipType <String>]: channelMembershipType
        [Messages <IMicrosoftGraphChatMessage[]>]: A collection of all the messages in the channel. A navigation property. Nullable.
        [SharedWithTeams <IMicrosoftGraphSharedWithChannelTeamInfo[]>]: A collection of teams with which a channel is shared.
          [DisplayName <String>]: The name of the team.
          [Team <IMicrosoftGraphTeam>]: team
          [TenantId <String>]: The ID of the Azure Active Directory tenant.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AllowedMembers <IMicrosoftGraphConversationMember[]>]: A collection of team members who have access to the shared channel.
          [IsHostTeam <Boolean?>]: Indicates whether the team is the host of the channel.
        [Tabs <IMicrosoftGraphTeamsTab[]>]: A collection of all the tabs in the channel. A navigation property.
        [TenantId <String>]: The ID of the Azure Active Directory tenant.
        [WebUrl <String>]: A hyperlink that will go to the channel in Microsoft Teams. This is the URL that you get when you right-click a channel in Microsoft Teams and select Get link to channel. This URL should be treated as an opaque blob, and not parsed. Read-only.
      [Channels <IMicrosoftGraphChannel[]>]: The collection of channels and messages associated with the team.
      [Classification <String>]: An optional label. Typically describes the data or business sensitivity of the team. Must match one of a pre-configured set in the tenant's directory.
      [CreatedDateTime <DateTime?>]: Timestamp at which the team was created.
      [Description <String>]: An optional description for the team. Maximum length: 1024 characters.
      [DisplayName <String>]: The name of the team.
      [FunSettings <IMicrosoftGraphTeamFunSettings>]: teamFunSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AllowCustomMemes <Boolean?>]: If set to true, enables users to include custom memes.
        [AllowGiphy <Boolean?>]: If set to true, enables Giphy use.
        [AllowStickersAndMemes <Boolean?>]: If set to true, enables users to include stickers and memes.
        [GiphyContentRating <String>]: giphyRatingType
      [Group <IMicrosoftGraphGroup>]: group
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AcceptedSenders <IMicrosoftGraphDirectoryObject[]>]: The list of users or groups that are allowed to create post's or calendar events in this group. If this list is non-empty then only users or groups listed here are allowed to post.
        [AllowExternalSenders <Boolean?>]: Indicates if people external to the organization can send messages to the group. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        [AppRoleAssignments <IMicrosoftGraphAppRoleAssignment[]>]: Represents the app roles a group has been granted for an application. Supports $expand.
        [AssignedLabels <IMicrosoftGraphAssignedLabel[]>]: The list of sensitivity label pairs (label ID, label name) associated with a Microsoft 365 group. Returned only on $select.
          [DisplayName <String>]: The display name of the label. Read-only.
          [LabelId <String>]: The unique identifier of the label.
        [AssignedLicenses <IMicrosoftGraphAssignedLicense[]>]: The licenses that are assigned to the group. Returned only on $select. Supports $filter (eq).Read-only.
        [AutoSubscribeNewMembers <Boolean?>]: Indicates if new members added to the group will be auto-subscribed to receive email notifications. You can set this property in a PATCH request for the group; do not set it in the initial POST request that creates the group. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        [Calendar <IMicrosoftGraphCalendar>]: calendar
        [CalendarView <IMicrosoftGraphEvent[]>]: The calendar view for the calendar. Read-only.
        [Classification <String>]: Describes a classification for the group (such as low, medium or high business impact). Valid values for this property are defined by creating a ClassificationList setting value, based on the template definition.Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith).
        [Conversations <IMicrosoftGraphConversation[]>]: The group's conversations.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [HasAttachments <Boolean?>]: Indicates whether any of the posts within this Conversation has at least one attachment. Supports $filter (eq, ne) and $search.
          [LastDeliveredDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
          [Preview <String>]: A short summary from the body of the latest post in this conversation. Supports $filter (eq, ne, le, ge).
          [Threads <IMicrosoftGraphConversationThread[]>]: A collection of all the conversation threads in the conversation. A navigation property. Read-only. Nullable.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [CcRecipients <IMicrosoftGraphRecipient[]>]: The Cc: recipients for the thread. Returned only on $select.
            [HasAttachments <Boolean?>]: Indicates whether any of the posts within this thread has at least one attachment. Returned by default.
            [IsLocked <Boolean?>]: Indicates if the thread is locked. Returned by default.
            [LastDeliveredDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.Returned by default.
            [Posts <IMicrosoftGraphPost[]>]: 
              [Categories <String[]>]: The categories associated with the item
              [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
              [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
              [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Attachments <IMicrosoftGraphAttachment[]>]: Read-only. Nullable. Supports $expand.
              [Body <IMicrosoftGraphItemBody>]: itemBody
              [ConversationId <String>]: Unique ID of the conversation. Read-only.
              [ConversationThreadId <String>]: Unique ID of the conversation thread. Read-only.
              [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the post. Read-only. Nullable. Supports $expand.
              [From <IMicrosoftGraphRecipient>]: recipient
              [HasAttachments <Boolean?>]: Indicates whether the post has at least one attachment. This is a default property.
              [InReplyTo <IMicrosoftGraphPost>]: post
              [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the post. Read-only. Nullable.
              [NewParticipants <IMicrosoftGraphRecipient[]>]: Conversation participants that were added to the thread as part of this post.
              [ReceivedDateTime <DateTime?>]: Specifies when the post was received. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
              [Sender <IMicrosoftGraphRecipient>]: recipient
              [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the post. Read-only. Nullable.
            [Preview <String>]: A short summary from the body of the latest post in this conversation. Returned by default.
            [ToRecipients <IMicrosoftGraphRecipient[]>]: The To: recipients for the thread. Returned only on $select.
            [Topic <String>]: The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated. Returned by default.
            [UniqueSenders <String[]>]: All the users that sent a message to this thread. Returned by default.
          [Topic <String>]: The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated.
          [UniqueSenders <String[]>]: All the users that sent a message to this Conversation.
        [CreatedDateTime <DateTime?>]: Timestamp of when the group was created. The value cannot be modified and is automatically populated when the group is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Read-only.
        [CreatedOnBehalfOf <IMicrosoftGraphDirectoryObject>]: directoryObject
        [Description <String>]: An optional description for the group. Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith) and $search.
        [DisplayName <String>]: The display name for the group. This property is required when a group is created and cannot be cleared during updates. Maximum length is 256 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values), $search, and $orderBy.
        [Drive <IMicrosoftGraphDrive>]: drive
        [Drives <IMicrosoftGraphDrive[]>]: The group's drives. Read-only.
        [Events <IMicrosoftGraphEvent[]>]: The group's calendar events.
        [ExpirationDateTime <DateTime?>]: Timestamp of when the group is set to expire. Is null for security groups but for Microsoft 365 groups, it represents when the group is set to expire as defined in the groupLifecyclePolicy. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.
        [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the group. Read-only. Nullable.
        [GroupLifecyclePolicies <IMicrosoftGraphGroupLifecyclePolicy[]>]: The collection of lifecycle policies for this group. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AlternateNotificationEmails <String>]: List of email address to send notifications for groups without owners. Multiple email address can be defined by separating email address with a semicolon.
          [GroupLifetimeInDays <Int32?>]: Number of days before a group expires and needs to be renewed. Once renewed, the group expiration is extended by the number of days defined.
          [ManagedGroupTypes <String>]: The group type for which the expiration policy applies. Possible values are All, Selected or None.
        [GroupTypes <String[]>]: Specifies the group type and its membership. If the collection contains Unified, the group is a Microsoft 365 group; otherwise, it's either a security group or distribution group. For details, see groups overview.If the collection includes DynamicMembership, the group has dynamic membership; otherwise, membership is static. Returned by default. Supports $filter (eq, not).
        [HasMembersWithLicenseErrors <Boolean?>]: Indicates whether there are members in this group that have license errors from its group-based license assignment. This property is never returned on a GET operation. You can use it as a $filter argument to get groups that have members with license errors (that is, filter for this property being true). See an example. Supports $filter (eq).
        [HideFromAddressLists <Boolean?>]: True if the group is not displayed in certain parts of the Outlook UI: the Address Book, address lists for selecting message recipients, and the Browse Groups dialog for searching groups; otherwise, false. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        [HideFromOutlookClients <Boolean?>]: True if the group is not displayed in Outlook clients, such as Outlook for Windows and Outlook on the web; otherwise, false. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        [IsArchived <Boolean?>]: When a group is associated with a team this property determines whether the team is in read-only mode.To read this property, use the /group/{groupId}/team endpoint or the Get team API. To update this property, use the archiveTeam and unarchiveTeam APIs.
        [IsAssignableToRole <Boolean?>]: Indicates whether this group can be assigned to an Azure Active Directory role or not. Optional. This property can only be set while creating the group and is immutable. If set to true, the securityEnabled property must also be set to true, visibility must be Hidden, and the group cannot be a dynamic group (that is, groupTypes cannot contain DynamicMembership). Only callers in Global Administrator and Privileged Role Administrator roles can set this property. The caller must also be assigned the RoleManagement.ReadWrite.Directory permission to set this property or update the membership of such groups. For more, see Using a group to manage Azure AD role assignmentsUsing this feature requires a Azure AD Premium P1 license. Returned by default. Supports $filter (eq, ne, not).
        [IsSubscribedByMail <Boolean?>]: Indicates whether the signed-in user is subscribed to receive email conversations. Default value is true. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        [LicenseProcessingState <IMicrosoftGraphLicenseProcessingState>]: licenseProcessingState
          [(Any) <Object>]: This indicates any property can be added to this object.
          [State <String>]: 
        [Mail <String>]: The SMTP address for the group, for example, 'serviceadmins@contoso.onmicrosoft.com'. Returned by default. Read-only. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
        [MailEnabled <Boolean?>]: Specifies whether the group is mail-enabled. Required. Returned by default. Supports $filter (eq, ne, not).
        [MailNickname <String>]: The mail alias for the group, unique for Microsoft 365 groups in the organization. Maximum length is 64 characters. This property can contain only characters in the ASCII character set 0 - 127 except the following: @ () / [] ' ; : <> , SPACE. Required. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
        [MemberOf <IMicrosoftGraphDirectoryObject[]>]: Groups that this group is a member of. HTTP Methods: GET (supported for all groups). Read-only. Nullable. Supports $expand.
        [Members <IMicrosoftGraphDirectoryObject[]>]: The members of this group, who can be users, devices, other groups, or service principals. Supports the List members, Add member, and Remove member operations. Nullable. Supports $expand including nested $select. For example, /groups?$filter=startsWith(displayName,'Role')&$select=id,displayName&$expand=members($select=id,userPrincipalName,displayName).
        [MembersWithLicenseErrors <IMicrosoftGraphDirectoryObject[]>]: A list of group members with license errors from this group-based license assignment. Read-only.
        [MembershipRule <String>]: The rule that determines members for this group if the group is a dynamic group (groupTypes contains DynamicMembership). For more information about the syntax of the membership rule, see Membership Rules syntax. Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith).
        [MembershipRuleProcessingState <String>]: Indicates whether the dynamic membership processing is on or paused. Possible values are On or Paused. Returned by default. Supports $filter (eq, ne, not, in).
        [OnPremisesDomainName <String>]: 
        [OnPremisesLastSyncDateTime <DateTime?>]: Indicates the last time at which the group was synced with the on-premises directory.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Read-only. Supports $filter (eq, ne, not, ge, le, in).
        [OnPremisesNetBiosName <String>]: 
        [OnPremisesProvisioningErrors <IMicrosoftGraphOnPremisesProvisioningError[]>]: Errors when using Microsoft synchronization product during provisioning. Returned by default. Supports $filter (eq, not).
          [Category <String>]: Category of the provisioning error. Note: Currently, there is only one possible value. Possible value: PropertyConflict - indicates a property value is not unique. Other objects contain the same value for the property.
          [OccurredDateTime <DateTime?>]: The date and time at which the error occurred.
          [PropertyCausingError <String>]: Name of the directory property causing the error. Current possible values: UserPrincipalName or ProxyAddress
          [Value <String>]: Value of the property causing the error.
        [OnPremisesSamAccountName <String>]: Contains the on-premises SAM account name synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect.Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith). Read-only.
        [OnPremisesSecurityIdentifier <String>]: Contains the on-premises security identifier (SID) for the group that was synchronized from on-premises to the cloud. Returned by default. Supports $filter (eq including on null values). Read-only.
        [OnPremisesSyncEnabled <Boolean?>]: true if this group is synced from an on-premises directory; false if this group was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Returned by default. Read-only. Supports $filter (eq, ne, not, in, and eq on null values).
        [Onenote <IMicrosoftGraphOnenote>]: onenote
        [Owners <IMicrosoftGraphDirectoryObject[]>]: The owners of the group. Limited to 100 owners. Nullable. If this property is not specified when creating a Microsoft 365 group, the calling user is automatically assigned as the group owner.  Supports $filter (/$count eq 0, /$count ne 0, /$count eq 1, /$count ne 1). Supports $expand including nested $select. For example, /groups?$filter=startsWith(displayName,'Role')&$select=id,displayName&$expand=owners($select=id,userPrincipalName,displayName).
        [PermissionGrants <IMicrosoftGraphResourceSpecificPermissionGrant[]>]: The permission that has been granted for a group to a specific application. Supports $expand.
        [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
        [Photos <IMicrosoftGraphProfilePhoto[]>]: The profile photos owned by the group. Read-only. Nullable.
        [Planner <IMicrosoftGraphPlannerGroup>]: plannerGroup
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Plans <IMicrosoftGraphPlannerPlan[]>]: Read-only. Nullable. Returns the plannerPlans owned by the group.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Buckets <IMicrosoftGraphPlannerBucket[]>]: Read-only. Nullable. Collection of buckets in the plan.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Name <String>]: Name of the bucket.
              [OrderHint <String>]: Hint used to order items of this type in a list view. For details about the supported format, see Using order hints in Planner.
              [PlanId <String>]: Plan ID to which the bucket belongs.
              [Tasks <IMicrosoftGraphPlannerTask[]>]: Read-only. Nullable. The collection of tasks in the bucket.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [ActiveChecklistItemCount <Int32?>]: Number of checklist items with value set to false, representing incomplete items.
                [AppliedCategories <IMicrosoftGraphPlannerAppliedCategories>]: plannerAppliedCategories
                  [(Any) <Object>]: This indicates any property can be added to this object.
                [AssignedToTaskBoardFormat <IMicrosoftGraphPlannerAssignedToTaskBoardTaskFormat>]: plannerAssignedToTaskBoardTaskFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [OrderHintsByAssignee <IMicrosoftGraphPlannerOrderHintsByAssignee>]: plannerOrderHintsByAssignee
                    [(Any) <Object>]: This indicates any property can be added to this object.
                  [UnassignedOrderHint <String>]: Hint value used to order the task on the AssignedTo view of the Task Board when the task is not assigned to anyone, or if the orderHintsByAssignee dictionary does not provide an order hint for the user the task is assigned to. The format is defined as outlined here.
                [AssigneePriority <String>]: Hint used to order items of this type in a list view. The format is defined as outlined here.
                [Assignments <IMicrosoftGraphPlannerAssignments>]: plannerAssignments
                  [(Any) <Object>]: This indicates any property can be added to this object.
                [BucketId <String>]: Bucket ID to which the task belongs. The bucket needs to be in the plan that the task is in. It is 28 characters long and case-sensitive. Format validation is done on the service.
                [BucketTaskBoardFormat <IMicrosoftGraphPlannerBucketTaskBoardTaskFormat>]: plannerBucketTaskBoardTaskFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [OrderHint <String>]: Hint used to order tasks in the bucket view of the task board. For details about the supported format, see Using order hints in Planner.
                [ChecklistItemCount <Int32?>]: Number of checklist items that are present on the task.
                [CompletedBy <IMicrosoftGraphIdentitySet>]: identitySet
                [CompletedDateTime <DateTime?>]: Read-only. Date and time at which the 'percentComplete' of the task is set to '100'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
                [ConversationThreadId <String>]: Thread ID of the conversation on the task. This is the ID of the conversation thread object created in the group.
                [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
                [CreatedDateTime <DateTime?>]: Read-only. Date and time at which the task is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
                [Details <IMicrosoftGraphPlannerTaskDetails>]: plannerTaskDetails
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Checklist <IMicrosoftGraphPlannerChecklistItems>]: plannerChecklistItems
                    [(Any) <Object>]: This indicates any property can be added to this object.
                  [Description <String>]: Description of the task.
                  [PreviewType <String>]: plannerPreviewType
                  [References <IMicrosoftGraphPlannerExternalReferences>]: plannerExternalReferences
                    [(Any) <Object>]: This indicates any property can be added to this object.
                [DueDateTime <DateTime?>]: Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
                [HasDescription <Boolean?>]: Read-only. Value is true if the details object of the task has a non-empty description and false otherwise.
                [OrderHint <String>]: Hint used to order items of this type in a list view. The format is defined as outlined here.
                [PercentComplete <Int32?>]: Percentage of task completion. When set to 100, the task is considered completed.
                [PlanId <String>]: Plan ID to which the task belongs.
                [PreviewType <String>]: plannerPreviewType
                [Priority <Int32?>]: Priority of the task. The valid range of values is between 0 and 10, with the increasing value being lower priority (0 has the highest priority and 10 has the lowest priority).  Currently, Planner interprets values 0 and 1 as 'urgent', 2, 3 and 4 as 'important', 5, 6, and 7 as 'medium', and 8, 9, and 10 as 'low'.  Additionally, Planner sets the value 1 for 'urgent', 3 for 'important', 5 for 'medium', and 9 for 'low'.
                [ProgressTaskBoardFormat <IMicrosoftGraphPlannerProgressTaskBoardTaskFormat>]: plannerProgressTaskBoardTaskFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [OrderHint <String>]: Hint value used to order the task on the progress view of the task board. For details about the supported format, see Using order hints in Planner.
                [ReferenceCount <Int32?>]: Number of external references that exist on the task.
                [StartDateTime <DateTime?>]: Date and time at which the task starts. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
                [Title <String>]: Title of the task.
            [Container <IMicrosoftGraphPlannerPlanContainer>]: plannerPlanContainer
              [(Any) <Object>]: This indicates any property can be added to this object.
              [ContainerId <String>]: The identifier of the resource that contains the plan. Optional.
              [Type <String>]: plannerContainerType
              [Url <String>]: The full canonical URL of the container. Optional.
            [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [CreatedDateTime <DateTime?>]: Read-only. Date and time at which the plan is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
            [Details <IMicrosoftGraphPlannerPlanDetails>]: plannerPlanDetails
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [CategoryDescriptions <IMicrosoftGraphPlannerCategoryDescriptions>]: plannerCategoryDescriptions
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Category1 <String>]: The label associated with Category 1
                [Category10 <String>]: The label associated with Category 10
                [Category11 <String>]: The label associated with Category 11
                [Category12 <String>]: The label associated with Category 12
                [Category13 <String>]: The label associated with Category 13
                [Category14 <String>]: The label associated with Category 14
                [Category15 <String>]: The label associated with Category 15
                [Category16 <String>]: The label associated with Category 16
                [Category17 <String>]: The label associated with Category 17
                [Category18 <String>]: The label associated with Category 18
                [Category19 <String>]: The label associated with Category 19
                [Category2 <String>]: The label associated with Category 2
                [Category20 <String>]: The label associated with Category 20
                [Category21 <String>]: The label associated with Category 21
                [Category22 <String>]: The label associated with Category 22
                [Category23 <String>]: The label associated with Category 23
                [Category24 <String>]: The label associated with Category 24
                [Category25 <String>]: The label associated with Category 25
                [Category3 <String>]: The label associated with Category 3
                [Category4 <String>]: The label associated with Category 4
                [Category5 <String>]: The label associated with Category 5
                [Category6 <String>]: The label associated with Category 6
                [Category7 <String>]: The label associated with Category 7
                [Category8 <String>]: The label associated with Category 8
                [Category9 <String>]: The label associated with Category 9
              [SharedWith <IMicrosoftGraphPlannerUserIds>]: plannerUserIds
                [(Any) <Object>]: This indicates any property can be added to this object.
            [Owner <String>]: 
            [Tasks <IMicrosoftGraphPlannerTask[]>]: Read-only. Nullable. Collection of tasks in the plan.
            [Title <String>]: Required. Title of the plan.
        [PreferredDataLocation <String>]: The preferred data location for the Microsoft 365 group. By default, the group inherits the group creator's preferred data location. To set this property, the calling user must be assigned one of the following Azure AD roles:  Global Administrator  User Account Administrator Directory Writer  Exchange Administrator  SharePoint Administrator  For more information about this property, see OneDrive Online Multi-Geo. Nullable. Returned by default.
        [PreferredLanguage <String>]: The preferred language for a Microsoft 365 group. Should follow ISO 639-1 Code; for example en-US. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
        [ProxyAddresses <String[]>]: Email addresses for the group that direct to the same group mailbox. For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. The any operator is required to filter expressions on multi-valued properties. Returned by default. Read-only. Not nullable. Supports $filter (eq, not, ge, le, startsWith, endsWith, /$count eq 0, /$count ne 0).
        [RejectedSenders <IMicrosoftGraphDirectoryObject[]>]: The list of users or groups that are not allowed to create posts or calendar events in this group. Nullable
        [RenewedDateTime <DateTime?>]: Timestamp of when the group was last renewed. This cannot be modified directly and is only updated via the renew service action. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.
        [SecurityEnabled <Boolean?>]: Specifies whether the group is a security group. Required. Returned by default. Supports $filter (eq, ne, not, in).
        [SecurityIdentifier <String>]: Security identifier of the group, used in Windows scenarios. Returned by default.
        [Settings <IMicrosoftGraphGroupSetting[]>]: Settings that can govern this group's behavior, like whether members can invite guest users to the group. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DisplayName <String>]: Display name of this group of settings, which comes from the associated template.
          [TemplateId <String>]: Unique identifier for the tenant-level groupSettingTemplates object that's been customized for this group-level settings object. Read-only.
          [Values <IMicrosoftGraphSettingValue[]>]: Collection of name-value pairs corresponding to the name and defaultValue properties in the referenced groupSettingTemplates object.
            [Name <String>]: Name of the setting (as defined by the groupSettingTemplate).
            [Value <String>]: Value of the setting.
        [Sites <IMicrosoftGraphSite[]>]: The list of SharePoint sites in this group. Access the default site with /sites/root.
        [Team <IMicrosoftGraphTeam>]: team
        [Theme <String>]: Specifies a Microsoft 365 group's color theme. Possible values are Teal, Purple, Green, Blue, Pink, Orange or Red. Returned by default.
        [Threads <IMicrosoftGraphConversationThread[]>]: The group's conversation threads. Nullable.
        [TransitiveMemberOf <IMicrosoftGraphDirectoryObject[]>]: The groups that a group is a member of, either directly and through nested membership. Nullable.
        [TransitiveMembers <IMicrosoftGraphDirectoryObject[]>]: The direct and transitive members of a group. Nullable.
        [UnseenCount <Int32?>]: Count of conversations that have received new posts since the signed-in user last visited the group. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        [Visibility <String>]: Specifies the group join policy and group content visibility for groups. Possible values are: Private, Public, or HiddenMembership. HiddenMembership can be set only for Microsoft 365 groups, when the groups are created. It can't be updated later. Other values of visibility can be updated after group creation. If visibility value is not specified during group creation on Microsoft Graph, a security group is created as Private by default and Microsoft 365 group is Public. Groups assignable to roles are always Private. See group visibility options to learn more. Returned by default. Nullable.
      [GuestSettings <IMicrosoftGraphTeamGuestSettings>]: teamGuestSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AllowCreateUpdateChannels <Boolean?>]: If set to true, guests can add and update channels.
        [AllowDeleteChannels <Boolean?>]: If set to true, guests can delete channels.
      [IncomingChannels <IMicrosoftGraphChannel[]>]: List of channels shared with the team.
      [InstalledApps <IMicrosoftGraphTeamsAppInstallation[]>]: The apps installed in this team.
      [InternalId <String>]: A unique ID for the team that has been used in a few places such as the audit log/Office 365 Management Activity API.
      [IsArchived <Boolean?>]: Whether this team is in read-only mode.
      [MemberSettings <IMicrosoftGraphTeamMemberSettings>]: teamMemberSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AllowAddRemoveApps <Boolean?>]: If set to true, members can add and remove apps.
        [AllowCreatePrivateChannels <Boolean?>]: If set to true, members can add and update private channels.
        [AllowCreateUpdateChannels <Boolean?>]: If set to true, members can add and update channels.
        [AllowCreateUpdateRemoveConnectors <Boolean?>]: If set to true, members can add, update, and remove connectors.
        [AllowCreateUpdateRemoveTabs <Boolean?>]: If set to true, members can add, update, and remove tabs.
        [AllowDeleteChannels <Boolean?>]: If set to true, members can delete channels.
      [Members <IMicrosoftGraphConversationMember[]>]: Members and owners of the team.
      [MessagingSettings <IMicrosoftGraphTeamMessagingSettings>]: teamMessagingSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AllowChannelMentions <Boolean?>]: If set to true, @channel mentions are allowed.
        [AllowOwnerDeleteMessages <Boolean?>]: If set to true, owners can delete any message.
        [AllowTeamMentions <Boolean?>]: If set to true, @team mentions are allowed.
        [AllowUserDeleteMessages <Boolean?>]: If set to true, users can delete their messages.
        [AllowUserEditMessages <Boolean?>]: If set to true, users can edit their messages.
      [Operations <IMicrosoftGraphTeamsAsyncOperation[]>]: The async operations that ran or are running on this team.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AttemptsCount <Int32?>]: Number of times the operation was attempted before being marked successful or failed.
        [CreatedDateTime <DateTime?>]: Time when the operation was created.
        [Error <IMicrosoftGraphOperationError>]: operationError
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Code <String>]: Operation error code.
          [Message <String>]: Operation error message.
        [LastActionDateTime <DateTime?>]: Time when the async operation was last updated.
        [OperationType <String>]: teamsAsyncOperationType
        [Status <String>]: teamsAsyncOperationStatus
        [TargetResourceId <String>]: The ID of the object that's created or modified as result of this async operation, typically a team.
        [TargetResourceLocation <String>]: The location of the object that's created or modified as result of this async operation. This URL should be treated as an opaque value and not parsed into its component paths.
      [PermissionGrants <IMicrosoftGraphResourceSpecificPermissionGrant[]>]: 
      [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
      [PrimaryChannel <IMicrosoftGraphChannel>]: channel
      [Schedule <IMicrosoftGraphSchedule>]: schedule
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Enabled <Boolean?>]: Indicates whether the schedule is enabled for the team. Required.
        [OfferShiftRequests <IMicrosoftGraphOfferShiftRequest[]>]: The offer requests for shifts in the schedule.
          [AssignedTo <String>]: scheduleChangeRequestActor
          [ManagerActionMessage <String>]: 
          [SenderMessage <String>]: 
          [State <String>]: scheduleChangeState
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [RecipientActionMessage <String>]: Custom message sent by recipient of the offer shift request.
          [RecipientUserId <String>]: User ID of the recipient of the offer shift request.
          [SenderShiftId <String>]: User ID of the sender of the offer shift request.
        [OfferShiftRequestsEnabled <Boolean?>]: Indicates whether offer shift requests are enabled for the schedule.
        [OpenShiftChangeRequests <IMicrosoftGraphOpenShiftChangeRequest[]>]: The open shift requests in the schedule.
          [AssignedTo <String>]: scheduleChangeRequestActor
          [ManagerActionMessage <String>]: 
          [SenderMessage <String>]: 
          [State <String>]: scheduleChangeState
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [OpenShiftId <String>]: ID for the open shift.
        [OpenShifts <IMicrosoftGraphOpenShift[]>]: The set of open shifts in a scheduling group in the schedule.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DraftOpenShift <IMicrosoftGraphOpenShiftItem>]: openShiftItem
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Activities <IMicrosoftGraphShiftActivity[]>]: An incremental part of a shift which can cover details of when and where an employee is during their shift. For example, an assignment or a scheduled break or lunch. Required.
              [Code <String>]: Customer defined code for the shiftActivity. Required.
              [DisplayName <String>]: The name of the shiftActivity. Required.
              [EndDateTime <DateTime?>]: The end date and time for the shiftActivity. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
              [IsPaid <Boolean?>]: Indicates whether the microsoft.graph.user should be paid for the activity during their shift. Required.
              [StartDateTime <DateTime?>]: The start date and time for the shiftActivity. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
              [Theme <String>]: scheduleEntityTheme
            [DisplayName <String>]: The shift label of the shiftItem.
            [Notes <String>]: The shift notes for the shiftItem.
            [EndDateTime <DateTime?>]: 
            [StartDateTime <DateTime?>]: 
            [Theme <String>]: scheduleEntityTheme
            [OpenSlotCount <Int32?>]: Count of the number of slots for the given open shift.
          [SchedulingGroupId <String>]: ID for the scheduling group that the open shift belongs to.
          [SharedOpenShift <IMicrosoftGraphOpenShiftItem>]: openShiftItem
        [OpenShiftsEnabled <Boolean?>]: Indicates whether open shifts are enabled for the schedule.
        [ProvisionStatus <String>]: operationStatus
        [SchedulingGroups <IMicrosoftGraphSchedulingGroup[]>]: The logical grouping of users in the schedule (usually by role).
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DisplayName <String>]: The display name for the schedulingGroup. Required.
          [UserIds <String[]>]: The list of user IDs that are a member of the schedulingGroup. Required.
        [Shifts <IMicrosoftGraphShift[]>]: The shifts in the schedule.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DraftShift <IMicrosoftGraphShiftItem>]: shiftItem
            [(Any) <Object>]: This indicates any property can be added to this object.
            [EndDateTime <DateTime?>]: 
            [StartDateTime <DateTime?>]: 
            [Theme <String>]: scheduleEntityTheme
            [Activities <IMicrosoftGraphShiftActivity[]>]: An incremental part of a shift which can cover details of when and where an employee is during their shift. For example, an assignment or a scheduled break or lunch. Required.
            [DisplayName <String>]: The shift label of the shiftItem.
            [Notes <String>]: The shift notes for the shiftItem.
          [SchedulingGroupId <String>]: ID of the scheduling group the shift is part of. Required.
          [SharedShift <IMicrosoftGraphShiftItem>]: shiftItem
          [UserId <String>]: ID of the user assigned to the shift. Required.
        [SwapShiftsChangeRequests <IMicrosoftGraphSwapShiftsChangeRequest[]>]: The swap requests for shifts in the schedule.
          [RecipientActionMessage <String>]: Custom message sent by recipient of the offer shift request.
          [RecipientUserId <String>]: User ID of the recipient of the offer shift request.
          [SenderShiftId <String>]: User ID of the sender of the offer shift request.
          [AssignedTo <String>]: scheduleChangeRequestActor
          [ManagerActionMessage <String>]: 
          [SenderMessage <String>]: 
          [State <String>]: scheduleChangeState
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [RecipientShiftId <String>]: ShiftId for the recipient user with whom the request is to swap.
        [SwapShiftsRequestsEnabled <Boolean?>]: Indicates whether swap shifts requests are enabled for the schedule.
        [TimeClockEnabled <Boolean?>]: Indicates whether time clock is enabled for the schedule.
        [TimeOffReasons <IMicrosoftGraphTimeOffReason[]>]: The set of reasons for a time off in the schedule.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DisplayName <String>]: The name of the timeOffReason. Required.
          [IconType <String>]: timeOffReasonIconType
          [IsActive <Boolean?>]: Indicates whether the timeOffReason can be used when creating new entities or updating existing ones. Required.
        [TimeOffRequests <IMicrosoftGraphTimeOffRequest[]>]: The time off requests in the schedule.
          [AssignedTo <String>]: scheduleChangeRequestActor
          [ManagerActionMessage <String>]: 
          [SenderMessage <String>]: 
          [State <String>]: scheduleChangeState
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [EndDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
          [StartDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
          [TimeOffReasonId <String>]: The reason for the time off.
        [TimeOffRequestsEnabled <Boolean?>]: Indicates whether time off requests are enabled for the schedule.
        [TimeZone <String>]: Indicates the time zone of the schedule team using tz database format. Required.
        [TimesOff <IMicrosoftGraphTimeOff[]>]: The instances of times off in the schedule.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DraftTimeOff <IMicrosoftGraphTimeOffItem>]: timeOffItem
            [(Any) <Object>]: This indicates any property can be added to this object.
            [EndDateTime <DateTime?>]: 
            [StartDateTime <DateTime?>]: 
            [Theme <String>]: scheduleEntityTheme
            [TimeOffReasonId <String>]: ID of the timeOffReason for this timeOffItem. Required.
          [SharedTimeOff <IMicrosoftGraphTimeOffItem>]: timeOffItem
          [UserId <String>]: ID of the user assigned to the timeOff. Required.
        [WorkforceIntegrationIds <String[]>]: 
      [Specialization <String>]: teamSpecialization
      [Summary <IMicrosoftGraphTeamSummary>]: teamSummary
        [(Any) <Object>]: This indicates any property can be added to this object.
        [GuestsCount <Int32?>]: Count of guests in a team.
        [MembersCount <Int32?>]: Count of members in a team.
        [OwnersCount <Int32?>]: Count of owners in a team.
      [Tags <IMicrosoftGraphTeamworkTag[]>]: The tags associated with the team.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Description <String>]: The description of the tag as it will appear to the user in Microsoft Teams. A teamworkTag can't have more than 200 teamworkTagMembers.
        [DisplayName <String>]: The name of the tag as it will appear to the user in Microsoft Teams.
        [MemberCount <Int32?>]: The number of users assigned to the tag.
        [Members <IMicrosoftGraphTeamworkTagMember[]>]: Users assigned to the tag.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DisplayName <String>]: The member's display name.
          [TenantId <String>]: The ID of the tenant that the tag member is a part of.
          [UserId <String>]: The user ID of the member.
        [TagType <String>]: teamworkTagType
        [TeamId <String>]: ID of the team in which the tag is defined.
      [Template <IMicrosoftGraphTeamsTemplate>]: teamsTemplate
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
      [TenantId <String>]: The ID of the Azure Active Directory tenant.
      [Visibility <String>]: teamVisibilityType
      [WebUrl <String>]: A hyperlink that will go to the team in the Microsoft Teams client. This is the URL that you get when you right-click a team in the Microsoft Teams client and select Get link to team. This URL should be treated as an opaque blob, and not parsed.
    [LastPasswordChangeDateTime <DateTime?>]: The time when this Azure AD user last changed their password or when their password was created, whichever date the latest action was performed. The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned only on $select.
    [LegalAgeGroupClassification <String>]: Used by enterprise applications to determine the legal age group of the user. This property is read-only and calculated based on ageGroup and consentProvidedForMinor properties. Allowed values: null, MinorWithOutParentalConsent, MinorWithParentalConsent, MinorNoParentalConsentRequired, NotAdult and Adult. Refer to the legal age group property definitions for further information. Returned only on $select.
    [LicenseAssignmentStates <IMicrosoftGraphLicenseAssignmentState[]>]: State of license assignments for this user. Also indicates licenses that are directly-assigned and those that the user has inherited through group memberships. Read-only. Returned only on $select.
      [AssignedByGroup <String>]: 
      [DisabledPlans <String[]>]: 
      [Error <String>]: 
      [LastUpdatedDateTime <DateTime?>]: 
      [SkuId <String>]: 
      [State <String>]: 
    [LicenseDetails <IMicrosoftGraphLicenseDetails[]>]: A collection of this user's license details. Read-only.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ServicePlans <IMicrosoftGraphServicePlanInfo[]>]: Information about the service plans assigned with the license. Read-only, Not nullable
        [AppliesTo <String>]: The object the service plan can be assigned to. The possible values are:User - service plan can be assigned to individual users.Company - service plan can be assigned to the entire tenant.
        [ProvisioningStatus <String>]: The provisioning status of the service plan. The possible values are:Success - Service is fully provisioned.Disabled - Service has been disabled.ErrorStatus - The service plan has not been provisioned and is in an error state.PendingInput - Service is not yet provisioned; awaiting service confirmation.PendingActivation - Service is provisioned but requires explicit activation by administrator (for example, Intune_O365 service plan)PendingProvisioning - Microsoft has added a new service to the product SKU and it has not been activated in the tenant, yet.
        [ServicePlanId <String>]: The unique identifier of the service plan.
        [ServicePlanName <String>]: The name of the service plan.
      [SkuId <String>]: Unique identifier (GUID) for the service SKU. Equal to the skuId property on the related SubscribedSku object. Read-only
      [SkuPartNumber <String>]: Unique SKU display name. Equal to the skuPartNumber on the related SubscribedSku object; for example: 'AAD_Premium'. Read-only
    [Mail <String>]: The SMTP address for the user, for example, jeff@contoso.onmicrosoft.com. Changes to this property will also update the user's proxyAddresses collection to include the value as an SMTP address. This property cannot contain accent characters.  NOTE: We do not recommend updating this property for Azure AD B2C user profiles. Use the otherMails property instead. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, endsWith, and eq on null values).
    [MailFolders <IMicrosoftGraphMailFolder[]>]: The user's mail folders. Read-only. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ChildFolderCount <Int32?>]: The number of immediate child mailFolders in the current mailFolder.
      [ChildFolders <IMicrosoftGraphMailFolder[]>]: The collection of child folders in the mailFolder.
      [DisplayName <String>]: The mailFolder's display name.
      [IsHidden <Boolean?>]: Indicates whether the mailFolder is hidden. This property can be set only when creating the folder. Find more information in Hidden mail folders.
      [MessageRules <IMicrosoftGraphMessageRule[]>]: The collection of rules that apply to the user's Inbox folder.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Actions <IMicrosoftGraphMessageRuleActions>]: messageRuleActions
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AssignCategories <String[]>]: A list of categories to be assigned to a message.
          [CopyToFolder <String>]: The ID of a folder that a message is to be copied to.
          [Delete <Boolean?>]: Indicates whether a message should be moved to the Deleted Items folder.
          [ForwardAsAttachmentTo <IMicrosoftGraphRecipient[]>]: The email addresses of the recipients to which a message should be forwarded as an attachment.
          [ForwardTo <IMicrosoftGraphRecipient[]>]: The email addresses of the recipients to which a message should be forwarded.
          [MarkAsRead <Boolean?>]: Indicates whether a message should be marked as read.
          [MarkImportance <String>]: importance
          [MoveToFolder <String>]: The ID of the folder that a message will be moved to.
          [PermanentDelete <Boolean?>]: Indicates whether a message should be permanently deleted and not saved to the Deleted Items folder.
          [RedirectTo <IMicrosoftGraphRecipient[]>]: The email addresses to which a message should be redirected.
          [StopProcessingRules <Boolean?>]: Indicates whether subsequent rules should be evaluated.
        [Conditions <IMicrosoftGraphMessageRulePredicates>]: messageRulePredicates
          [(Any) <Object>]: This indicates any property can be added to this object.
          [BodyContains <String[]>]: Represents the strings that should appear in the body of an incoming message in order for the condition or exception to apply.
          [BodyOrSubjectContains <String[]>]: Represents the strings that should appear in the body or subject of an incoming message in order for the condition or exception to apply.
          [Categories <String[]>]: Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply.
          [FromAddresses <IMicrosoftGraphRecipient[]>]: Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply.
          [HasAttachments <Boolean?>]: Indicates whether an incoming message must have attachments in order for the condition or exception to apply.
          [HeaderContains <String[]>]: Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply.
          [Importance <String>]: importance
          [IsApprovalRequest <Boolean?>]: Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.
          [IsAutomaticForward <Boolean?>]: Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.
          [IsAutomaticReply <Boolean?>]: Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.
          [IsEncrypted <Boolean?>]: Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.
          [IsMeetingRequest <Boolean?>]: Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.
          [IsMeetingResponse <Boolean?>]: Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.
          [IsNonDeliveryReport <Boolean?>]: Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.
          [IsPermissionControlled <Boolean?>]: Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception to apply.
          [IsReadReceipt <Boolean?>]: Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.
          [IsSigned <Boolean?>]: Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.
          [IsVoicemail <Boolean?>]: Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.
          [MessageActionFlag <String>]: messageActionFlag
          [NotSentToMe <Boolean?>]: Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or exception to apply.
          [RecipientContains <String[]>]: Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order for the condition or exception to apply.
          [SenderContains <String[]>]: Represents the strings that appear in the from property of an incoming message in order for the condition or exception to apply.
          [Sensitivity <String>]: sensitivity
          [SentCcMe <Boolean?>]: Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the condition or exception to apply.
          [SentOnlyToMe <Boolean?>]: Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition or exception to apply.
          [SentToAddresses <IMicrosoftGraphRecipient[]>]: Represents the email addresses that an incoming message must have been sent to in order for the condition or exception to apply.
          [SentToMe <Boolean?>]: Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the condition or exception to apply.
          [SentToOrCcMe <Boolean?>]: Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message in order for the condition or exception to apply.
          [SubjectContains <String[]>]: Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply.
          [WithinSizeRange <IMicrosoftGraphSizeRange>]: sizeRange
            [(Any) <Object>]: This indicates any property can be added to this object.
            [MaximumSize <Int32?>]: The maximum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.
            [MinimumSize <Int32?>]: The minimum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.
        [DisplayName <String>]: The display name of the rule.
        [Exceptions <IMicrosoftGraphMessageRulePredicates>]: messageRulePredicates
        [HasError <Boolean?>]: Indicates whether the rule is in an error condition. Read-only.
        [IsEnabled <Boolean?>]: Indicates whether the rule is enabled to be applied to messages.
        [IsReadOnly <Boolean?>]: Indicates if the rule is read-only and cannot be modified or deleted by the rules REST API.
        [Sequence <Int32?>]: Indicates the order in which the rule is executed, among other rules.
      [Messages <IMicrosoftGraphMessage[]>]: The collection of messages in the mailFolder.
        [Categories <String[]>]: The categories associated with the item
        [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
        [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Attachments <IMicrosoftGraphAttachment[]>]: The fileAttachment and itemAttachment attachments for the message.
        [BccRecipients <IMicrosoftGraphRecipient[]>]: The Bcc: recipients for the message.
        [Body <IMicrosoftGraphItemBody>]: itemBody
        [BodyPreview <String>]: The first 255 characters of the message body. It is in text format.
        [CcRecipients <IMicrosoftGraphRecipient[]>]: The Cc: recipients for the message.
        [ConversationId <String>]: The ID of the conversation the email belongs to.
        [ConversationIndex <Byte[]>]: Indicates the position of the message within the conversation.
        [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the message. Nullable.
        [Flag <IMicrosoftGraphFollowupFlag>]: followupFlag
          [(Any) <Object>]: This indicates any property can be added to this object.
          [CompletedDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
          [DueDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
          [FlagStatus <String>]: followupFlagStatus
          [StartDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [From <IMicrosoftGraphRecipient>]: recipient
        [HasAttachments <Boolean?>]: Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>.
        [Importance <String>]: importance
        [InferenceClassification <String>]: inferenceClassificationType
        [InternetMessageHeaders <IMicrosoftGraphInternetMessageHeader[]>]: 
          [Name <String>]: Represents the key in a key-value pair.
          [Value <String>]: The value in a key-value pair.
        [InternetMessageId <String>]: 
        [IsDeliveryReceiptRequested <Boolean?>]: 
        [IsDraft <Boolean?>]: 
        [IsRead <Boolean?>]: 
        [IsReadReceiptRequested <Boolean?>]: 
        [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the message. Nullable.
        [ParentFolderId <String>]: 
        [ReceivedDateTime <DateTime?>]: 
        [ReplyTo <IMicrosoftGraphRecipient[]>]: 
        [Sender <IMicrosoftGraphRecipient>]: recipient
        [SentDateTime <DateTime?>]: 
        [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the message. Nullable.
        [Subject <String>]: 
        [ToRecipients <IMicrosoftGraphRecipient[]>]: 
        [UniqueBody <IMicrosoftGraphItemBody>]: itemBody
        [WebLink <String>]: 
      [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the mailFolder. Read-only. Nullable.
      [ParentFolderId <String>]: The unique identifier for the mailFolder's parent mailFolder.
      [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the mailFolder. Read-only. Nullable.
      [TotalItemCount <Int32?>]: The number of items in the mailFolder.
      [UnreadItemCount <Int32?>]: The number of items in the mailFolder marked as unread.
    [MailNickname <String>]: The mail alias for the user. This property must be specified when a user is created. Maximum length is 64 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [MailboxSettings <IMicrosoftGraphMailboxSettings>]: mailboxSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [ArchiveFolder <String>]: Folder ID of an archive folder for the user.
      [AutomaticRepliesSetting <IMicrosoftGraphAutomaticRepliesSetting>]: automaticRepliesSetting
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ExternalAudience <String>]: externalAudienceScope
        [ExternalReplyMessage <String>]: The automatic reply to send to the specified external audience, if Status is AlwaysEnabled or Scheduled.
        [InternalReplyMessage <String>]: The automatic reply to send to the audience internal to the signed-in user's organization, if Status is AlwaysEnabled or Scheduled.
        [ScheduledEndDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [ScheduledStartDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [Status <String>]: automaticRepliesStatus
      [DateFormat <String>]: The date format for the user's mailbox.
      [DelegateMeetingMessageDeliveryOptions <String>]: delegateMeetingMessageDeliveryOptions
      [Language <IMicrosoftGraphLocaleInfo>]: localeInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DisplayName <String>]: A name representing the user's locale in natural language, for example, 'English (United States)'.
        [Locale <String>]: A locale representation for the user, which includes the user's preferred language and country/region. For example, 'en-us'. The language component follows 2-letter codes as defined in ISO 639-1, and the country component follows 2-letter codes as defined in ISO 3166-1 alpha-2.
      [TimeFormat <String>]: The time format for the user's mailbox.
      [TimeZone <String>]: The default time zone for the user's mailbox.
      [UserPurpose <String>]: userPurpose
      [WorkingHours <IMicrosoftGraphWorkingHours>]: workingHours
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DaysOfWeek <String[]>]: The days of the week on which the user works.
        [EndTime <String>]: The time of the day that the user stops working.
        [StartTime <String>]: The time of the day that the user starts working.
        [TimeZone <IMicrosoftGraphTimeZoneBase>]: timeZoneBase
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Name <String>]: The name of a time zone. It can be a standard time zone name such as 'Hawaii-Aleutian Standard Time', or 'Customized Time Zone' for a custom time zone.
    [ManagedAppRegistrations <IMicrosoftGraphManagedAppRegistration[]>]: Zero or more managed app registrations that belong to the user.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
        [(Any) <Object>]: This indicates any property can be added to this object.
      [ApplicationVersion <String>]: App version
      [AppliedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policys already applied on the registered app when it last synchronized with managment service.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [CreatedDateTime <DateTime?>]: The date and time the policy was created.
        [Description <String>]: The policy's description.
        [DisplayName <String>]: Policy display name.
        [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
        [Version <String>]: Version of the entity.
      [CreatedDateTime <DateTime?>]: Date and time of creation
      [DeviceName <String>]: Host device name
      [DeviceTag <String>]: App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.
      [DeviceType <String>]: Host device type
      [FlaggedReasons <ManagedAppFlaggedReason[]>]: Zero or more reasons an app registration is flagged. E.g. app running on rooted device
      [IntendedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policies admin intended for the app as of now.
      [LastSyncDateTime <DateTime?>]: Date and time of last the app synced with management service.
      [ManagementSdkVersion <String>]: App management SDK version
      [Operations <IMicrosoftGraphManagedAppOperation[]>]: Zero or more long running operations triggered on the app registration.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DisplayName <String>]: The operation name.
        [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
        [State <String>]: The current state of the operation
        [Version <String>]: Version of the entity.
      [PlatformVersion <String>]: Operating System version
      [UserId <String>]: The user Id to who this app registration belongs.
      [Version <String>]: Version of the entity.
    [ManagedDevices <IMicrosoftGraphManagedDevice[]>]: The managed devices associated with the user.
    [Manager <IMicrosoftGraphDirectoryObject>]: directoryObject
    [MemberOf <IMicrosoftGraphDirectoryObject[]>]: The groups and directory roles that the user is a member of. Read-only. Nullable. Supports $expand.
    [Messages <IMicrosoftGraphMessage[]>]: The messages in a mailbox or folder. Read-only. Nullable.
    [MobilePhone <String>]: The primary cellular telephone number for the user. Read-only for users synced from on-premises directory. Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values) and $search.
    [MySite <String>]: The URL for the user's personal site. Returned only on $select.
    [Oauth2PermissionGrants <IMicrosoftGraphOAuth2PermissionGrant[]>]: 
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ClientId <String>]: The object id (not appId) of the client service principal for the application which is authorized to act on behalf of a signed-in user when accessing an API. Required. Supports $filter (eq only).
      [ConsentType <String>]: Indicates if authorization is granted for the client application to impersonate all users or only a specific user. AllPrincipals indicates authorization to impersonate all users. Principal indicates authorization to impersonate a specific user. Consent on behalf of all users can be granted by an administrator. Non-admin users may be authorized to consent on behalf of themselves in some cases, for some delegated permissions. Required. Supports $filter (eq only).
      [PrincipalId <String>]: The id of the user on behalf of whom the client is authorized to access the resource, when consentType is Principal. If consentType is AllPrincipals this value is null. Required when consentType is Principal. Supports $filter (eq only).
      [ResourceId <String>]: The id of the resource service principal to which access is authorized. This identifies the API which the client is authorized to attempt to call on behalf of a signed-in user. Supports $filter (eq only).
      [Scope <String>]: A space-separated list of the claim values for delegated permissions which should be included in access tokens for the resource application (the API). For example, openid User.Read GroupMember.Read.All. Each claim value should match the value field of one of the delegated permissions defined by the API, listed in the oauth2PermissionScopes property of the resource service principal. Must not exceed 3850 characters in length.
    [OfficeLocation <String>]: The office location in the user's place of business. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [OnPremisesDistinguishedName <String>]: Contains the on-premises Active Directory distinguished name or DN. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select.
    [OnPremisesDomainName <String>]: Contains the on-premises domainFQDN, also called dnsDomainName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select.
    [OnPremisesExtensionAttributes <IMicrosoftGraphOnPremisesExtensionAttributes>]: onPremisesExtensionAttributes
      [(Any) <Object>]: This indicates any property can be added to this object.
      [ExtensionAttribute1 <String>]: First customizable extension attribute.
      [ExtensionAttribute10 <String>]: Tenth customizable extension attribute.
      [ExtensionAttribute11 <String>]: Eleventh customizable extension attribute.
      [ExtensionAttribute12 <String>]: Twelfth customizable extension attribute.
      [ExtensionAttribute13 <String>]: Thirteenth customizable extension attribute.
      [ExtensionAttribute14 <String>]: Fourteenth customizable extension attribute.
      [ExtensionAttribute15 <String>]: Fifteenth customizable extension attribute.
      [ExtensionAttribute2 <String>]: Second customizable extension attribute.
      [ExtensionAttribute3 <String>]: Third customizable extension attribute.
      [ExtensionAttribute4 <String>]: Fourth customizable extension attribute.
      [ExtensionAttribute5 <String>]: Fifth customizable extension attribute.
      [ExtensionAttribute6 <String>]: Sixth customizable extension attribute.
      [ExtensionAttribute7 <String>]: Seventh customizable extension attribute.
      [ExtensionAttribute8 <String>]: Eighth customizable extension attribute.
      [ExtensionAttribute9 <String>]: Ninth customizable extension attribute.
    [OnPremisesImmutableId <String>]: This property is used to associate an on-premises Active Directory user account to their Azure AD user object. This property must be specified when creating a new user account in the Graph if you are using a federated domain for the user's userPrincipalName (UPN) property. NOTE: The $ and _ characters cannot be used when specifying this property. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in)..
    [OnPremisesLastSyncDateTime <DateTime?>]: Indicates the last time at which the object was synced with the on-premises directory; for example: 2013-02-16T03:04:54Z. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in).
    [OnPremisesProvisioningErrors <IMicrosoftGraphOnPremisesProvisioningError[]>]: Errors when using Microsoft synchronization product during provisioning. Returned only on $select. Supports $filter (eq, not, ge, le).
    [OnPremisesSamAccountName <String>]: Contains the on-premises samAccountName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith).
    [OnPremisesSecurityIdentifier <String>]: Contains the on-premises security identifier (SID) for the user that was synchronized from on-premises to the cloud. Read-only. Returned only on $select.  Supports $filter (eq including on null values).
    [OnPremisesSyncEnabled <Boolean?>]: true if this user object is currently being synced from an on-premises Active Directory (AD); otherwise the user isn't being synced and can be managed in Azure Active Directory (Azure AD). Read-only. Returned only on $select. Supports $filter (eq, ne, not, in, and eq on null values).
    [OnPremisesUserPrincipalName <String>]: Contains the on-premises userPrincipalName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith).
    [Onenote <IMicrosoftGraphOnenote>]: onenote
    [OnlineMeetings <IMicrosoftGraphOnlineMeeting[]>]: Information about a meeting, including the URL used to join a meeting, the attendees' list, and the description.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AllowAttendeeToEnableCamera <Boolean?>]: Indicates whether attendees can turn on their camera.
      [AllowAttendeeToEnableMic <Boolean?>]: Indicates whether attendees can turn on their microphone.
      [AllowMeetingChat <String>]: meetingChatMode
      [AllowParticipantsToChangeName <Boolean?>]: 
      [AllowTeamworkReactions <Boolean?>]: Indicates whether Teams reactions are enabled for the meeting.
      [AllowedPresenters <String>]: onlineMeetingPresenters
      [AttendanceReports <IMicrosoftGraphMeetingAttendanceReport[]>]: The attendance reports of an online meeting. Read-only.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AttendanceRecords <IMicrosoftGraphAttendanceRecord[]>]: List of attendance records of an attendance report. Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AttendanceIntervals <IMicrosoftGraphAttendanceInterval[]>]: List of time periods between joining and leaving a meeting.
            [DurationInSeconds <Int32?>]: Duration of the meeting interval in seconds; that is, the difference between joinDateTime and leaveDateTime.
            [JoinDateTime <DateTime?>]: The time the attendee joined in UTC.
            [LeaveDateTime <DateTime?>]: The time the attendee left in UTC.
          [EmailAddress <String>]: Email address of the user associated with this attendance record.
          [Identity <IMicrosoftGraphIdentity>]: identity
          [Role <String>]: Role of the attendee. Possible values are: None, Attendee, Presenter, and Organizer.
          [TotalAttendanceInSeconds <Int32?>]: Total duration of the attendances in seconds.
        [MeetingEndDateTime <DateTime?>]: UTC time when the meeting ended. Read-only.
        [MeetingStartDateTime <DateTime?>]: UTC time when the meeting started. Read-only.
        [TotalParticipantCount <Int32?>]: Total number of participants. Read-only.
      [AttendeeReport <Byte[]>]: The content stream of the attendee report of a Microsoft Teams live event. Read-only.
      [AudioConferencing <IMicrosoftGraphAudioConferencing>]: audioConferencing
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ConferenceId <String>]: The conference id of the online meeting.
        [DialinUrl <String>]: A URL to the externally-accessible web page that contains dial-in information.
        [TollFreeNumber <String>]: 
        [TollFreeNumbers <String[]>]: List of toll-free numbers that are displayed in the meeting invite.
        [TollNumber <String>]: 
        [TollNumbers <String[]>]: List of toll numbers that are displayed in the meeting invite.
      [BroadcastSettings <IMicrosoftGraphBroadcastMeetingSettings>]: broadcastMeetingSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AllowedAudience <String>]: broadcastMeetingAudience
        [Captions <IMicrosoftGraphBroadcastMeetingCaptionSettings>]: broadcastMeetingCaptionSettings
          [(Any) <Object>]: This indicates any property can be added to this object.
          [IsCaptionEnabled <Boolean?>]: Indicates whether captions are enabled for this Teams live event.
          [SpokenLanguage <String>]: The spoken language.
          [TranslationLanguages <String[]>]: The translation languages (choose up to 6).
        [IsAttendeeReportEnabled <Boolean?>]: Indicates whether attendee report is enabled for this Teams live event. Default value is false.
        [IsQuestionAndAnswerEnabled <Boolean?>]: Indicates whether Q&A is enabled for this Teams live event. Default value is false.
        [IsRecordingEnabled <Boolean?>]: Indicates whether recording is enabled for this Teams live event. Default value is false.
        [IsVideoOnDemandEnabled <Boolean?>]: Indicates whether video on demand is enabled for this Teams live event. Default value is false.
      [ChatInfo <IMicrosoftGraphChatInfo>]: chatInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [MessageId <String>]: The unique identifier of a message in a Microsoft Teams channel.
        [ReplyChainMessageId <String>]: The ID of the reply message.
        [ThreadId <String>]: The unique identifier for a thread in Microsoft Teams.
      [CreationDateTime <DateTime?>]: The meeting creation time in UTC. Read-only.
      [EndDateTime <DateTime?>]: The meeting end time in UTC.
      [ExternalId <String>]: 
      [IsBroadcast <Boolean?>]: Indicates if this is a Teams live event.
      [IsEntryExitAnnounced <Boolean?>]: Indicates whether to announce when callers join or leave.
      [JoinInformation <IMicrosoftGraphItemBody>]: itemBody
      [JoinMeetingIdSettings <IMicrosoftGraphJoinMeetingIdSettings>]: joinMeetingIdSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [IsPasscodeRequired <Boolean?>]: Indicates whether a passcode is required to join a meeting when using joinMeetingId. Optional.
        [JoinMeetingId <String>]: The meeting ID to be used to join a meeting. Optional. Read-only.
        [Passcode <String>]: The passcode to join a meeting.  Optional. Read-only.
      [JoinWebUrl <String>]: The join URL of the online meeting. Read-only.
      [LobbyBypassSettings <IMicrosoftGraphLobbyBypassSettings>]: lobbyBypassSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [IsDialInBypassEnabled <Boolean?>]: Specifies whether or not to always let dial-in callers bypass the lobby. Optional.
        [Scope <String>]: lobbyBypassScope
      [Participants <IMicrosoftGraphMeetingParticipants>]: meetingParticipants
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Attendees <IMicrosoftGraphMeetingParticipantInfo[]>]: 
          [Identity <IMicrosoftGraphIdentitySet>]: identitySet
          [Role <String>]: onlineMeetingRole
          [Upn <String>]: User principal name of the participant.
        [Organizer <IMicrosoftGraphMeetingParticipantInfo>]: meetingParticipantInfo
      [RecordAutomatically <Boolean?>]: Indicates whether to record the meeting automatically.
      [StartDateTime <DateTime?>]: The meeting start time in UTC.
      [Subject <String>]: The subject of the online meeting.
      [VideoTeleconferenceId <String>]: The video teleconferencing ID. Read-only.
      [WatermarkProtection <IMicrosoftGraphWatermarkProtectionValues>]: watermarkProtectionValues
        [(Any) <Object>]: This indicates any property can be added to this object.
        [IsEnabledForContentSharing <Boolean?>]: Indicates whether to apply a watermark to any shared content.
        [IsEnabledForVideo <Boolean?>]: Indicates whether to apply a watermark to everyone's video feed.
    [OtherMails <String[]>]: A list of additional email addresses for the user; for example: ['bob@contoso.com', 'Robert@fabrikam.com']. NOTE: This property cannot contain accent characters. Returned only on $select. Supports $filter (eq, not, ge, le, in, startsWith, endsWith, /$count eq 0, /$count ne 0).
    [Outlook <IMicrosoftGraphOutlookUser>]: outlookUser
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [MasterCategories <IMicrosoftGraphOutlookCategory[]>]: A list of categories defined for the user.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Color <String>]: categoryColor
        [DisplayName <String>]: A unique name that identifies a category in the user's mailbox. After a category is created, the name cannot be changed. Read-only.
    [OwnedDevices <IMicrosoftGraphDirectoryObject[]>]: Devices that are owned by the user. Read-only. Nullable. Supports $expand and $filter (/$count eq 0, /$count ne 0, /$count eq 1, /$count ne 1).
    [OwnedObjects <IMicrosoftGraphDirectoryObject[]>]: Directory objects that are owned by the user. Read-only. Nullable. Supports $expand.
    [PasswordPolicies <String>]: Specifies password policies for the user. This value is an enumeration with one possible value being DisableStrongPassword, which allows weaker passwords than the default policy to be specified. DisablePasswordExpiration can also be specified. The two may be specified together; for example: DisablePasswordExpiration, DisableStrongPassword. Returned only on $select. For more information on the default password policies, see Azure AD pasword policies. Supports $filter (ne, not, and eq on null values).
    [PasswordProfile <IMicrosoftGraphPasswordProfile>]: passwordProfile
      [(Any) <Object>]: This indicates any property can be added to this object.
      [ForceChangePasswordNextSignIn <Boolean?>]: true if the user must change her password on the next login; otherwise false.
      [ForceChangePasswordNextSignInWithMfa <Boolean?>]: If true, at next sign-in, the user must perform a multi-factor authentication (MFA) before being forced to change their password. The behavior is identical to forceChangePasswordNextSignIn except that the user is required to first perform a multi-factor authentication before password change. After a password change, this property will be automatically reset to false. If not set, default is false.
      [Password <String>]: The password for the user. This property is required when a user is created. It can be updated, but the user will be required to change the password on the next login. The password must satisfy minimum requirements as specified by the user’s passwordPolicies property. By default, a strong password is required.
    [PastProjects <String[]>]: A list for the user to enumerate their past projects. Returned only on $select.
    [People <IMicrosoftGraphPerson[]>]: People that are relevant to the user. Read-only. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Birthday <String>]: The person's birthday.
      [CompanyName <String>]: The name of the person's company.
      [Department <String>]: The person's department.
      [DisplayName <String>]: The person's display name.
      [GivenName <String>]: The person's given name.
      [ImAddress <String>]: The instant message voice over IP (VOIP) session initiation protocol (SIP) address for the user. Read-only.
      [IsFavorite <Boolean?>]: True if the user has flagged this person as a favorite.
      [JobTitle <String>]: The person's job title.
      [OfficeLocation <String>]: The location of the person's office.
      [PersonNotes <String>]: Free-form notes that the user has taken about this person.
      [PersonType <IMicrosoftGraphPersonType>]: personType
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Class <String>]: The type of data source, such as Person.
        [Subclass <String>]: The secondary type of data source, such as OrganizationUser.
      [Phones <IMicrosoftGraphPhone[]>]: The person's phone numbers.
      [PostalAddresses <IMicrosoftGraphLocation[]>]: The person's addresses.
      [Profession <String>]: The person's profession.
      [ScoredEmailAddresses <IMicrosoftGraphScoredEmailAddress[]>]: The person's email addresses.
        [Address <String>]: The email address.
        [ItemId <String>]: 
        [RelevanceScore <Double?>]: The relevance score of the email address. A relevance score is used as a sort key, in relation to the other returned results. A higher relevance score value corresponds to a more relevant result. Relevance is determined by the user’s communication and collaboration patterns and business relationships.
        [SelectionLikelihood <String>]: selectionLikelihoodInfo
      [Surname <String>]: The person's surname.
      [UserPrincipalName <String>]: The user principal name (UPN) of the person. The UPN is an Internet-style login name for the person based on the Internet standard RFC 822. By convention, this should map to the person's email name. The general format is alias@domain.
      [Websites <IMicrosoftGraphWebsite[]>]: The person's websites.
        [Address <String>]: The URL of the website.
        [DisplayName <String>]: The display name of the web site.
        [Type <String>]: websiteType
      [YomiCompany <String>]: The phonetic Japanese name of the person's company.
    [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
    [Photos <IMicrosoftGraphProfilePhoto[]>]: 
    [Planner <IMicrosoftGraphPlannerUser>]: plannerUser
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Plans <IMicrosoftGraphPlannerPlan[]>]: Read-only. Nullable. Returns the plannerTasks assigned to the user.
      [Tasks <IMicrosoftGraphPlannerTask[]>]: Read-only. Nullable. Returns the plannerPlans shared with the user.
    [PostalCode <String>]: The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code. Maximum length is 40 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [PreferredDataLocation <String>]: The preferred data location for the user. For more information, see OneDrive Online Multi-Geo.
    [PreferredLanguage <String>]: The preferred language for the user. Should follow ISO 639-1 Code; for example en-US. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values)
    [PreferredName <String>]: The preferred name for the user. Not Supported. This attribute returns an empty string.Returned only on $select.
    [Presence <IMicrosoftGraphPresence>]: presence
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Activity <String>]: The supplemental information to a user's availability. Possible values are Available, Away, BeRightBack, Busy, DoNotDisturb, InACall, InAConferenceCall, Inactive, InAMeeting, Offline, OffWork, OutOfOffice, PresenceUnknown, Presenting, UrgentInterruptionsOnly.
      [Availability <String>]: The base presence information for a user. Possible values are Available, AvailableIdle,  Away, BeRightBack, Busy, BusyIdle, DoNotDisturb, Offline, PresenceUnknown
    [Print <IMicrosoftGraphUserPrint>]: userPrint
      [(Any) <Object>]: This indicates any property can be added to this object.
      [RecentPrinterShares <IMicrosoftGraphPrinterShare[]>]: 
        [Capabilities <IMicrosoftGraphPrinterCapabilities>]: printerCapabilities
          [(Any) <Object>]: This indicates any property can be added to this object.
          [BottomMargins <Int32[]>]: A list of supported bottom margins(in microns) for the printer.
          [Collation <Boolean?>]: True if the printer supports collating when printing muliple copies of a multi-page document; false otherwise.
          [ColorModes <String[]>]: The color modes supported by the printer. Valid values are described in the following table.
          [ContentTypes <String[]>]: A list of supported content (MIME) types that the printer supports. It is not guaranteed that the Universal Print service supports printing all of these MIME types.
          [CopiesPerJob <IMicrosoftGraphIntegerRange>]: integerRange
            [(Any) <Object>]: This indicates any property can be added to this object.
            [End <Int64?>]: The inclusive upper bound of the integer range.
            [Start <Int64?>]: The inclusive lower bound of the integer range.
          [Dpis <Int32[]>]: The list of print resolutions in DPI that are supported by the printer.
          [DuplexModes <String[]>]: The list of duplex modes that are supported by the printer. Valid values are described in the following table.
          [FeedOrientations <String[]>]: The list of feed orientations that are supported by the printer.
          [Finishings <String[]>]: Finishing processes the printer supports for a printed document.
          [InputBins <String[]>]: Supported input bins for the printer.
          [IsColorPrintingSupported <Boolean?>]: True if color printing is supported by the printer; false otherwise. Read-only.
          [IsPageRangeSupported <Boolean?>]: True if the printer supports printing by page ranges; false otherwise.
          [LeftMargins <Int32[]>]: A list of supported left margins(in microns) for the printer.
          [MediaColors <String[]>]: The media (i.e., paper) colors supported by the printer.
          [MediaSizes <String[]>]: The media sizes supported by the printer. Supports standard size names for ISO and ANSI media sizes. Valid values are in the following table.
          [MediaTypes <String[]>]: The media types supported by the printer.
          [MultipageLayouts <String[]>]: The presentation directions supported by the printer. Supported values are described in the following table.
          [Orientations <String[]>]: The print orientations supported by the printer. Valid values are described in the following table.
          [OutputBins <String[]>]: The printer's supported output bins (trays).
          [PagesPerSheet <Int32[]>]: Supported number of Input Pages to impose upon a single Impression.
          [Qualities <String[]>]: The print qualities supported by the printer.
          [RightMargins <Int32[]>]: A list of supported right margins(in microns) for the printer.
          [Scalings <String[]>]: Supported print scalings.
          [SupportsFitPdfToPage <Boolean?>]: True if the printer supports scaling PDF pages to match the print media size; false otherwise.
          [TopMargins <Int32[]>]: A list of supported top margins(in microns) for the printer.
        [Defaults <IMicrosoftGraphPrinterDefaults>]: printerDefaults
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ColorMode <String>]: printColorMode
          [ContentType <String>]: The default content (MIME) type to use when processing documents.
          [CopiesPerJob <Int32?>]: The default number of copies printed per job.
          [Dpi <Int32?>]: The default resolution in DPI to use when printing the job.
          [DuplexMode <String>]: printDuplexMode
          [Finishings <String[]>]: The default set of finishings to apply to print jobs. Valid values are described in the following table.
          [FitPdfToPage <Boolean?>]: The default fitPdfToPage setting. True to fit each page of a PDF document to a physical sheet of media; false to let the printer decide how to lay out impressions.
          [InputBin <String>]: 
          [MediaColor <String>]: The default media (such as paper) color to print the document on.
          [MediaSize <String>]: The default media size to use. Supports standard size names for ISO and ANSI media sizes. Valid values are listed in the printerCapabilities topic.
          [MediaType <String>]: The default media (such as paper) type to print the document on.
          [MultipageLayout <String>]: printMultipageLayout
          [Orientation <String>]: printOrientation
          [OutputBin <String>]: The default output bin to place completed prints into. See the printer's capabilities for a list of supported output bins.
          [PagesPerSheet <Int32?>]: The default number of document pages to print on each sheet.
          [Quality <String>]: printQuality
          [Scaling <String>]: printScaling
        [DisplayName <String>]: The name of the printer/printerShare.
        [IsAcceptingJobs <Boolean?>]: Whether the printer/printerShare is currently accepting new print jobs.
        [Jobs <IMicrosoftGraphPrintJob[]>]: The list of jobs that are queued for printing by the printer/printerShare.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Configuration <IMicrosoftGraphPrintJobConfiguration>]: printJobConfiguration
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Collate <Boolean?>]: Whether the printer should collate pages wehen printing multiple copies of a multi-page document.
            [ColorMode <String>]: printColorMode
            [Copies <Int32?>]: The number of copies that should be printed. Read-only.
            [Dpi <Int32?>]: The resolution to use when printing the job, expressed in dots per inch (DPI). Read-only.
            [DuplexMode <String>]: printDuplexMode
            [FeedOrientation <String>]: printerFeedOrientation
            [Finishings <String[]>]: Finishing processes to use when printing.
            [FitPdfToPage <Boolean?>]: 
            [InputBin <String>]: The input bin (tray) to use when printing. See the printer's capabilities for a list of supported input bins.
            [Margin <IMicrosoftGraphPrintMargin>]: printMargin
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Bottom <Int32?>]: The margin in microns from the bottom edge.
              [Left <Int32?>]: The margin in microns from the left edge.
              [Right <Int32?>]: The margin in microns from the right edge.
              [Top <Int32?>]: The margin in microns from the top edge.
            [MediaSize <String>]: The media size to use when printing. Supports standard size names for ISO and ANSI media sizes.
            [MediaType <String>]: 
            [MultipageLayout <String>]: printMultipageLayout
            [Orientation <String>]: printOrientation
            [OutputBin <String>]: 
            [PageRanges <IMicrosoftGraphIntegerRange[]>]: 
            [PagesPerSheet <Int32?>]: 
            [Quality <String>]: printQuality
            [Scaling <String>]: printScaling
          [CreatedBy <IMicrosoftGraphUserIdentity>]: userIdentity
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
            [Id <String>]: Unique identifier for the identity.
            [IPAddress <String>]: Indicates the client IP address used by user performing the activity (audit log only).
            [UserPrincipalName <String>]: The userPrincipalName attribute of the user.
          [CreatedDateTime <DateTime?>]: The DateTimeOffset when the job was created. Read-only.
          [Documents <IMicrosoftGraphPrintDocument[]>]: 
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [ContentType <String>]: The document's content (MIME) type. Read-only.
            [DisplayName <String>]: The document's name. Read-only.
            [Size <Int64?>]: The document's size in bytes. Read-only.
          [IsFetchable <Boolean?>]: If true, document can be fetched by printer.
          [RedirectedFrom <String>]: Contains the source job URL, if the job has been redirected from another printer.
          [RedirectedTo <String>]: Contains the destination job URL, if the job has been redirected to another printer.
          [Status <IMicrosoftGraphPrintJobStatus>]: printJobStatus
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Description <String>]: A human-readable description of the print job's current processing state. Read-only.
            [Details <String[]>]: Additional details for print job state. Valid values are described in the following table. Read-only.
            [IsAcquiredByPrinter <Boolean?>]: True if the job was acknowledged by a printer; false otherwise. Read-only.
            [State <String>]: printJobProcessingState
          [Tasks <IMicrosoftGraphPrintTask[]>]: A list of printTasks that were triggered by this print job.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Definition <IMicrosoftGraphPrintTaskDefinition>]: printTaskDefinition
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [CreatedBy <IMicrosoftGraphAppIdentity>]: appIdentity
                [(Any) <Object>]: This indicates any property can be added to this object.
                [AppId <String>]: Refers to the Unique GUID representing Application Id in the Azure Active Directory.
                [DisplayName <String>]: Refers to the Application Name displayed in the Azure Portal.
                [ServicePrincipalId <String>]: Refers to the Unique GUID indicating Service Principal Id in Azure Active Directory for the corresponding App.
                [ServicePrincipalName <String>]: Refers to the Service Principal Name is the Application name in the tenant.
              [DisplayName <String>]: The name of the printTaskDefinition.
              [Tasks <IMicrosoftGraphPrintTask[]>]: A list of tasks that have been created based on this definition. The list includes currently running tasks and recently completed tasks. Read-only.
            [ParentUrl <String>]: The URL for the print entity that triggered this task. For example, https://graph.microsoft.com/v1.0/print/printers/{printerId}/jobs/{jobId}. Read-only.
            [Status <IMicrosoftGraphPrintTaskStatus>]: printTaskStatus
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Description <String>]: A human-readable description of the current processing state of the printTask.
              [State <String>]: printTaskProcessingState
            [Trigger <IMicrosoftGraphPrintTaskTrigger>]: printTaskTrigger
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Definition <IMicrosoftGraphPrintTaskDefinition>]: printTaskDefinition
              [Event <String>]: printEvent
        [Location <IMicrosoftGraphPrinterLocation>]: printerLocation
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AltitudeInMeters <Int32?>]: The altitude, in meters, that the printer is located at.
          [Building <String>]: The building that the printer is located in.
          [City <String>]: The city that the printer is located in.
          [CountryOrRegion <String>]: The country or region that the printer is located in.
          [Floor <String>]: The floor that the printer is located on. Only numerical values are supported right now.
          [FloorDescription <String>]: The description of the floor that the printer is located on.
          [Latitude <Double?>]: The latitude that the printer is located at.
          [Longitude <Double?>]: The longitude that the printer is located at.
          [Organization <String[]>]: The organizational hierarchy that the printer belongs to. The elements should be in hierarchical order.
          [PostalCode <String>]: The postal code that the printer is located in.
          [RoomDescription <String>]: The description of the room that the printer is located in.
          [RoomName <String>]: The room that the printer is located in. Only numerical values are supported right now.
          [Site <String>]: The site that the printer is located in.
          [StateOrProvince <String>]: The state or province that the printer is located in.
          [StreetAddress <String>]: The street address where the printer is located.
          [Subdivision <String[]>]: The subdivision that the printer is located in. The elements should be in hierarchical order.
          [Subunit <String[]>]: 
        [Manufacturer <String>]: The manufacturer of the printer/printerShare.
        [Model <String>]: The model name of the printer/printerShare.
        [Status <IMicrosoftGraphPrinterStatus>]: printerStatus
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Description <String>]: A human-readable description of the printer's current processing state. Read-only.
          [Details <String[]>]: The list of details describing why the printer is in the current state. Valid values are described in the following table. Read-only.
          [State <String>]: printerProcessingState
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AllowAllUsers <Boolean?>]: If true, all users and groups will be granted access to this printer share. This supersedes the allow lists defined by the allowedUsers and allowedGroups navigation properties.
        [AllowedGroups <IMicrosoftGraphGroup[]>]: The groups whose users have access to print using the printer.
        [AllowedUsers <IMicrosoftGraphUser[]>]: The users who have access to print using the printer.
        [CreatedDateTime <DateTime?>]: The DateTimeOffset when the printer share was created. Read-only.
        [Printer <IMicrosoftGraphPrinter>]: printer
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Capabilities <IMicrosoftGraphPrinterCapabilities>]: printerCapabilities
          [Defaults <IMicrosoftGraphPrinterDefaults>]: printerDefaults
          [DisplayName <String>]: The name of the printer/printerShare.
          [IsAcceptingJobs <Boolean?>]: Whether the printer/printerShare is currently accepting new print jobs.
          [Jobs <IMicrosoftGraphPrintJob[]>]: The list of jobs that are queued for printing by the printer/printerShare.
          [Location <IMicrosoftGraphPrinterLocation>]: printerLocation
          [Manufacturer <String>]: The manufacturer of the printer/printerShare.
          [Model <String>]: The model name of the printer/printerShare.
          [Status <IMicrosoftGraphPrinterStatus>]: printerStatus
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Connectors <IMicrosoftGraphPrintConnector[]>]: The connectors that are associated with the printer.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [AppVersion <String>]: The connector's version.
            [DisplayName <String>]: The name of the connector.
            [FullyQualifiedDomainName <String>]: The connector machine's hostname.
            [Location <IMicrosoftGraphPrinterLocation>]: printerLocation
            [OperatingSystem <String>]: The connector machine's operating system version.
            [RegisteredDateTime <DateTime?>]: The DateTimeOffset when the connector was registered.
          [HasPhysicalDevice <Boolean?>]: True if the printer has a physical device for printing. Read-only.
          [IsShared <Boolean?>]: True if the printer is shared; false otherwise. Read-only.
          [LastSeenDateTime <DateTime?>]: The most recent dateTimeOffset when a printer interacted with Universal Print. Read-only.
          [RegisteredDateTime <DateTime?>]: The DateTimeOffset when the printer was registered. Read-only.
          [Shares <IMicrosoftGraphPrinterShare[]>]: The list of printerShares that are associated with the printer. Currently, only one printerShare can be associated with the printer. Read-only. Nullable.
          [TaskTriggers <IMicrosoftGraphPrintTaskTrigger[]>]: A list of task triggers that are associated with the printer.
        [ViewPoint <IMicrosoftGraphPrinterShareViewpoint>]: printerShareViewpoint
          [(Any) <Object>]: This indicates any property can be added to this object.
          [LastUsedDateTime <DateTime?>]: Date and time when the printer was last used by the signed-in user. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
    [ProvisionedPlans <IMicrosoftGraphProvisionedPlan[]>]: The plans that are provisioned for the user. Read-only. Not nullable. Returned only on $select. Supports $filter (eq, not, ge, le).
      [CapabilityStatus <String>]: For example, 'Enabled'.
      [ProvisioningStatus <String>]: For example, 'Success'.
      [Service <String>]: The name of the service; for example, 'AccessControlS2S'
    [ProxyAddresses <String[]>]: For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. Changes to the mail property will also update this collection to include the value as an SMTP address. For more information, see mail and proxyAddresses properties. The proxy address prefixed with SMTP (capitalized) is the primary proxy address while those prefixed with smtp are the secondary proxy addresses. For Azure AD B2C accounts, this property has a limit of ten unique addresses. Read-only in Microsoft Graph; you can update this property only through the Microsoft 365 admin center. Not nullable. Returned only on $select. Supports $filter (eq, not, ge, le, startsWith, endsWith, /$count eq 0, /$count ne 0).
    [RegisteredDevices <IMicrosoftGraphDirectoryObject[]>]: Devices that are registered for the user. Read-only. Nullable. Supports $expand.
    [Responsibilities <String[]>]: A list for the user to enumerate their responsibilities. Returned only on $select.
    [Schools <String[]>]: A list for the user to enumerate the schools they have attended. Returned only on $select.
    [ScopedRoleMemberOf <IMicrosoftGraphScopedRoleMembership[]>]: 
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AdministrativeUnitId <String>]: Unique identifier for the administrative unit that the directory role is scoped to
      [RoleId <String>]: Unique identifier for the directory role that the member is in.
      [RoleMemberInfo <IMicrosoftGraphIdentity>]: identity
    [SecurityIdentifier <String>]: Security identifier (SID) of the user, used in Windows scenarios. Read-only. Returned by default. Supports $select and $filter (eq, not, ge, le, startsWith).
    [Settings <IMicrosoftGraphUserSettings>]: userSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ContributionToContentDiscoveryAsOrganizationDisabled <Boolean?>]: Reflects the organization level setting controlling delegate access to the trending API. When set to true, the organization doesn't have access to Office Delve. The relevancy of the content displayed in Microsoft 365, for example in Suggested sites in SharePoint Home and the Discover view in OneDrive for Business is affected for the whole organization. This setting is read-only and can only be changed by administrators in the SharePoint admin center.
      [ContributionToContentDiscoveryDisabled <Boolean?>]: When set to true, the delegate access to the user's trending API is disabled. When set to true, documents in the user's Office Delve are disabled. When set to true, the relevancy of the content displayed in Microsoft 365, for example in Suggested sites in SharePoint Home and the Discover view in OneDrive for Business is affected. Users can control this setting in Office Delve.
      [ShiftPreferences <IMicrosoftGraphShiftPreferences>]: shiftPreferences
        [(Any) <Object>]: This indicates any property can be added to this object.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Availability <IMicrosoftGraphShiftAvailability[]>]: Availability of the user to be scheduled for work and its recurrence pattern.
          [Recurrence <IMicrosoftGraphPatternedRecurrence>]: patternedRecurrence
          [TimeSlots <IMicrosoftGraphTimeRange[]>]: The time slot(s) preferred by the user.
            [EndTime <String>]: End time for the time range.
            [StartTime <String>]: Start time for the time range.
          [TimeZone <String>]: Specifies the time zone for the indicated time.
    [ShowInAddressList <Boolean?>]: Do not use in Microsoft Graph. Manage this property through the Microsoft 365 admin center instead. Represents whether the user should be included in the Outlook global address list. See Known issue.
    [SignInActivity <IMicrosoftGraphSignInActivity>]: signInActivity
      [(Any) <Object>]: This indicates any property can be added to this object.
      [LastNonInteractiveSignInDateTime <DateTime?>]: The last non-interactive sign-in date for a specific user. You can use this field to calculate the last time a client attempted to sign into the directory on behalf of a user. Because some users may use clients to access tenant resources rather than signing into your tenant directly, you can use the non-interactive sign-in date to along with lastSignInDateTime to identify inactive users. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is: '2014-01-01T00:00:00Z'. Azure AD maintains non-interactive sign-ins going back to May 2020. For more information about using the value of this property, see Manage inactive user accounts in Azure AD.
      [LastNonInteractiveSignInRequestId <String>]: Request identifier of the last non-interactive sign-in performed by this user.
      [LastSignInDateTime <DateTime?>]: The last interactive sign-in date and time for a specific user. You can use this field to calculate the last time a user attempted to sign into the directory with an interactive authentication method. This field can be used to build reports, such as inactive users. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is: '2014-01-01T00:00:00Z'. Azure AD maintains interactive sign-ins going back to April 2020. For more information about using the value of this property, see Manage inactive user accounts in Azure AD.
      [LastSignInRequestId <String>]: Request identifier of the last interactive sign-in performed by this user.
    [SignInSessionsValidFromDateTime <DateTime?>]: Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications will get an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft Graph).  If this happens, the application will need to acquire a new refresh token by making a request to the authorize endpoint. Read-only. Use revokeSignInSessions to reset. Returned only on $select.
    [Skills <String[]>]: A list for the user to enumerate their skills. Returned only on $select.
    [State <String>]: The state or province in the user's address. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [StreetAddress <String>]: The street address of the user's place of business. Maximum length is 1024 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [Surname <String>]: The user's surname (family name or last name). Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [Teamwork <IMicrosoftGraphUserTeamwork>]: userTeamwork
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AssociatedTeams <IMicrosoftGraphAssociatedTeamInfo[]>]: The list of associatedTeamInfo objects that a user is associated with.
        [DisplayName <String>]: The name of the team.
        [Team <IMicrosoftGraphTeam>]: team
        [TenantId <String>]: The ID of the Azure Active Directory tenant.
        [Id <String>]: The unique idenfier for an entity. Read-only.
      [InstalledApps <IMicrosoftGraphUserScopeTeamsAppInstallation[]>]: The apps installed in the personal scope of this user.
        [ConsentedPermissionSet <IMicrosoftGraphTeamsAppPermissionSet>]: teamsAppPermissionSet
        [TeamsApp <IMicrosoftGraphTeamsApp>]: teamsApp
        [TeamsAppDefinition <IMicrosoftGraphTeamsAppDefinition>]: teamsAppDefinition
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Chat <IMicrosoftGraphChat>]: chat
    [Todo <IMicrosoftGraphTodo>]: todo
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Lists <IMicrosoftGraphTodoTaskList[]>]: The task lists in the users mailbox.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DisplayName <String>]: The name of the task list.
        [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the task list. Nullable.
        [IsOwner <Boolean?>]: True if the user is owner of the given task list.
        [IsShared <Boolean?>]: True if the task list is shared with other users
        [Tasks <IMicrosoftGraphTodoTask[]>]: The tasks in this task list. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AttachmentSessions <IMicrosoftGraphAttachmentSession[]>]: 
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Content <Byte[]>]: The content streams that are uploaded.
            [ExpirationDateTime <DateTime?>]: The date and time in UTC when the upload session will expire. The complete file must be uploaded before this expiration time is reached.
            [NextExpectedRanges <String[]>]: Indicates a single value {start} that represents the location in the file where the next upload should begin.
          [Attachments <IMicrosoftGraphAttachmentBase[]>]: A collection of file attachments for the task.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [ContentType <String>]: The MIME type.
            [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
            [Name <String>]: The display name of the attachment. This does not need to be the actual file name.
            [Size <Int32?>]: The length of the attachment in bytes.
          [Body <IMicrosoftGraphItemBody>]: itemBody
          [BodyLastModifiedDateTime <DateTime?>]: The date and time when the task body was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
          [Categories <String[]>]: The categories associated with the task. Each category corresponds to the displayName property of an outlookCategory that the user has defined.
          [ChecklistItems <IMicrosoftGraphChecklistItem[]>]: A collection of checklistItems linked to a task.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [CheckedDateTime <DateTime?>]: The date and time when the checklistItem was finished.
            [CreatedDateTime <DateTime?>]: The date and time when the checklistItem was created.
            [DisplayName <String>]: Field indicating the title of checklistItem.
            [IsChecked <Boolean?>]: State indicating whether the item is checked off or not.
          [CompletedDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
          [CreatedDateTime <DateTime?>]: The date and time when the task was created. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
          [DueDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
          [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the task. Nullable.
          [HasAttachments <Boolean?>]: Indicates whether the task has attachments.
          [Importance <String>]: importance
          [IsReminderOn <Boolean?>]: Set to true if an alert is set to remind the user of the task.
          [LastModifiedDateTime <DateTime?>]: The date and time when the task was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
          [LinkedResources <IMicrosoftGraphLinkedResource[]>]: A collection of resources linked to the task.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [ApplicationName <String>]: The app name of the source that sends the linkedResource.
            [DisplayName <String>]: The title of the linkedResource.
            [ExternalId <String>]: ID of the object that is associated with this task on the third-party/partner system.
            [WebUrl <String>]: Deep link to the linkedResource.
          [Recurrence <IMicrosoftGraphPatternedRecurrence>]: patternedRecurrence
          [ReminderDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
          [StartDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
          [Status <String>]: taskStatus
          [Title <String>]: A brief description of the task.
        [WellknownListName <String>]: wellknownListName
    [TransitiveMemberOf <IMicrosoftGraphDirectoryObject[]>]: The groups, including nested groups, and directory roles that a user is a member of. Nullable.
    [UsageLocation <String>]: A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries.  Examples include: US, JP, and GB. Not nullable. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
    [UserPrincipalName <String>]: The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain must be present in the tenant's collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization.NOTE: This property cannot contain accent characters. Only the following characters are allowed A - Z, a - z, 0 - 9, ' . - _ ! # ^ ~. For the complete list of allowed characters, see username policies. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, endsWith) and $orderBy.
    [UserType <String>]: A string value that can be used to classify user types in your directory, such as Member and Guest. Returned only on $select. Supports $filter (eq, ne, not, in, and eq on null values). NOTE: For more information about the permissions for member and guest users, see What are the default user permissions in Azure Active Directory?
  [WindowsProtectionState <IMicrosoftGraphWindowsProtectionState>]: Device protection status entity.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AntiMalwareVersion <String>]: Current anti malware version
    [DetectedMalwareState <IMicrosoftGraphWindowsDeviceMalwareState[]>]: Device malware list
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AdditionalInformationUrl <String>]: Information URL to learn more about the malware
      [Category <WindowsMalwareCategory?>]: Malware category id
      [DetectionCount <Int32?>]: Number of times the malware is detected
      [DisplayName <String>]: Malware name
      [ExecutionState <WindowsMalwareExecutionState?>]: Malware execution status
      [InitialDetectionDateTime <DateTime?>]: Initial detection datetime of the malware
      [LastStateChangeDateTime <DateTime?>]: The last time this particular threat was changed
      [Severity <WindowsMalwareSeverity?>]: Malware severity
      [State <WindowsMalwareState?>]: Malware current status
      [ThreatState <WindowsMalwareThreatState?>]: Malware threat status
    [DeviceState <WindowsDeviceHealthState?>]: Computer endpoint protection state
    [EngineVersion <String>]: Current endpoint protection engine's version
    [FullScanOverdue <Boolean?>]: When TRUE indicates full scan is overdue, when FALSE indicates full scan is not overdue. Defaults to setting on client device.
    [FullScanRequired <Boolean?>]: When TRUE indicates full scan is required, when FALSE indicates full scan is not required. Defaults to setting on client device.
    [IsVirtualMachine <Boolean?>]: When TRUE indicates the device is a virtual machine, when FALSE indicates the device is not a virtual machine. Defaults to setting on client device.
    [LastFullScanDateTime <DateTime?>]: Last quick scan datetime
    [LastFullScanSignatureVersion <String>]: Last full scan signature version
    [LastQuickScanDateTime <DateTime?>]: Last quick scan datetime
    [LastQuickScanSignatureVersion <String>]: Last quick scan signature version
    [LastReportedDateTime <DateTime?>]: Last device health status reported time
    [MalwareProtectionEnabled <Boolean?>]: When TRUE indicates anti malware is enabled when FALSE indicates anti malware is not enabled.
    [NetworkInspectionSystemEnabled <Boolean?>]: When TRUE indicates network inspection system enabled, when FALSE indicates network inspection system is not enabled. Defaults to setting on client device.
    [ProductStatus <WindowsDefenderProductStatus?>]: Product Status of Windows Defender
    [QuickScanOverdue <Boolean?>]: When TRUE indicates quick scan is overdue, when FALSE indicates quick scan is not overdue. Defaults to setting on client device.
    [RealTimeProtectionEnabled <Boolean?>]: When TRUE indicates real time protection is enabled, when FALSE indicates real time protection is not enabled. Defaults to setting on client device.
    [RebootRequired <Boolean?>]: When TRUE indicates reboot is required, when FALSE indicates when TRUE indicates reboot is not required. Defaults to setting on client device.
    [SignatureUpdateOverdue <Boolean?>]: When TRUE indicates signature is out of date, when FALSE indicates signature is not out of date. Defaults to setting on client device.
    [SignatureVersion <String>]: Current malware definitions version
    [TamperProtectionEnabled <Boolean?>]: When TRUE indicates the Windows Defender tamper protection feature is enabled, when FALSE indicates the Windows Defender tamper protection feature is not enabled. Defaults to setting on client device.

CONFIGURATIONMANAGERCLIENTENABLEDFEATURES <IMicrosoftGraphConfigurationManagerClientEnabledFeatures>: configuration Manager client enabled features
  [(Any) <Object>]: This indicates any property can be added to this object.
  [CompliancePolicy <Boolean?>]: Whether compliance policy is managed by Intune
  [DeviceConfiguration <Boolean?>]: Whether device configuration is managed by Intune
  [Inventory <Boolean?>]: Whether inventory is managed by Intune
  [ModernApps <Boolean?>]: Whether modern application is managed by Intune
  [ResourceAccess <Boolean?>]: Whether resource access is managed by Intune
  [WindowsUpdateForBusiness <Boolean?>]: Whether Windows Update for Business is managed by Intune

DEVICECATEGORY <IMicrosoftGraphDeviceCategory>: Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [Description <String>]: Optional description for the device category.
  [DisplayName <String>]: Display name for the device category.

DEVICECOMPLIANCEPOLICYSTATES <IMicrosoftGraphDeviceCompliancePolicyState[]>: Device compliance policy states for this device.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceCompliancePolicySettingState[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

DEVICECONFIGURATIONSTATES <IMicrosoftGraphDeviceConfigurationState[]>: Device configuration states for this device.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceConfigurationSettingState[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

DEVICEHEALTHATTESTATIONSTATE <IMicrosoftGraphDeviceHealthAttestationState>: deviceHealthAttestationState
  [(Any) <Object>]: This indicates any property can be added to this object.
  [AttestationIdentityKey <String>]: TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.
  [BitLockerStatus <String>]: On or Off of BitLocker Drive Encryption
  [BootAppSecurityVersion <String>]: The security version number of the Boot Application
  [BootDebugging <String>]: When bootDebugging is enabled, the device is used in development and testing
  [BootManagerSecurityVersion <String>]: The security version number of the Boot Application
  [BootManagerVersion <String>]: The version of the Boot Manager
  [BootRevisionListInfo <String>]: The Boot Revision List that was loaded during initial boot on the attested device
  [CodeIntegrity <String>]: When code integrity is enabled, code execution is restricted to integrity verified code
  [CodeIntegrityCheckVersion <String>]: The version of the Boot Manager
  [CodeIntegrityPolicy <String>]: The Code Integrity policy that is controlling the security of the boot environment
  [ContentNamespaceUrl <String>]: The DHA report version. (Namespace version)
  [ContentVersion <String>]: The HealthAttestation state schema version
  [DataExcutionPolicy <String>]: DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
  [DeviceHealthAttestationStatus <String>]: The DHA report version. (Namespace version)
  [EarlyLaunchAntiMalwareDriverProtection <String>]: ELAM provides protection for the computers in your network when they start up
  [HealthAttestationSupportedStatus <String>]: This attribute indicates if DHA is supported for the device
  [HealthStatusMismatchInfo <String>]: This attribute appears if DHA-Service detects an integrity issue
  [IssuedDateTime <DateTime?>]: The DateTime when device was evaluated or issued to MDM
  [LastUpdateDateTime <String>]: The Timestamp of the last update.
  [OperatingSystemKernelDebugging <String>]: When operatingSystemKernelDebugging is enabled, the device is used in development and testing
  [OperatingSystemRevListInfo <String>]: The Operating System Revision List that was loaded during initial boot on the attested device
  [Pcr0 <String>]: The measurement that is captured in PCR[0]
  [PcrHashAlgorithm <String>]: Informational attribute that identifies the HASH algorithm that was used by TPM
  [ResetCount <Int64?>]: The number of times a PC device has hibernated or resumed
  [RestartCount <Int64?>]: The number of times a PC device has rebooted
  [SafeMode <String>]: Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
  [SecureBoot <String>]: When Secure Boot is enabled, the core components must have the correct cryptographic signatures
  [SecureBootConfigurationPolicyFingerPrint <String>]: Fingerprint of the Custom Secure Boot Configuration Policy
  [TestSigning <String>]: When test signing is allowed, the device does not enforce signature validation during boot
  [TpmVersion <String>]: The security version number of the Boot Application
  [VirtualSecureMode <String>]: VSM is a container that protects high value assets from a compromised kernel
  [WindowsPe <String>]: Operating system running with limited services that is used to prepare a computer for Windows

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: The unique identifier of androidManagedAppProtection
  [DefaultManagedAppProtectionId <String>]: The unique identifier of defaultManagedAppProtection
  [DeviceCompliancePolicyStateId <String>]: The unique identifier of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: The unique identifier of deviceConfigurationState
  [DeviceInstallStateId <String>]: The unique identifier of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: The unique identifier of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: The unique identifier of deviceManagementTroubleshootingEvent
  [IosManagedAppProtectionId <String>]: The unique identifier of iosManagedAppProtection
  [ManagedAppOperationId <String>]: The unique identifier of managedAppOperation
  [ManagedAppPolicyId <String>]: The unique identifier of managedAppPolicy
  [ManagedAppRegistrationId <String>]: The unique identifier of managedAppRegistration
  [ManagedAppStatusId <String>]: The unique identifier of managedAppStatus
  [ManagedDeviceId <String>]: The unique identifier of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: The unique identifier of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: The unique identifier of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: The unique identifier of managedEBookAssignment
  [ManagedEBookId <String>]: The unique identifier of managedEBook
  [ManagedMobileAppId <String>]: The unique identifier of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: The unique identifier of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: The unique identifier of mobileAppAssignment
  [MobileAppCategoryId <String>]: The unique identifier of mobileAppCategory
  [MobileAppId <String>]: The unique identifier of mobileApp
  [TargetedManagedAppConfigurationId <String>]: The unique identifier of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: The unique identifier of targetedManagedAppPolicyAssignment
  [UserId <String>]: The unique identifier of user
  [UserInstallStateSummaryId <String>]: The unique identifier of userInstallStateSummary
  [VppTokenId <String>]: The unique identifier of vppToken
  [WindowsDeviceMalwareStateId <String>]: The unique identifier of windowsDeviceMalwareState
  [WindowsInformationProtectionAppLockerFileId <String>]: The unique identifier of windowsInformationProtectionAppLockerFile
  [WindowsInformationProtectionPolicyId <String>]: The unique identifier of windowsInformationProtectionPolicy

LOGCOLLECTIONREQUESTS <IMicrosoftGraphDeviceLogCollectionResponse[]>: List of log collection requests
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [EnrolledByUser <String>]: The User Principal Name (UPN) of the user that enrolled the device.
  [ExpirationDateTimeUtc <DateTime?>]: The DateTime of the expiration of the logs.
  [InitiatedByUserPrincipalName <String>]: The UPN for who initiated the request.
  [ManagedDeviceId <String>]: Indicates Intune device unique identifier.
  [ReceivedDateTimeUtc <DateTime?>]: The DateTime the request was received.
  [RequestedDateTimeUtc <DateTime?>]: The DateTime of the request.
  [SizeInKb <Double?>]: The size of the logs in KB. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
  [Status <AppLogUploadState?>]: AppLogUploadStatus

USERS <IMicrosoftGraphUser[]>: The primary users associated with the managed device.
  [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AboutMe <String>]: A freeform text entry field for the user to describe themselves. Returned only on $select.
  [AccountEnabled <Boolean?>]: true if the account is enabled; otherwise, false. This property is required when a user is created. Returned only on $select. Supports $filter (eq, ne, not, and in).
  [Activities <IMicrosoftGraphUserActivity[]>]: The user's activities across devices. Read-only. Nullable.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ActivationUrl <String>]: Required. URL used to launch the activity in the best native experience represented by the appId. Might launch a web-based app if no native app exists.
    [ActivitySourceHost <String>]: Required. URL for the domain representing the cross-platform identity mapping for the app. Mapping is stored either as a JSON file hosted on the domain or configurable via Windows Dev Center. The JSON file is named cross-platform-app-identifiers and is hosted at root of your HTTPS domain, either at the top level domain or include a sub domain. For example: https://contoso.com or https://myapp.contoso.com but NOT https://myapp.contoso.com/somepath. You must have a unique file and domain (or sub domain) per cross-platform app identity. For example, a separate file and domain is needed for Word vs. PowerPoint.
    [AppActivityId <String>]: Required. The unique activity ID in the context of the app - supplied by caller and immutable thereafter.
    [AppDisplayName <String>]: Optional. Short text description of the app used to generate the activity for use in cases when the app is not installed on the user’s local device.
    [ContentInfo <IMicrosoftGraphJson>]: Json
      [(Any) <Object>]: This indicates any property can be added to this object.
    [ContentUrl <String>]: Optional. Used in the event the content can be rendered outside of a native or web-based app experience (for example, a pointer to an item in an RSS feed).
    [CreatedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was created on the server.
    [ExpirationDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object expired on the server.
    [FallbackUrl <String>]: Optional. URL used to launch the activity in a web-based app, if available.
    [HistoryItems <IMicrosoftGraphActivityHistoryItem[]>]: Optional. NavigationProperty/Containment; navigation property to the activity's historyItems.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ActiveDurationSeconds <Int32?>]: Optional. The duration of active user engagement. if not supplied, this is calculated from the startedDateTime and lastActiveDateTime.
      [Activity <IMicrosoftGraphUserActivity>]: userActivity
      [CreatedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was created on the server.
      [ExpirationDateTime <DateTime?>]: Optional. UTC DateTime when the historyItem will undergo hard-delete. Can be set by the client.
      [LastActiveDateTime <DateTime?>]: Optional. UTC DateTime when the historyItem (activity session) was last understood as active or finished - if null, historyItem status should be Ongoing.
      [LastModifiedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was modified on the server.
      [StartedDateTime <DateTime?>]: Required. UTC DateTime when the historyItem (activity session) was started. Required for timeline history.
      [Status <String>]: status
      [UserTimezone <String>]: Optional. The timezone in which the user's device used to generate the activity was located at activity creation time. Values supplied as Olson IDs in order to support cross-platform representation.
    [LastModifiedDateTime <DateTime?>]: Set by the server. DateTime in UTC when the object was modified on the server.
    [Status <String>]: status
    [UserTimezone <String>]: Optional. The timezone in which the user's device used to generate the activity was located at activity creation time; values supplied as Olson IDs in order to support cross-platform representation.
    [VisualElements <IMicrosoftGraphVisualInfo>]: visualInfo
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Attribution <IMicrosoftGraphImageInfo>]: imageInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AddImageQuery <Boolean?>]: Optional; parameter used to indicate the server is able to render image dynamically in response to parameterization. For example – a high contrast image
        [AlternateText <String>]: Optional; alt-text accessible content for the image
        [AlternativeText <String>]: 
        [IconUrl <String>]: Optional; URI that points to an icon which represents the application used to generate the activity
      [BackgroundColor <String>]: Optional. Background color used to render the activity in the UI - brand color for the application source of the activity. Must be a valid hex color
      [Content <IMicrosoftGraphJson>]: Json
      [Description <String>]: Optional. Longer text description of the user's unique activity (example: document name, first sentence, and/or metadata)
      [DisplayText <String>]: Required. Short text description of the user's unique activity (for example, document name in cases where an activity refers to document creation)
  [AgeGroup <String>]: Sets the age group of the user. Allowed values: null, Minor, NotAdult and Adult. Refer to the legal age group property definitions for further information. Returned only on $select. Supports $filter (eq, ne, not, and in).
  [AgreementAcceptances <IMicrosoftGraphAgreementAcceptance[]>]: The user's terms of use acceptance statuses. Read-only. Nullable.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AgreementFileId <String>]: The identifier of the agreement file accepted by the user.
    [AgreementId <String>]: The identifier of the agreement.
    [DeviceDisplayName <String>]: The display name of the device used for accepting the agreement.
    [DeviceId <String>]: The unique identifier of the device used for accepting the agreement. Supports $filter (eq) and eq for null values.
    [DeviceOSType <String>]: The operating system used to accept the agreement.
    [DeviceOSVersion <String>]: The operating system version of the device used to accept the agreement.
    [ExpirationDateTime <DateTime?>]: The expiration date time of the acceptance. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Supports $filter (eq, ge, le) and eq for null values.
    [RecordedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
    [State <String>]: agreementAcceptanceState
    [UserDisplayName <String>]: Display name of the user when the acceptance was recorded.
    [UserEmail <String>]: Email of the user when the acceptance was recorded.
    [UserId <String>]: The identifier of the user who accepted the agreement. Supports $filter (eq).
    [UserPrincipalName <String>]: UPN of the user when the acceptance was recorded.
  [AppRoleAssignments <IMicrosoftGraphAppRoleAssignment[]>]: Represents the app roles a user has been granted for an application. Supports $expand.
    [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AppRoleId <String>]: The identifier (id) for the app role which is assigned to the principal. This app role must be exposed in the appRoles property on the resource application's service principal (resourceId). If the resource application has not declared any app roles, a default app role ID of 00000000-0000-0000-0000-000000000000 can be specified to signal that the principal is assigned to the resource app without any specific app roles. Required on create.
    [CreatedDateTime <DateTime?>]: The time when the app role assignment was created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
    [PrincipalDisplayName <String>]: The display name of the user, group, or service principal that was granted the app role assignment. Read-only. Supports $filter (eq and startswith).
    [PrincipalId <String>]: The unique identifier (id) for the user, security group, or service principal being granted the app role. Security groups with dynamic memberships are supported. Required on create.
    [PrincipalType <String>]: The type of the assigned principal. This can either be User, Group, or ServicePrincipal. Read-only.
    [ResourceDisplayName <String>]: The display name of the resource app's service principal to which the assignment is made.
    [ResourceId <String>]: The unique identifier (id) for the resource service principal for which the assignment is made. Required on create. Supports $filter (eq only).
  [AssignedLicenses <IMicrosoftGraphAssignedLicense[]>]: The licenses that are assigned to the user, including inherited (group-based) licenses. This property doesn't differentiate directly-assigned and inherited licenses. Use the licenseAssignmentStates property to identify the directly-assigned and inherited licenses.  Not nullable. Returned only on $select. Supports $filter (eq, not, /$count eq 0, /$count ne 0).
    [DisabledPlans <String[]>]: A collection of the unique identifiers for plans that have been disabled.
    [SkuId <String>]: The unique identifier for the SKU.
  [AssignedPlans <IMicrosoftGraphAssignedPlan[]>]: The plans that are assigned to the user. Read-only. Not nullable. Returned only on $select. Supports $filter (eq and not).
    [AssignedDateTime <DateTime?>]: The date and time at which the plan was assigned. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
    [CapabilityStatus <String>]: Condition of the capability assignment. The possible values are Enabled, Warning, Suspended, Deleted, LockedOut. See a detailed description of each value.
    [Service <String>]: The name of the service; for example, exchange.
    [ServicePlanId <String>]: A GUID that identifies the service plan. For a complete list of GUIDs and their equivalent friendly service names, see Product names and service plan identifiers for licensing.
  [Authentication <IMicrosoftGraphAuthentication>]: authentication
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [EmailMethods <IMicrosoftGraphEmailAuthenticationMethod[]>]: The email address registered to a user for authentication.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [EmailAddress <String>]: The email address registered to this user.
    [Fido2Methods <IMicrosoftGraphFido2AuthenticationMethod[]>]: Represents the FIDO2 security keys registered to a user for authentication.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AaGuid <String>]: Authenticator Attestation GUID, an identifier that indicates the type (e.g. make and model) of the authenticator.
      [AttestationCertificates <String[]>]: The attestation certificate(s) attached to this security key.
      [AttestationLevel <String>]: attestationLevel
      [CreatedDateTime <DateTime?>]: The timestamp when this key was registered to the user.
      [DisplayName <String>]: The display name of the key as given by the user.
      [Model <String>]: The manufacturer-assigned model of the FIDO2 security key.
    [Methods <IMicrosoftGraphAuthenticationMethod[]>]: Represents all authentication methods registered to a user.
      [Id <String>]: The unique idenfier for an entity. Read-only.
    [MicrosoftAuthenticatorMethods <IMicrosoftGraphMicrosoftAuthenticatorAuthenticationMethod[]>]: The details of the Microsoft Authenticator app registered to a user for authentication.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedDateTime <DateTime?>]: The date and time that this app was registered. This property is null if the device is not registered for passwordless Phone Sign-In.
      [Device <IMicrosoftGraphDevice>]: device
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AccountEnabled <Boolean?>]: true if the account is enabled; otherwise, false. Required. Default is true.  Supports $filter (eq, ne, not, in). Only callers in Global Administrator and Cloud Device Administrator roles can set this property.
        [AlternativeSecurityIds <IMicrosoftGraphAlternativeSecurityId[]>]: For internal use only. Not nullable. Supports $filter (eq, not, ge, le).
          [IdentityProvider <String>]: For internal use only.
          [Key <Byte[]>]: For internal use only.
          [Type <Int32?>]: For internal use only.
        [ApproximateLastSignInDateTime <DateTime?>]: The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Supports $filter (eq, ne, not, ge, le, and eq on null values) and $orderBy.
        [ComplianceExpirationDateTime <DateTime?>]: The timestamp when the device is no longer deemed compliant. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        [DeviceCategory <String>]: User-defined property set by Intune to automatically add devices to groups and simplify managing devices.
        [DeviceId <String>]: Unique identifier set by Azure Device Registration Service at the time of registration. This is an alternate key that can be used to reference the device object. Supports $filter (eq, ne, not, startsWith).
        [DeviceMetadata <String>]: For internal use only. Set to null.
        [DeviceOwnership <String>]: Ownership of the device. This property is set by Intune. Possible values are: unknown, company, personal.
        [DeviceVersion <Int32?>]: For internal use only.
        [DisplayName <String>]: The display name for the device. Required. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values), $search, and $orderBy.
        [EnrollmentProfileName <String>]: Enrollment profile applied to the device. For example, Apple Device Enrollment Profile, Device enrollment - Corporate device identifiers, or Windows Autopilot profile name. This property is set by Intune.
        [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the device. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
        [IsCompliant <Boolean?>]: true if the device complies with Mobile Device Management (MDM) policies; otherwise, false. Read-only. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices. Supports $filter (eq, ne, not).
        [IsManaged <Boolean?>]: true if the device is managed by a Mobile Device Management (MDM) app; otherwise, false. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices. Supports $filter (eq, ne, not).
        [MdmAppId <String>]: Application identifier used to register device into MDM. Read-only. Supports $filter (eq, ne, not, startsWith).
        [MemberOf <IMicrosoftGraphDirectoryObject[]>]: Groups and administrative units that this device is a member of. Read-only. Nullable. Supports $expand.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
        [OnPremisesLastSyncDateTime <DateTime?>]: The last time at which the object was synced with the on-premises directory. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z Read-only. Supports $filter (eq, ne, not, ge, le, in).
        [OnPremisesSyncEnabled <Boolean?>]: true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only. Supports $filter (eq, ne, not, in, and eq on null values).
        [OperatingSystem <String>]: The type of operating system on the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values).
        [OperatingSystemVersion <String>]: The version of the operating system on the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values).
        [PhysicalIds <String[]>]: For internal use only. Not nullable. Supports $filter (eq, not, ge, le, startsWith,/$count eq 0, /$count ne 0).
        [ProfileType <String>]: The profile type of the device. Possible values: RegisteredDevice (default), SecureVM, Printer, Shared, IoT.
        [RegisteredOwners <IMicrosoftGraphDirectoryObject[]>]: The user that cloud joined the device or registered their personal device. The registered owner is set at the time of registration. Read-only. Nullable. Supports $expand.
        [RegisteredUsers <IMicrosoftGraphDirectoryObject[]>]: Collection of registered users of the device. For cloud joined devices and registered personal devices, registered users are set to the same value as registered owners at the time of registration. Read-only. Nullable. Supports $expand.
        [RegistrationDateTime <DateTime?>]: Date and time of when the device was registered. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        [SystemLabels <String[]>]: List of labels applied to the device by the system. Supports $filter (/$count eq 0, /$count ne 0).
        [TransitiveMemberOf <IMicrosoftGraphDirectoryObject[]>]: Groups and administrative units that the device is a member of. This operation is transitive. Supports $expand.
        [TrustType <String>]: Type of trust for the joined device. Read-only. Possible values:  Workplace (indicates bring your own personal devices), AzureAd (Cloud only joined devices), ServerAd (on-premises domain joined devices joined to Azure AD). For more details, see Introduction to device management in Azure Active Directory
      [DeviceTag <String>]: Tags containing app metadata.
      [DisplayName <String>]: The name of the device on which this app is registered.
      [PhoneAppVersion <String>]: Numerical version of this instance of the Authenticator app.
    [Operations <IMicrosoftGraphLongRunningOperation[]>]: Represents the status of a long-running operation.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedDateTime <DateTime?>]: The start time of the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
      [LastActionDateTime <DateTime?>]: The time of the last action in the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
      [ResourceLocation <String>]: URI of the resource that the operation is performed on.
      [Status <String>]: longRunningOperationStatus
      [StatusDetail <String>]: Details about the status of the operation.
    [PasswordMethods <IMicrosoftGraphPasswordAuthenticationMethod[]>]: Represents the password that's registered to a user for authentication. For security, the password itself will never be returned in the object, but action can be taken to reset a password.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedDateTime <DateTime?>]: The date and time when this password was last updated. This property is currently not populated. Read-only. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
      [Password <String>]: For security, the password is always returned as null from a LIST or GET operation.
    [PhoneMethods <IMicrosoftGraphPhoneAuthenticationMethod[]>]: The phone numbers registered to a user for authentication.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [PhoneNumber <String>]: The phone number to text or call for authentication. Phone numbers use the format +{country code} {number}x{extension}, with extension optional. For example, +1 5555551234 or +1 5555551234x123 are valid. Numbers are rejected when creating or updating if they do not match the required format.
      [PhoneType <String>]: authenticationPhoneType
      [SmsSignInState <String>]: authenticationMethodSignInState
    [SoftwareOathMethods <IMicrosoftGraphSoftwareOathAuthenticationMethod[]>]: The software OATH TOTP applications registered to a user for authentication.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [SecretKey <String>]: The secret key of the method. Always returns null.
    [TemporaryAccessPassMethods <IMicrosoftGraphTemporaryAccessPassAuthenticationMethod[]>]: Represents a Temporary Access Pass registered to a user for authentication through time-limited passcodes.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedDateTime <DateTime?>]: The date and time when the Temporary Access Pass was created.
      [IsUsable <Boolean?>]: The state of the authentication method that indicates whether it's currently usable by the user.
      [IsUsableOnce <Boolean?>]: Determines whether the pass is limited to a one-time use. If true, the pass can be used once; if false, the pass can be used multiple times within the Temporary Access Pass lifetime.
      [LifetimeInMinutes <Int32?>]: The lifetime of the Temporary Access Pass in minutes starting at startDateTime. Must be between 10 and 43200 inclusive (equivalent to 30 days).
      [MethodUsabilityReason <String>]: Details about the usability state (isUsable). Reasons can include: EnabledByPolicy, DisabledByPolicy, Expired, NotYetValid, OneTimeUsed.
      [StartDateTime <DateTime?>]: The date and time when the Temporary Access Pass becomes available to use and when isUsable is true is enforced.
      [TemporaryAccessPass <String>]: The Temporary Access Pass used to authenticate. Returned only on creation of a new temporaryAccessPassAuthenticationMethod object; Hidden in subsequent read operations and returned as null with GET.
    [WindowsHelloForBusinessMethods <IMicrosoftGraphWindowsHelloForBusinessAuthenticationMethod[]>]: Represents the Windows Hello for Business authentication method registered to a user for authentication.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedDateTime <DateTime?>]: The date and time that this Windows Hello for Business key was registered.
      [Device <IMicrosoftGraphDevice>]: device
      [DisplayName <String>]: The name of the device on which Windows Hello for Business is registered
      [KeyStrength <String>]: authenticationMethodKeyStrength
  [AuthorizationInfo <IMicrosoftGraphAuthorizationInfo>]: authorizationInfo
    [(Any) <Object>]: This indicates any property can be added to this object.
    [CertificateUserIds <String[]>]: 
  [Birthday <DateTime?>]: The birthday of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned only on $select.
  [BusinessPhones <String[]>]: The telephone numbers for the user. NOTE: Although this is a string collection, only one number can be set for this property. Read-only for users synced from on-premises directory. Returned by default. Supports $filter (eq, not, ge, le, startsWith).
  [Calendar <IMicrosoftGraphCalendar>]: calendar
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AllowedOnlineMeetingProviders <String[]>]: Represent the online meeting service providers that can be used to create online meetings in this calendar. Possible values are: unknown, skypeForBusiness, skypeForConsumer, teamsForBusiness.
    [CalendarPermissions <IMicrosoftGraphCalendarPermission[]>]: The permissions of the users with whom the calendar is shared.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AllowedRoles <String[]>]: List of allowed sharing or delegating permission levels for the calendar. Possible values are: none, freeBusyRead, limitedRead, read, write, delegateWithoutPrivateEventAccess, delegateWithPrivateEventAccess, custom.
      [EmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Address <String>]: The email address of the person or entity.
        [Name <String>]: The display name of the person or entity.
      [IsInsideOrganization <Boolean?>]: True if the user in context (sharee or delegate) is inside the same organization as the calendar owner.
      [IsRemovable <Boolean?>]: True if the user can be removed from the list of sharees or delegates for the specified calendar, false otherwise. The 'My organization' user determines the permissions other people within your organization have to the given calendar. You cannot remove 'My organization' as a sharee to a calendar.
      [Role <String>]: calendarRoleType
    [CalendarView <IMicrosoftGraphEvent[]>]: The calendar view for the calendar. Navigation property. Read-only.
      [Categories <String[]>]: The categories associated with the item
      [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
      [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AllowNewTimeProposals <Boolean?>]: true if the meeting organizer allows invitees to propose a new time when responding; otherwise, false. Optional. Default is true.
      [Attachments <IMicrosoftGraphAttachment[]>]: The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [ContentType <String>]: The MIME type.
        [IsInline <Boolean?>]: true if the attachment is an inline attachment; otherwise, false.
        [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [Name <String>]: The attachment's file name.
        [Size <Int32?>]: The length of the attachment in bytes.
      [Attendees <IMicrosoftGraphAttendee[]>]: The collection of attendees for the event.
        [Type <String>]: attendeeType
        [EmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
        [ProposedNewTime <IMicrosoftGraphTimeSlot>]: timeSlot
          [(Any) <Object>]: This indicates any property can be added to this object.
          [End <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DateTime <String>]: A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000).
            [TimeZone <String>]: Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values.
          [Start <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [Status <IMicrosoftGraphResponseStatus>]: responseStatus
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Response <String>]: responseType
          [Time <DateTime?>]: The date and time when the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [Body <IMicrosoftGraphItemBody>]: itemBody
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Content <String>]: The content of the item.
        [ContentType <String>]: bodyType
      [BodyPreview <String>]: The preview of the message associated with the event. It is in text format.
      [Calendar <IMicrosoftGraphCalendar>]: calendar
      [End <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
      [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the event. Nullable.
      [HasAttachments <Boolean?>]: Set to true if the event has attachments.
      [HideAttendees <Boolean?>]: When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. Default is false.
      [ICalUId <String>]: A unique identifier for an event across calendars. This ID is different for each occurrence in a recurring series. Read-only.
      [Importance <String>]: importance
      [Instances <IMicrosoftGraphEvent[]>]: The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions that have been modified, but does not include occurrences that have been cancelled from the series. Navigation property. Read-only. Nullable.
      [IsAllDay <Boolean?>]: 
      [IsCancelled <Boolean?>]: 
      [IsDraft <Boolean?>]: 
      [IsOnlineMeeting <Boolean?>]: 
      [IsOrganizer <Boolean?>]: 
      [IsReminderOn <Boolean?>]: 
      [Location <IMicrosoftGraphLocation>]: location
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Address <IMicrosoftGraphPhysicalAddress>]: physicalAddress
          [(Any) <Object>]: This indicates any property can be added to this object.
          [City <String>]: The city.
          [CountryOrRegion <String>]: The country or region. It's a free-format string value, for example, 'United States'.
          [PostalCode <String>]: The postal code.
          [State <String>]: The state.
          [Street <String>]: The street.
        [Coordinates <IMicrosoftGraphOutlookGeoCoordinates>]: outlookGeoCoordinates
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Accuracy <Double?>]: The accuracy of the latitude and longitude. As an example, the accuracy can be measured in meters, such as the latitude and longitude are accurate to within 50 meters.
          [Altitude <Double?>]: The altitude of the location.
          [AltitudeAccuracy <Double?>]: The accuracy of the altitude.
          [Latitude <Double?>]: The latitude of the location.
          [Longitude <Double?>]: The longitude of the location.
        [DisplayName <String>]: The name associated with the location.
        [LocationEmailAddress <String>]: Optional email address of the location.
        [LocationType <String>]: locationType
        [LocationUri <String>]: Optional URI representing the location.
        [UniqueId <String>]: For internal use only.
        [UniqueIdType <String>]: locationUniqueIdType
      [Locations <IMicrosoftGraphLocation[]>]: 
      [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the event. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Value <String[]>]: A collection of property values.
      [OnlineMeeting <IMicrosoftGraphOnlineMeetingInfo>]: onlineMeetingInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ConferenceId <String>]: The ID of the conference.
        [JoinUrl <String>]: The external link that launches the online meeting. This is a URL that clients will launch into a browser and will redirect the user to join the meeting.
        [Phones <IMicrosoftGraphPhone[]>]: All of the phone numbers associated with this conference.
          [Language <String>]: 
          [Number <String>]: The phone number.
          [Region <String>]: 
          [Type <String>]: phoneType
        [QuickDial <String>]: The pre-formatted quickdial for this call.
        [TollFreeNumbers <String[]>]: The toll free numbers that can be used to join the conference.
        [TollNumber <String>]: The toll number that can be used to join the conference.
      [OnlineMeetingProvider <String>]: onlineMeetingProviderType
      [OnlineMeetingUrl <String>]: 
      [Organizer <IMicrosoftGraphRecipient>]: recipient
        [(Any) <Object>]: This indicates any property can be added to this object.
        [EmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
      [OriginalEndTimeZone <String>]: 
      [OriginalStart <DateTime?>]: 
      [OriginalStartTimeZone <String>]: 
      [Recurrence <IMicrosoftGraphPatternedRecurrence>]: patternedRecurrence
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Pattern <IMicrosoftGraphRecurrencePattern>]: recurrencePattern
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DayOfMonth <Int32?>]: The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly.
          [DaysOfWeek <String[]>]: A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly.
          [FirstDayOfWeek <String>]: dayOfWeek
          [Index <String>]: weekIndex
          [Interval <Int32?>]: The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required.
          [Month <Int32?>]: The month in which the event occurs.  This is a number from 1 to 12.
          [Type <String>]: recurrencePatternType
        [Range <IMicrosoftGraphRecurrenceRange>]: recurrenceRange
          [(Any) <Object>]: This indicates any property can be added to this object.
          [EndDate <DateTime?>]: The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate.
          [NumberOfOccurrences <Int32?>]: The number of times to repeat the event. Required and must be positive if type is numbered.
          [RecurrenceTimeZone <String>]: Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used.
          [StartDate <DateTime?>]: The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.
          [Type <String>]: recurrenceRangeType
      [ReminderMinutesBeforeStart <Int32?>]: 
      [ResponseRequested <Boolean?>]: 
      [ResponseStatus <IMicrosoftGraphResponseStatus>]: responseStatus
      [Sensitivity <String>]: sensitivity
      [SeriesMasterId <String>]: 
      [ShowAs <String>]: freeBusyStatus
      [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the event. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Value <String>]: A property value.
      [Start <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
      [Subject <String>]: 
      [TransactionId <String>]: 
      [Type <String>]: eventType
      [WebLink <String>]: 
    [CanEdit <Boolean?>]: true if the user can write to the calendar, false otherwise. This property is true for the user who created the calendar. This property is also true for a user who has been shared a calendar and granted write access.
    [CanShare <Boolean?>]: true if the user has the permission to share the calendar, false otherwise. Only the user who created the calendar can share it.
    [CanViewPrivateItems <Boolean?>]: true if the user can read calendar items that have been marked private, false otherwise.
    [ChangeKey <String>]: Identifies the version of the calendar object. Every time the calendar is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
    [Color <String>]: calendarColor
    [DefaultOnlineMeetingProvider <String>]: onlineMeetingProviderType
    [Events <IMicrosoftGraphEvent[]>]: The events in the calendar. Navigation property. Read-only.
    [HexColor <String>]: The calendar color, expressed in a hex color code of three hexadecimal values, each ranging from 00 to FF and representing the red, green, or blue components of the color in the RGB color space. If the user has never explicitly set a color for the calendar, this property is empty. Read-only.
    [IsDefaultCalendar <Boolean?>]: true if this is the default calendar where new events are created by default, false otherwise.
    [IsRemovable <Boolean?>]: Indicates whether this user calendar can be deleted from the user mailbox.
    [IsTallyingResponses <Boolean?>]: Indicates whether this user calendar supports tracking of meeting responses. Only meeting invites sent from users' primary calendars support tracking of meeting responses.
    [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the calendar. Read-only. Nullable.
    [Name <String>]: The calendar name.
    [Owner <IMicrosoftGraphEmailAddress>]: emailAddress
    [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the calendar. Read-only. Nullable.
  [CalendarGroups <IMicrosoftGraphCalendarGroup[]>]: The user's calendar groups. Read-only. Nullable.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Calendars <IMicrosoftGraphCalendar[]>]: The calendars in the calendar group. Navigation property. Read-only. Nullable.
    [ChangeKey <String>]: Identifies the version of the calendar group. Every time the calendar group is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
    [ClassId <String>]: The class identifier. Read-only.
    [Name <String>]: The group name.
  [CalendarView <IMicrosoftGraphEvent[]>]: The calendar view for the calendar. Read-only. Nullable.
  [Calendars <IMicrosoftGraphCalendar[]>]: The user's calendars. Read-only. Nullable.
  [Chats <IMicrosoftGraphChat[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ChatType <String>]: chatType
    [CreatedDateTime <DateTime?>]: Date and time at which the chat was created. Read-only.
    [InstalledApps <IMicrosoftGraphTeamsAppInstallation[]>]: A collection of all the apps in the chat. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ConsentedPermissionSet <IMicrosoftGraphTeamsAppPermissionSet>]: teamsAppPermissionSet
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ResourceSpecificPermissions <IMicrosoftGraphTeamsAppResourceSpecificPermission[]>]: A collection of resource-specific permissions.
          [PermissionType <String>]: teamsAppResourceSpecificPermissionType
          [PermissionValue <String>]: The name of the resource-specific permission.
      [TeamsApp <IMicrosoftGraphTeamsApp>]: teamsApp
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AppDefinitions <IMicrosoftGraphTeamsAppDefinition[]>]: The details for each version of the app.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Authorization <IMicrosoftGraphTeamsAppAuthorization>]: teamsAppAuthorization
            [(Any) <Object>]: This indicates any property can be added to this object.
            [RequiredPermissionSet <IMicrosoftGraphTeamsAppPermissionSet>]: teamsAppPermissionSet
          [Bot <IMicrosoftGraphTeamworkBot>]: teamworkBot
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
          [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Application <IMicrosoftGraphIdentity>]: identity
              [(Any) <Object>]: This indicates any property can be added to this object.
              [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
              [Id <String>]: Unique identifier for the identity.
            [Device <IMicrosoftGraphIdentity>]: identity
            [User <IMicrosoftGraphIdentity>]: identity
          [Description <String>]: Verbose description of the application.
          [DisplayName <String>]: The name of the app provided by the app developer.
          [LastModifiedDateTime <DateTime?>]: 
          [PublishingState <String>]: teamsAppPublishingState
          [ShortDescription <String>]: Short description of the application.
          [TeamsAppId <String>]: The ID from the Teams app manifest.
          [Version <String>]: The version number of the application.
        [DisplayName <String>]: The name of the catalog app provided by the app developer in the Microsoft Teams zip app package.
        [DistributionMethod <String>]: teamsAppDistributionMethod
        [ExternalId <String>]: The ID of the catalog provided by the app developer in the Microsoft Teams zip app package.
      [TeamsAppDefinition <IMicrosoftGraphTeamsAppDefinition>]: teamsAppDefinition
    [LastMessagePreview <IMicrosoftGraphChatMessageInfo>]: chatMessageInfo
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Body <IMicrosoftGraphItemBody>]: itemBody
      [CreatedDateTime <DateTime?>]: Date time object representing the time at which message was created.
      [EventDetail <IMicrosoftGraphEventMessageDetail>]: eventMessageDetail
        [(Any) <Object>]: This indicates any property can be added to this object.
      [From <IMicrosoftGraphChatMessageFromIdentitySet>]: chatMessageFromIdentitySet
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Application <IMicrosoftGraphIdentity>]: identity
        [Device <IMicrosoftGraphIdentity>]: identity
        [User <IMicrosoftGraphIdentity>]: identity
      [IsDeleted <Boolean?>]: If set to true, the original message has been deleted.
      [MessageType <String>]: chatMessageType
    [LastUpdatedDateTime <DateTime?>]: Date and time at which the chat was renamed or list of members were last changed. Read-only.
    [Members <IMicrosoftGraphConversationMember[]>]: A collection of all the members in the chat. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DisplayName <String>]: The display name of the user.
      [Roles <String[]>]: The roles for that user. This property contains additional qualifiers only when relevant - for example, if the member has owner privileges, the roles property contains owner as one of the values. Similarly, if the member is an in-tenant guest, the roles property contains guest as one of the values. A basic member should not have any values specified in the roles property. An Out-of-tenant external member is assigned the owner role.
      [VisibleHistoryStartDateTime <DateTime?>]: The timestamp denoting how far back a conversation's history is shared with the conversation member. This property is settable only for members of a chat.
    [Messages <IMicrosoftGraphChatMessage[]>]: A collection of all the messages in the chat. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Attachments <IMicrosoftGraphChatMessageAttachment[]>]: References to attached objects like files, tabs, meetings etc.
        [Content <String>]: The content of the attachment. If the attachment is a rich card, set the property to the rich card object. This property and contentUrl are mutually exclusive.
        [ContentType <String>]: The media type of the content attachment. It can have the following values: reference: Attachment is a link to another file. Populate the contentURL with the link to the object.Any contentTypes supported by the Bot Framework's Attachment objectapplication/vnd.microsoft.card.codesnippet: A code snippet. application/vnd.microsoft.card.announcement: An announcement header.
        [ContentUrl <String>]: URL for the content of the attachment. Supported protocols: http, https, file and data.
        [Id <String>]: Read-only. Unique id of the attachment.
        [Name <String>]: Name of the attachment.
        [TeamsAppId <String>]: The ID of the Teams app that is associated with the attachment. The property is specifically used to attribute a Teams message card to the specified app.
        [ThumbnailUrl <String>]: URL to a thumbnail image that the channel can use if it supports using an alternative, smaller form of content or contentUrl. For example, if you set contentType to application/word and set contentUrl to the location of the Word document, you might include a thumbnail image that represents the document. The channel could display the thumbnail image instead of the document. When the user clicks the image, the channel would open the document.
      [Body <IMicrosoftGraphItemBody>]: itemBody
      [ChannelIdentity <IMicrosoftGraphChannelIdentity>]: channelIdentity
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ChannelId <String>]: The identity of the channel in which the message was posted.
        [TeamId <String>]: The identity of the team in which the message was posted.
      [ChatId <String>]: If the message was sent in a chat, represents the identity of the chat.
      [CreatedDateTime <DateTime?>]: Timestamp of when the chat message was created.
      [DeletedDateTime <DateTime?>]: Read only. Timestamp at which the chat message was deleted, or null if not deleted.
      [Etag <String>]: Read-only. Version number of the chat message.
      [EventDetail <IMicrosoftGraphEventMessageDetail>]: eventMessageDetail
      [From <IMicrosoftGraphChatMessageFromIdentitySet>]: chatMessageFromIdentitySet
      [HostedContents <IMicrosoftGraphChatMessageHostedContent[]>]: Content in a message hosted by Microsoft Teams - for example, images or code snippets.
        [ContentBytes <Byte[]>]: Write only. Bytes for the hosted content (such as images).
        [ContentType <String>]: Write only. Content type. sicj as image/png, image/jpg.
        [Id <String>]: The unique idenfier for an entity. Read-only.
      [Importance <String>]: chatMessageImportance
      [LastEditedDateTime <DateTime?>]: Read only. Timestamp when edits to the chat message were made. Triggers an 'Edited' flag in the Teams UI. If no edits are made the value is null.
      [LastModifiedDateTime <DateTime?>]: Read only. Timestamp when the chat message is created (initial setting) or modified, including when a reaction is added or removed.
      [Locale <String>]: Locale of the chat message set by the client. Always set to en-us.
      [Mentions <IMicrosoftGraphChatMessageMention[]>]: List of entities mentioned in the chat message. Supported entities are: user, bot, team, and channel.
        [Id <Int32?>]: Index of an entity being mentioned in the specified chatMessage. Matches the {index} value in the corresponding <at id='{index}'> tag in the message body.
        [MentionText <String>]: String used to represent the mention. For example, a user's display name, a team name.
        [Mentioned <IMicrosoftGraphChatMessageMentionedIdentitySet>]: chatMessageMentionedIdentitySet
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Application <IMicrosoftGraphIdentity>]: identity
          [Device <IMicrosoftGraphIdentity>]: identity
          [User <IMicrosoftGraphIdentity>]: identity
          [Conversation <IMicrosoftGraphTeamworkConversationIdentity>]: teamworkConversationIdentity
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
            [Id <String>]: Unique identifier for the identity.
            [ConversationIdentityType <String>]: teamworkConversationIdentityType
      [MessageHistory <IMicrosoftGraphChatMessageHistoryItem[]>]: List of activity history of a message item, including modification time and actions, such as reactionAdded, reactionRemoved, or reaction changes, on the message.
        [Actions <String>]: chatMessageActions
        [ModifiedDateTime <DateTime?>]: The date and time when the message was modified.
        [Reaction <IMicrosoftGraphChatMessageReaction>]: chatMessageReaction
          [(Any) <Object>]: This indicates any property can be added to this object.
          [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
          [ReactionType <String>]: Supported values are like, angry, sad, laugh, heart, surprised.
          [User <IMicrosoftGraphChatMessageReactionIdentitySet>]: chatMessageReactionIdentitySet
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Application <IMicrosoftGraphIdentity>]: identity
            [Device <IMicrosoftGraphIdentity>]: identity
            [User <IMicrosoftGraphIdentity>]: identity
      [MessageType <String>]: chatMessageType
      [PolicyViolation <IMicrosoftGraphChatMessagePolicyViolation>]: chatMessagePolicyViolation
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DlpAction <String>]: chatMessagePolicyViolationDlpActionTypes
        [JustificationText <String>]: Justification text provided by the sender of the message when overriding a policy violation.
        [PolicyTip <IMicrosoftGraphChatMessagePolicyViolationPolicyTip>]: chatMessagePolicyViolationPolicyTip
          [(Any) <Object>]: This indicates any property can be added to this object.
          [ComplianceUrl <String>]: The URL a user can visit to read about the data loss prevention policies for the organization. (ie, policies about what users shouldn't say in chats)
          [GeneralText <String>]: Explanatory text shown to the sender of the message.
          [MatchedConditionDescriptions <String[]>]: The list of improper data in the message that was detected by the data loss prevention app. Each DLP app defines its own conditions, examples include 'Credit Card Number' and 'Social Security Number'.
        [UserAction <String>]: chatMessagePolicyViolationUserActionTypes
        [VerdictDetails <String>]: chatMessagePolicyViolationVerdictDetailsTypes
      [Reactions <IMicrosoftGraphChatMessageReaction[]>]: Reactions for this chat message (for example, Like).
      [Replies <IMicrosoftGraphChatMessage[]>]: Replies for a specified message. Supports $expand for channel messages.
      [ReplyToId <String>]: Read-only. ID of the parent chat message or root chat message of the thread. (Only applies to chat messages in channels, not chats.)
      [Subject <String>]: The subject of the chat message, in plaintext.
      [Summary <String>]: Summary text of the chat message that could be used for push notifications and summary views or fall back views. Only applies to channel chat messages, not chat messages in a chat.
      [WebUrl <String>]: Read-only. Link to the message in Microsoft Teams.
    [OnlineMeetingInfo <IMicrosoftGraphTeamworkOnlineMeetingInfo>]: teamworkOnlineMeetingInfo
      [(Any) <Object>]: This indicates any property can be added to this object.
      [CalendarEventId <String>]: The identifier of the calendar event associated with the meeting.
      [JoinWebUrl <String>]: The URL that users click to join or uniquely identify the meeting.
      [Organizer <IMicrosoftGraphTeamworkUserIdentity>]: teamworkUserIdentity
        [(Any) <Object>]: This indicates any property can be added to this object.
        [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
        [Id <String>]: Unique identifier for the identity.
        [UserIdentityType <String>]: teamworkUserIdentityType
    [PermissionGrants <IMicrosoftGraphResourceSpecificPermissionGrant[]>]: 
      [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ClientAppId <String>]: ID of the service principal of the Azure AD app that has been granted access. Read-only.
      [ClientId <String>]: ID of the Azure AD app that has been granted access. Read-only.
      [Permission <String>]: The name of the resource-specific permission. Read-only.
      [PermissionType <String>]: The type of permission. Possible values are: Application, Delegated. Read-only.
      [ResourceAppId <String>]: ID of the Azure AD app that is hosting the resource. Read-only.
    [PinnedMessages <IMicrosoftGraphPinnedChatMessageInfo[]>]: A collection of all the pinned messages in the chat. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Message <IMicrosoftGraphChatMessage>]: chatMessage
    [Tabs <IMicrosoftGraphTeamsTab[]>]: A collection of all the tabs in the chat. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Configuration <IMicrosoftGraphTeamsTabConfiguration>]: teamsTabConfiguration
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ContentUrl <String>]: Url used for rendering tab contents in Teams. Required.
        [EntityId <String>]: Identifier for the entity hosted by the tab provider.
        [RemoveUrl <String>]: Url called by Teams client when a Tab is removed using the Teams Client.
        [WebsiteUrl <String>]: Url for showing tab contents outside of Teams.
      [DisplayName <String>]: Name of the tab.
      [TeamsApp <IMicrosoftGraphTeamsApp>]: teamsApp
      [WebUrl <String>]: Deep link URL of the tab instance. Read only.
    [TenantId <String>]: The identifier of the tenant in which the chat was created. Read-only.
    [Topic <String>]: (Optional) Subject or topic for the chat. Only available for group chats.
    [Viewpoint <IMicrosoftGraphChatViewpoint>]: chatViewpoint
      [(Any) <Object>]: This indicates any property can be added to this object.
      [IsHidden <Boolean?>]: Indicates whether the chat is hidden for the current user.
      [LastMessageReadDateTime <DateTime?>]: Represents the dateTime up until which the current user has read chatMessages in a specific chat.
    [WebUrl <String>]: The URL for the chat in Microsoft Teams. The URL should be treated as an opaque blob, and not parsed. Read-only.
  [City <String>]: The city in which the user is located. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [CompanyName <String>]: The company name which the user is associated. This property can be useful for describing the company that an external user comes from. The maximum length is 64 characters.Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [ConsentProvidedForMinor <String>]: Sets whether consent has been obtained for minors. Allowed values: null, Granted, Denied and NotRequired. Refer to the legal age group property definitions for further information. Returned only on $select. Supports $filter (eq, ne, not, and in).
  [ContactFolders <IMicrosoftGraphContactFolder[]>]: The user's contacts folders. Read-only. Nullable.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ChildFolders <IMicrosoftGraphContactFolder[]>]: The collection of child folders in the folder. Navigation property. Read-only. Nullable.
    [Contacts <IMicrosoftGraphContact[]>]: The contacts in the folder. Navigation property. Read-only. Nullable.
      [Categories <String[]>]: The categories associated with the item
      [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
      [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AssistantName <String>]: The name of the contact's assistant.
      [Birthday <DateTime?>]: The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [BusinessAddress <IMicrosoftGraphPhysicalAddress>]: physicalAddress
      [BusinessHomePage <String>]: The business home page of the contact.
      [BusinessPhones <String[]>]: The contact's business phone numbers.
      [Children <String[]>]: The names of the contact's children.
      [CompanyName <String>]: The name of the contact's company.
      [Department <String>]: The contact's department.
      [DisplayName <String>]: The contact's display name. You can specify the display name in a create or update operation. Note that later updates to other properties may cause an automatically generated value to overwrite the displayName value you have specified. To preserve a pre-existing value, always include it as displayName in an update operation.
      [EmailAddresses <IMicrosoftGraphEmailAddress[]>]: The contact's email addresses.
      [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the contact. Read-only. Nullable.
      [FileAs <String>]: The name the contact is filed under.
      [Generation <String>]: The contact's generation.
      [GivenName <String>]: The contact's given name.
      [HomeAddress <IMicrosoftGraphPhysicalAddress>]: physicalAddress
      [HomePhones <String[]>]: The contact's home phone numbers.
      [ImAddresses <String[]>]: 
      [Initials <String>]: 
      [JobTitle <String>]: 
      [Manager <String>]: 
      [MiddleName <String>]: 
      [MobilePhone <String>]: 
      [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the contact. Read-only. Nullable.
      [NickName <String>]: 
      [OfficeLocation <String>]: 
      [OtherAddress <IMicrosoftGraphPhysicalAddress>]: physicalAddress
      [ParentFolderId <String>]: 
      [PersonalNotes <String>]: 
      [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Height <Int32?>]: The height of the photo. Read-only.
        [Width <Int32?>]: The width of the photo. Read-only.
      [Profession <String>]: 
      [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the contact. Read-only. Nullable.
      [SpouseName <String>]: 
      [Surname <String>]: 
      [Title <String>]: 
      [YomiCompanyName <String>]: 
      [YomiGivenName <String>]: 
      [YomiSurname <String>]: 
    [DisplayName <String>]: The folder's display name.
    [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the contactFolder. Read-only. Nullable.
    [ParentFolderId <String>]: The ID of the folder's parent folder.
    [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the contactFolder. Read-only. Nullable.
  [Contacts <IMicrosoftGraphContact[]>]: The user's contacts. Read-only. Nullable.
  [Country <String>]: The country/region in which the user is located; for example, US or UK. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [CreatedDateTime <DateTime?>]: The date and time the user was created, in ISO 8601 format and in UTC time. The value cannot be modified and is automatically populated when the entity is created. Nullable. For on-premises users, the value represents when they were first created in Azure AD. Property is null for some users created before June 2018 and on-premises users that were synced to Azure AD before June 2018. Read-only. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in).
  [CreatedObjects <IMicrosoftGraphDirectoryObject[]>]: Directory objects that were created by the user. Read-only. Nullable.
  [CreationType <String>]: Indicates whether the user account was created through one of the following methods:  As a regular school or work account (null). As an external account (Invitation). As a local account for an Azure Active Directory B2C tenant (LocalAccount). Through self-service sign-up by an internal user using email verification (EmailVerified). Through self-service sign-up by an external user signing up through a link that is part of a user flow (SelfServiceSignUp). Read-only.Returned only on $select. Supports $filter (eq, ne, not, in).
  [CustomSecurityAttributes <IMicrosoftGraphCustomSecurityAttributeValue>]: customSecurityAttributeValue
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Department <String>]: The name for the department in which the user works. Maximum length is 64 characters. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, and eq on null values).
  [DeviceEnrollmentLimit <Int32?>]: The limit on the maximum number of devices that the user is permitted to enroll. Allowed values are 5 or 1000.
  [DeviceManagementTroubleshootingEvents <IMicrosoftGraphDeviceManagementTroubleshootingEvent[]>]: The list of troubleshooting events for this user.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [CorrelationId <String>]: Id used for tracing the failure in the service.
    [EventDateTime <DateTime?>]: Time when the event occurred .
  [DirectReports <IMicrosoftGraphDirectoryObject[]>]: The users and contacts that report to the user. (The users and contacts that have their manager property set to this user.) Read-only. Nullable. Supports $expand.
  [DisplayName <String>]: The name displayed in the address book for the user. This is usually the combination of the user's first name, middle initial and last name. This property is required when a user is created and it cannot be cleared during updates. Maximum length is 256 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values), $orderBy, and $search.
  [Drive <IMicrosoftGraphDrive>]: drive
    [(Any) <Object>]: This indicates any property can be added to this object.
    [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
    [CreatedByUser <IMicrosoftGraphUser>]: user
    [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
    [Description <String>]: Provides a user-visible description of the item. Optional.
    [ETag <String>]: ETag for the item. Read-only.
    [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
    [LastModifiedByUser <IMicrosoftGraphUser>]: user
    [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
    [Name <String>]: The name of the item. Read-write.
    [ParentReference <IMicrosoftGraphItemReference>]: itemReference
      [(Any) <Object>]: This indicates any property can be added to this object.
      [DriveId <String>]: Unique identifier of the drive instance that contains the driveItem. Only returned if the item is located in a [drive][]. Read-only.
      [DriveType <String>]: Identifies the type of drive. Only returned if the item is located in a [drive][]. See [drive][] resource for values.
      [Id <String>]: Unique identifier of the driveItem in the drive or a listItem in a list. Read-only.
      [Name <String>]: The name of the item being referenced. Read-only.
      [Path <String>]: Path that can be used to navigate to the item. Read-only.
      [ShareId <String>]: A unique identifier for a shared resource that can be accessed via the [Shares][] API.
      [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ListId <String>]: The unique identifier (guid) for the item's list in SharePoint.
        [ListItemId <String>]: An integer identifier for the item within the containing list.
        [ListItemUniqueId <String>]: The unique identifier (guid) for the item within OneDrive for Business or a SharePoint site.
        [SiteId <String>]: The unique identifier (guid) for the item's site collection (SPSite).
        [SiteUrl <String>]: The SharePoint URL for the site that contains the item.
        [TenantId <String>]: The unique identifier (guid) for the tenancy.
        [WebId <String>]: The unique identifier (guid) for the item's site (SPWeb).
      [SiteId <String>]: For OneDrive for Business and SharePoint, this property represents the ID of the site that contains the parent document library of the driveItem resource or the parent list of the listItem resource. The value is the same as the id property of that [site][] resource. It is an opaque string that consists of three identifiers of the site. For OneDrive, this property is not populated.
    [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Bundles <IMicrosoftGraphDriveItem[]>]: Collection of [bundles][bundle] (albums and multi-select-shared sets of items). Only in personal OneDrive.
      [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [CreatedByUser <IMicrosoftGraphUser>]: user
      [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
      [Description <String>]: Provides a user-visible description of the item. Optional.
      [ETag <String>]: ETag for the item. Read-only.
      [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [LastModifiedByUser <IMicrosoftGraphUser>]: user
      [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
      [Name <String>]: The name of the item. Read-write.
      [ParentReference <IMicrosoftGraphItemReference>]: itemReference
      [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Analytics <IMicrosoftGraphItemAnalytics>]: itemAnalytics
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AllTime <IMicrosoftGraphItemActivityStat>]: itemActivityStat
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Access <IMicrosoftGraphItemActionStat>]: itemActionStat
            [(Any) <Object>]: This indicates any property can be added to this object.
            [ActionCount <Int32?>]: The number of times the action took place. Read-only.
            [ActorCount <Int32?>]: The number of distinct actors that performed the action. Read-only.
          [Activities <IMicrosoftGraphItemActivity[]>]: Exposes the itemActivities represented in this itemActivityStat resource.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Access <IMicrosoftGraphAccessAction>]: accessAction
              [(Any) <Object>]: This indicates any property can be added to this object.
            [ActivityDateTime <DateTime?>]: Details about when the activity took place. Read-only.
            [Actor <IMicrosoftGraphIdentitySet>]: identitySet
            [DriveItem <IMicrosoftGraphDriveItem>]: driveItem
          [Create <IMicrosoftGraphItemActionStat>]: itemActionStat
          [Delete <IMicrosoftGraphItemActionStat>]: itemActionStat
          [Edit <IMicrosoftGraphItemActionStat>]: itemActionStat
          [EndDateTime <DateTime?>]: When the interval ends. Read-only.
          [IncompleteData <IMicrosoftGraphIncompleteData>]: incompleteData
            [(Any) <Object>]: This indicates any property can be added to this object.
            [MissingDataBeforeDateTime <DateTime?>]: The service does not have source data before the specified time.
            [WasThrottled <Boolean?>]: Some data was not recorded due to excessive activity.
          [IsTrending <Boolean?>]: Indicates whether the item is 'trending.' Read-only.
          [Move <IMicrosoftGraphItemActionStat>]: itemActionStat
          [StartDateTime <DateTime?>]: When the interval starts. Read-only.
        [ItemActivityStats <IMicrosoftGraphItemActivityStat[]>]: 
        [LastSevenDays <IMicrosoftGraphItemActivityStat>]: itemActivityStat
      [Audio <IMicrosoftGraphAudio>]: audio
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Album <String>]: The title of the album for this audio file.
        [AlbumArtist <String>]: The artist named on the album for the audio file.
        [Artist <String>]: The performing artist for the audio file.
        [Bitrate <Int64?>]: Bitrate expressed in kbps.
        [Composers <String>]: The name of the composer of the audio file.
        [Copyright <String>]: Copyright information for the audio file.
        [Disc <Int32?>]: The number of the disc this audio file came from.
        [DiscCount <Int32?>]: The total number of discs in this album.
        [Duration <Int64?>]: Duration of the audio file, expressed in milliseconds
        [Genre <String>]: The genre of this audio file.
        [HasDrm <Boolean?>]: Indicates if the file is protected with digital rights management.
        [IsVariableBitrate <Boolean?>]: Indicates if the file is encoded with a variable bitrate.
        [Title <String>]: The title of the audio file.
        [Track <Int32?>]: The number of the track on the original disc for this audio file.
        [TrackCount <Int32?>]: The total number of tracks on the original disc for this audio file.
        [Year <Int32?>]: The year the audio file was recorded.
      [Bundle <IMicrosoftGraphBundle>]: bundle
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Album <IMicrosoftGraphAlbum>]: album
          [(Any) <Object>]: This indicates any property can be added to this object.
          [CoverImageItemId <String>]: Unique identifier of the [driveItem][] that is the cover of the album.
        [ChildCount <Int32?>]: Number of children contained immediately within this container.
      [CTag <String>]: An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.
      [Children <IMicrosoftGraphDriveItem[]>]: Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
      [Content <Byte[]>]: The content stream, if the item represents a file.
      [Deleted <IMicrosoftGraphDeleted>]: deleted
        [(Any) <Object>]: This indicates any property can be added to this object.
        [State <String>]: Represents the state of the deleted item.
      [File <IMicrosoftGraphFile>]: file
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Hashes <IMicrosoftGraphHashes>]: hashes
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Crc32Hash <String>]: The CRC32 value of the file in little endian (if available). Read-only.
          [QuickXorHash <String>]: A proprietary hash of the file that can be used to determine if the contents of the file have changed (if available). Read-only.
          [Sha1Hash <String>]: SHA1 hash for the contents of the file (if available). Read-only.
          [Sha256Hash <String>]: SHA256 hash for the contents of the file (if available). Read-only.
        [MimeType <String>]: The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file was uploaded. Read-only.
        [ProcessingMetadata <Boolean?>]: 
      [FileSystemInfo <IMicrosoftGraphFileSystemInfo>]: fileSystemInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [CreatedDateTime <DateTime?>]: The UTC date and time the file was created on a client.
        [LastAccessedDateTime <DateTime?>]: The UTC date and time the file was last accessed. Available for the recent file list only.
        [LastModifiedDateTime <DateTime?>]: The UTC date and time the file was last modified on a client.
      [Folder <IMicrosoftGraphFolder>]: folder
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ChildCount <Int32?>]: Number of children contained immediately within this container.
        [View <IMicrosoftGraphFolderView>]: folderView
          [(Any) <Object>]: This indicates any property can be added to this object.
          [SortBy <String>]: The method by which the folder should be sorted.
          [SortOrder <String>]: If true, indicates that items should be sorted in descending order. Otherwise, items should be sorted ascending.
          [ViewType <String>]: The type of view that should be used to represent the folder.
      [Image <IMicrosoftGraphImage>]: image
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Height <Int32?>]: Optional. Height of the image, in pixels. Read-only.
        [Width <Int32?>]: Optional. Width of the image, in pixels. Read-only.
      [ListItem <IMicrosoftGraphListItem>]: listItem
        [(Any) <Object>]: This indicates any property can be added to this object.
        [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [CreatedByUser <IMicrosoftGraphUser>]: user
        [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
        [Description <String>]: Provides a user-visible description of the item. Optional.
        [ETag <String>]: ETag for the item. Read-only.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [LastModifiedByUser <IMicrosoftGraphUser>]: user
        [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
        [Name <String>]: The name of the item. Read-write.
        [ParentReference <IMicrosoftGraphItemReference>]: itemReference
        [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Analytics <IMicrosoftGraphItemAnalytics>]: itemAnalytics
        [ContentType <IMicrosoftGraphContentTypeInfo>]: contentTypeInfo
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The ID of the content type.
          [Name <String>]: The name of the content type.
        [DocumentSetVersions <IMicrosoftGraphDocumentSetVersion[]>]: Version information for a document set version created by a user.
          [Fields <IMicrosoftGraphFieldValueSet>]: fieldValueSet
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [LastModifiedDateTime <DateTime?>]: Date and time the version was last modified. Read-only.
          [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Level <String>]: The state of publication for this document. Either published or checkout. Read-only.
            [VersionId <String>]: The unique identifier for the version that is visible to the current caller. Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Comment <String>]: Comment about the captured version.
          [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [CreatedDateTime <DateTime?>]: Date and time when this version was created.
          [Items <IMicrosoftGraphDocumentSetVersionItem[]>]: Items within the document set that are captured as part of this version.
            [ItemId <String>]: The unique identifier for the item.
            [Title <String>]: The title of the item.
            [VersionId <String>]: The version ID of the item.
          [ShouldCaptureMinorVersion <Boolean?>]: If true, minor versions of items are also captured; otherwise, only major versions will be captured. Default value is false.
        [DriveItem <IMicrosoftGraphDriveItem>]: driveItem
        [Fields <IMicrosoftGraphFieldValueSet>]: fieldValueSet
        [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
        [Versions <IMicrosoftGraphListItemVersion[]>]: The list of previous versions of the list item.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [LastModifiedDateTime <DateTime?>]: Date and time the version was last modified. Read-only.
          [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Fields <IMicrosoftGraphFieldValueSet>]: fieldValueSet
      [Location <IMicrosoftGraphGeoCoordinates>]: geoCoordinates
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Altitude <Double?>]: Optional. The altitude (height), in feet,  above sea level for the item. Read-only.
        [Latitude <Double?>]: Optional. The latitude, in decimal, for the item. Read-only.
        [Longitude <Double?>]: Optional. The longitude, in decimal, for the item. Read-only.
      [Malware <IMicrosoftGraphMalware>]: malware
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Description <String>]: Contains the virus details for the malware facet.
      [Package <IMicrosoftGraphPackage>]: package
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Type <String>]: A string indicating the type of package. While oneNote is the only currently defined value, you should expect other package types to be returned and handle them accordingly.
      [PendingOperations <IMicrosoftGraphPendingOperations>]: pendingOperations
        [(Any) <Object>]: This indicates any property can be added to this object.
        [PendingContentUpdate <IMicrosoftGraphPendingContentUpdate>]: pendingContentUpdate
          [(Any) <Object>]: This indicates any property can be added to this object.
          [QueuedDateTime <DateTime?>]: Date and time the pending binary operation was queued in UTC time. Read-only.
      [Permissions <IMicrosoftGraphPermission[]>]: The set of permissions for the item. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [ExpirationDateTime <DateTime?>]: A format of yyyy-MM-ddTHH:mm:ssZ of DateTimeOffset indicates the expiration time of the permission. DateTime.MinValue indicates there is no expiration set for this permission. Optional.
        [GrantedTo <IMicrosoftGraphIdentitySet>]: identitySet
        [GrantedToIdentities <IMicrosoftGraphIdentitySet[]>]: 
        [GrantedToIdentitiesV2 <IMicrosoftGraphSharePointIdentitySet[]>]: For link type permissions, the details of the users to whom permission was granted. Read-only.
          [Application <IMicrosoftGraphIdentity>]: identity
          [Device <IMicrosoftGraphIdentity>]: identity
          [User <IMicrosoftGraphIdentity>]: identity
          [Group <IMicrosoftGraphIdentity>]: identity
          [SiteGroup <IMicrosoftGraphSharePointIdentity>]: sharePointIdentity
            [(Any) <Object>]: This indicates any property can be added to this object.
            [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
            [Id <String>]: Unique identifier for the identity.
            [LoginName <String>]: The sign in name of the SharePoint identity.
          [SiteUser <IMicrosoftGraphSharePointIdentity>]: sharePointIdentity
        [GrantedToV2 <IMicrosoftGraphSharePointIdentitySet>]: sharePointIdentitySet
        [HasPassword <Boolean?>]: Indicates whether the password is set for this permission. This property only appears in the response. Optional. Read-only. For OneDrive Personal only..
        [InheritedFrom <IMicrosoftGraphItemReference>]: itemReference
        [Invitation <IMicrosoftGraphSharingInvitation>]: sharingInvitation
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Email <String>]: The email address provided for the recipient of the sharing invitation. Read-only.
          [InvitedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [RedeemedBy <String>]: 
          [SignInRequired <Boolean?>]: If true the recipient of the invitation needs to sign in in order to access the shared item. Read-only.
        [Link <IMicrosoftGraphSharingLink>]: sharingLink
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Application <IMicrosoftGraphIdentity>]: identity
          [PreventsDownload <Boolean?>]: If true then the user can only use this link to view the item on the web, and cannot use it to download the contents of the item. Only for OneDrive for Business and SharePoint.
          [Scope <String>]: The scope of the link represented by this permission. Value anonymous indicates the link is usable by anyone, organization indicates the link is only usable for users signed into the same tenant.
          [Type <String>]: The type of the link created.
          [WebHtml <String>]: For embed links, this property contains the HTML code for an <iframe> element that will embed the item in a webpage.
          [WebUrl <String>]: A URL that opens the item in the browser on the OneDrive website.
        [Roles <String[]>]: The type of permission, for example, read. See below for the full list of roles. Read-only.
        [ShareId <String>]: A unique token that can be used to access this shared item via the shares API. Read-only.
      [Photo <IMicrosoftGraphPhoto>]: photo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [CameraMake <String>]: Camera manufacturer. Read-only.
        [CameraModel <String>]: Camera model. Read-only.
        [ExposureDenominator <Double?>]: The denominator for the exposure time fraction from the camera. Read-only.
        [ExposureNumerator <Double?>]: The numerator for the exposure time fraction from the camera. Read-only.
        [FNumber <Double?>]: The F-stop value from the camera. Read-only.
        [FocalLength <Double?>]: The focal length from the camera. Read-only.
        [Iso <Int32?>]: The ISO value from the camera. Read-only.
        [Orientation <Int32?>]: The orientation value from the camera. Writable on OneDrive Personal.
        [TakenDateTime <DateTime?>]: Represents the date and time the photo was taken. Read-only.
      [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
      [RemoteItem <IMicrosoftGraphRemoteItem>]: remoteItem
        [(Any) <Object>]: This indicates any property can be added to this object.
        [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
        [File <IMicrosoftGraphFile>]: file
        [FileSystemInfo <IMicrosoftGraphFileSystemInfo>]: fileSystemInfo
        [Folder <IMicrosoftGraphFolder>]: folder
        [Id <String>]: Unique identifier for the remote item in its drive. Read-only.
        [Image <IMicrosoftGraphImage>]: image
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
        [Name <String>]: Optional. Filename of the remote item. Read-only.
        [Package <IMicrosoftGraphPackage>]: package
        [ParentReference <IMicrosoftGraphItemReference>]: itemReference
        [Shared <IMicrosoftGraphShared>]: shared
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Owner <IMicrosoftGraphIdentitySet>]: identitySet
          [Scope <String>]: Indicates the scope of how the item is shared: anonymous, organization, or users. Read-only.
          [SharedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [SharedDateTime <DateTime?>]: The UTC date and time when the item was shared. Read-only.
        [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
        [Size <Int64?>]: Size of the remote item. Read-only.
        [SpecialFolder <IMicrosoftGraphSpecialFolder>]: specialFolder
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Name <String>]: The unique identifier for this item in the /drive/special collection
        [Video <IMicrosoftGraphVideo>]: video
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AudioBitsPerSample <Int32?>]: Number of audio bits per sample.
          [AudioChannels <Int32?>]: Number of audio channels.
          [AudioFormat <String>]: Name of the audio format (AAC, MP3, etc.).
          [AudioSamplesPerSecond <Int32?>]: Number of audio samples per second.
          [Bitrate <Int32?>]: Bit rate of the video in bits per second.
          [Duration <Int64?>]: Duration of the file in milliseconds.
          [FourCc <String>]: 'Four character code' name of the video format.
          [FrameRate <Double?>]: Frame rate of the video.
          [Height <Int32?>]: Height of the video, in pixels.
          [Width <Int32?>]: Width of the video, in pixels.
        [WebDavUrl <String>]: DAV compatible URL for the item.
        [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
      [Root <IMicrosoftGraphRoot>]: root
        [(Any) <Object>]: This indicates any property can be added to this object.
      [SearchResult <IMicrosoftGraphSearchResult>]: searchResult
        [(Any) <Object>]: This indicates any property can be added to this object.
        [OnClickTelemetryUrl <String>]: A callback URL that can be used to record telemetry information. The application should issue a GET on this URL if the user interacts with this item to improve the quality of results.
      [Shared <IMicrosoftGraphShared>]: shared
      [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
      [Size <Int64?>]: Size of the item in bytes. Read-only.
      [SpecialFolder <IMicrosoftGraphSpecialFolder>]: specialFolder
      [Subscriptions <IMicrosoftGraphSubscription[]>]: The set of subscriptions on the item. Only supported on the root of a drive.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [ApplicationId <String>]: Optional. Identifier of the application used to create the subscription. Read-only.
        [ChangeType <String>]: Required. Indicates the type of change in the subscribed resource that will raise a change notification. The supported values are: created, updated, deleted. Multiple values can be combined using a comma-separated list. Note:  Drive root item and list change notifications support only the updated changeType. User and group change notifications support updated and deleted changeType. Use updated to receive notifications when user or group is created, updated or soft deleted.  Use deleted to receive notifications when user or group is permanently deleted.
        [ClientState <String>]: Required. Specifies the value of the clientState property sent by the service in each change notification. The maximum length is 128 characters. The client can check that the change notification came from the service by comparing the value of the clientState property sent with the subscription with the value of the clientState property received with each change notification.
        [CreatorId <String>]: Optional. Identifier of the user or service principal that created the subscription. If the app used delegated permissions to create the subscription, this field contains the id of the signed-in user the app called on behalf of. If the app used application permissions, this field contains the id of the service principal corresponding to the app. Read-only.
        [EncryptionCertificate <String>]: Optional. A base64-encoded representation of a certificate with a public key used to encrypt resource data in change notifications. Optional but required when includeResourceData is true.
        [EncryptionCertificateId <String>]: Optional. A custom app-provided identifier to help identify the certificate needed to decrypt resource data.
        [ExpirationDateTime <DateTime?>]: Required. Specifies the date and time when the webhook subscription expires. The time is in UTC, and can be an amount of time from subscription creation that varies for the resource subscribed to. For the maximum supported subscription length of time, see the table below.
        [IncludeResourceData <Boolean?>]: Optional. When set to true, change notifications include resource data (such as content of a chat message).
        [LatestSupportedTlsVersion <String>]: Optional. Specifies the latest version of Transport Layer Security (TLS) that the notification endpoint, specified by notificationUrl, supports. The possible values are: v10, v11, v12, v13. For subscribers whose notification endpoint supports a version lower than the currently recommended version (TLS 1.2), specifying this property by a set timeline allows them to temporarily use their deprecated version of TLS before completing their upgrade to TLS 1.2. For these subscribers, not setting this property per the timeline would result in subscription operations failing. For subscribers whose notification endpoint already supports TLS 1.2, setting this property is optional. In such cases, Microsoft Graph defaults the property to v1_2.
        [LifecycleNotificationUrl <String>]: Required for Teams resources if  the expirationDateTime value is more than 1 hour from now; optional otherwise. The URL of the endpoint that receives lifecycle notifications, including subscriptionRemoved, reauthorizationRequired, and missed notifications. This URL must make use of the HTTPS protocol. For more information, see Reduce missing subscriptions and change notifications.
        [NotificationQueryOptions <String>]: Optional. OData query options for specifying value for the targeting resource. Clients receive notifications when resource reaches the state matching the query options provided here. With this new property in the subscription creation payload along with all existing properties, Webhooks will deliver notifications whenever a resource reaches the desired state mentioned in the notificationQueryOptions property. For example, when the print job is completed or when a print job resource isFetchable property value becomes true etc.  Supported only for Universal Print Service. For more information, see Subscribe to change notifications from cloud printing APIs using Microsoft Graph.
        [NotificationUrl <String>]: Required. The URL of the endpoint that will receive the change notifications. This URL must make use of the HTTPS protocol. Any query string parameter included in the notificationUrl property will be included in the HTTP POST request when Microsoft Graph sends the change notifications.
        [NotificationUrlAppId <String>]: Optional. The app ID that the subscription service can use to generate the validation token. This allows the client to validate the authenticity of the notification received.
        [Resource <String>]: Required. Specifies the resource that will be monitored for changes. Do not include the base URL (https://graph.microsoft.com/v1.0/). See the possible resource path values for each supported resource.
      [Thumbnails <IMicrosoftGraphThumbnailSet[]>]: Collection containing [ThumbnailSet][] objects associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Large <IMicrosoftGraphThumbnail>]: thumbnail
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Content <Byte[]>]: The content stream for the thumbnail.
          [Height <Int32?>]: The height of the thumbnail, in pixels.
          [SourceItemId <String>]: The unique identifier of the item that provided the thumbnail. This is only available when a folder thumbnail is requested.
          [Url <String>]: The URL used to fetch the thumbnail content.
          [Width <Int32?>]: The width of the thumbnail, in pixels.
        [Medium <IMicrosoftGraphThumbnail>]: thumbnail
        [Small <IMicrosoftGraphThumbnail>]: thumbnail
        [Source <IMicrosoftGraphThumbnail>]: thumbnail
      [Versions <IMicrosoftGraphDriveItemVersion[]>]: The list of previous versions of the item. For more info, see [getting previous versions][]. Read-only. Nullable.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [LastModifiedDateTime <DateTime?>]: Date and time the version was last modified. Read-only.
        [Publication <IMicrosoftGraphPublicationFacet>]: publicationFacet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Content <Byte[]>]: The content stream for this version of the item.
        [Size <Int64?>]: Indicates the size of the content stream for this version of the item.
      [Video <IMicrosoftGraphVideo>]: video
      [WebDavUrl <String>]: WebDAV compatible URL for the item.
      [Workbook <IMicrosoftGraphWorkbook>]: workbook
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Application <IMicrosoftGraphWorkbookApplication>]: workbookApplication
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [CalculationMode <String>]: Returns the calculation mode used in the workbook. Possible values are: Automatic, AutomaticExceptTables, Manual.
        [Comments <IMicrosoftGraphWorkbookComment[]>]: Represents a collection of comments in a workbook.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Content <String>]: The content of comment.
          [ContentType <String>]: Indicates the type for the comment.
          [Replies <IMicrosoftGraphWorkbookCommentReply[]>]: 
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Content <String>]: The content of a comment reply.
            [ContentType <String>]: Indicates the type for the comment reply.
        [Functions <IMicrosoftGraphWorkbookFunctions>]: workbookFunctions
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The unique idenfier for an entity. Read-only.
        [Names <IMicrosoftGraphWorkbookNamedItem[]>]: Represents a collection of workbooks scoped named items (named ranges and constants). Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Comment <String>]: Represents the comment associated with this name.
          [Name <String>]: The name of the object. Read-only.
          [Scope <String>]: Indicates whether the name is scoped to the workbook or to a specific worksheet. Read-only.
          [Type <String>]: Indicates what type of reference is associated with the name. The possible values are: String, Integer, Double, Boolean, Range. Read-only.
          [Value <IMicrosoftGraphJson>]: Json
          [Visible <Boolean?>]: Specifies whether the object is visible or not.
          [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Charts <IMicrosoftGraphWorkbookChart[]>]: Returns collection of charts that are part of the worksheet. Read-only.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Axes <IMicrosoftGraphWorkbookChartAxes>]: workbookChartAxes
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [CategoryAxis <IMicrosoftGraphWorkbookChartAxis>]: workbookChartAxis
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Format <IMicrosoftGraphWorkbookChartAxisFormat>]: workbookChartAxisFormat
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Bold <Boolean?>]: Represents the bold status of font.
                      [Color <String>]: HTML color code representation of the text color. E.g. #FF0000 represents Red.
                      [Italic <Boolean?>]: Represents the italic status of the font.
                      [Name <String>]: Font name (e.g. 'Calibri')
                      [Size <Double?>]: Size of the font (e.g. 11)
                      [Underline <String>]: Type of underline applied to the font. The possible values are: None, Single.
                    [Line <IMicrosoftGraphWorkbookChartLineFormat>]: workbookChartLineFormat
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Color <String>]: HTML color code representing the color of lines in the chart.
                  [MajorGridlines <IMicrosoftGraphWorkbookChartGridlines>]: workbookChartGridlines
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Format <IMicrosoftGraphWorkbookChartGridlinesFormat>]: workbookChartGridlinesFormat
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Line <IMicrosoftGraphWorkbookChartLineFormat>]: workbookChartLineFormat
                    [Visible <Boolean?>]: Boolean value representing if the axis gridlines are visible or not.
                  [MajorUnit <IMicrosoftGraphJson>]: Json
                  [Maximum <IMicrosoftGraphJson>]: Json
                  [Minimum <IMicrosoftGraphJson>]: Json
                  [MinorGridlines <IMicrosoftGraphWorkbookChartGridlines>]: workbookChartGridlines
                  [MinorUnit <IMicrosoftGraphJson>]: Json
                  [Title <IMicrosoftGraphWorkbookChartAxisTitle>]: workbookChartAxisTitle
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Format <IMicrosoftGraphWorkbookChartAxisTitleFormat>]: workbookChartAxisTitleFormat
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Id <String>]: The unique idenfier for an entity. Read-only.
                      [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                    [Text <String>]: Represents the axis title.
                    [Visible <Boolean?>]: A boolean that specifies the visibility of an axis title.
                [SeriesAxis <IMicrosoftGraphWorkbookChartAxis>]: workbookChartAxis
                [ValueAxis <IMicrosoftGraphWorkbookChartAxis>]: workbookChartAxis
              [DataLabels <IMicrosoftGraphWorkbookChartDataLabels>]: workbookChartDataLabels
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Format <IMicrosoftGraphWorkbookChartDataLabelFormat>]: workbookChartDataLabelFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                [Position <String>]: DataLabelPosition value that represents the position of the data label. The possible values are: None, Center, InsideEnd, InsideBase, OutsideEnd, Left, Right, Top, Bottom, BestFit, Callout.
                [Separator <String>]: String representing the separator used for the data labels on a chart.
                [ShowBubbleSize <Boolean?>]: Boolean value representing if the data label bubble size is visible or not.
                [ShowCategoryName <Boolean?>]: Boolean value representing if the data label category name is visible or not.
                [ShowLegendKey <Boolean?>]: Boolean value representing if the data label legend key is visible or not.
                [ShowPercentage <Boolean?>]: Boolean value representing if the data label percentage is visible or not.
                [ShowSeriesName <Boolean?>]: Boolean value representing if the data label series name is visible or not.
                [ShowValue <Boolean?>]: Boolean value representing if the data label value is visible or not.
              [Format <IMicrosoftGraphWorkbookChartAreaFormat>]: workbookChartAreaFormat
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
              [Height <Double?>]: Represents the height, in points, of the chart object.
              [Left <Double?>]: The distance, in points, from the left side of the chart to the worksheet origin.
              [Legend <IMicrosoftGraphWorkbookChartLegend>]: workbookChartLegend
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Format <IMicrosoftGraphWorkbookChartLegendFormat>]: workbookChartLegendFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                  [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                [Overlay <Boolean?>]: Boolean value for whether the chart legend should overlap with the main body of the chart.
                [Position <String>]: Represents the position of the legend on the chart. The possible values are: Top, Bottom, Left, Right, Corner, Custom.
                [Visible <Boolean?>]: A boolean value the represents the visibility of a ChartLegend object.
              [Name <String>]: Represents the name of a chart object.
              [Series <IMicrosoftGraphWorkbookChartSeries[]>]: Represents either a single series or collection of series in the chart. Read-only.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Format <IMicrosoftGraphWorkbookChartSeriesFormat>]: workbookChartSeriesFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                  [Line <IMicrosoftGraphWorkbookChartLineFormat>]: workbookChartLineFormat
                [Name <String>]: Represents the name of a series in a chart.
                [Points <IMicrosoftGraphWorkbookChartPoint[]>]: Represents a collection of all points in the series. Read-only.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Format <IMicrosoftGraphWorkbookChartPointFormat>]: workbookChartPointFormat
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Id <String>]: The unique idenfier for an entity. Read-only.
                    [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                  [Value <IMicrosoftGraphJson>]: Json
              [Title <IMicrosoftGraphWorkbookChartTitle>]: workbookChartTitle
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Format <IMicrosoftGraphWorkbookChartTitleFormat>]: workbookChartTitleFormat
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Fill <IMicrosoftGraphWorkbookChartFill>]: workbookChartFill
                  [Font <IMicrosoftGraphWorkbookChartFont>]: workbookChartFont
                [Overlay <Boolean?>]: Boolean value representing if the chart title will overlay the chart or not.
                [Text <String>]: Represents the title text of a chart.
                [Visible <Boolean?>]: A boolean value the represents the visibility of a chart title object.
              [Top <Double?>]: Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).
              [Width <Double?>]: Represents the width, in points, of the chart object.
              [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
            [Name <String>]: The display name of the worksheet.
            [Names <IMicrosoftGraphWorkbookNamedItem[]>]: Returns collection of names that are associated with the worksheet. Read-only.
            [PivotTables <IMicrosoftGraphWorkbookPivotTable[]>]: Collection of PivotTables that are part of the worksheet.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Name <String>]: Name of the PivotTable.
              [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
            [Position <Int32?>]: The zero-based position of the worksheet within the workbook.
            [Protection <IMicrosoftGraphWorkbookWorksheetProtection>]: workbookWorksheetProtection
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Options <IMicrosoftGraphWorkbookWorksheetProtectionOptions>]: workbookWorksheetProtectionOptions
                [(Any) <Object>]: This indicates any property can be added to this object.
                [AllowAutoFilter <Boolean?>]: Represents the worksheet protection option of allowing using auto filter feature.
                [AllowDeleteColumns <Boolean?>]: Represents the worksheet protection option of allowing deleting columns.
                [AllowDeleteRows <Boolean?>]: Represents the worksheet protection option of allowing deleting rows.
                [AllowFormatCells <Boolean?>]: Represents the worksheet protection option of allowing formatting cells.
                [AllowFormatColumns <Boolean?>]: Represents the worksheet protection option of allowing formatting columns.
                [AllowFormatRows <Boolean?>]: Represents the worksheet protection option of allowing formatting rows.
                [AllowInsertColumns <Boolean?>]: Represents the worksheet protection option of allowing inserting columns.
                [AllowInsertHyperlinks <Boolean?>]: Represents the worksheet protection option of allowing inserting hyperlinks.
                [AllowInsertRows <Boolean?>]: Represents the worksheet protection option of allowing inserting rows.
                [AllowPivotTables <Boolean?>]: Represents the worksheet protection option of allowing using pivot table feature.
                [AllowSort <Boolean?>]: Represents the worksheet protection option of allowing using sort feature.
              [Protected <Boolean?>]: Indicates if the worksheet is protected.  Read-only.
            [Tables <IMicrosoftGraphWorkbookTable[]>]: Collection of tables that are part of the worksheet. Read-only.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Columns <IMicrosoftGraphWorkbookTableColumn[]>]: Represents a collection of all the columns in the table. Read-only.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Filter <IMicrosoftGraphWorkbookFilter>]: workbookFilter
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [Criteria <IMicrosoftGraphWorkbookFilterCriteria>]: workbookFilterCriteria
                    [(Any) <Object>]: This indicates any property can be added to this object.
                    [Color <String>]: 
                    [Criterion1 <String>]: 
                    [Criterion2 <String>]: 
                    [DynamicCriteria <String>]: 
                    [FilterOn <String>]: 
                    [Icon <IMicrosoftGraphWorkbookIcon>]: workbookIcon
                      [(Any) <Object>]: This indicates any property can be added to this object.
                      [Index <Int32?>]: Represents the index of the icon in the given set.
                      [Set <String>]: Represents the set that the icon is part of. The possible values are: Invalid, ThreeArrows, ThreeArrowsGray, ThreeFlags, ThreeTrafficLights1, ThreeTrafficLights2, ThreeSigns, ThreeSymbols, ThreeSymbols2, FourArrows, FourArrowsGray, FourRedToBlack, FourRating, FourTrafficLights, FiveArrows, FiveArrowsGray, FiveRating, FiveQuarters, ThreeStars, ThreeTriangles, FiveBoxes.
                    [Operator <String>]: 
                    [Values <IMicrosoftGraphJson>]: Json
                [Index <Int32?>]: Returns the index number of the column within the columns collection of the table. Zero-indexed. Read-only.
                [Name <String>]: Returns the name of the table column.
                [Values <IMicrosoftGraphJson>]: Json
              [HighlightFirstColumn <Boolean?>]: Indicates whether the first column contains special formatting.
              [HighlightLastColumn <Boolean?>]: Indicates whether the last column contains special formatting.
              [LegacyId <String>]: Legacy Id used in older Excle clients. The value of the identifier remains the same even when the table is renamed. This property should be interpreted as an opaque string value and should not be parsed to any other type. Read-only.
              [Name <String>]: Name of the table.
              [Rows <IMicrosoftGraphWorkbookTableRow[]>]: Represents a collection of all the rows in the table. Read-only.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Index <Int32?>]: Returns the index number of the row within the rows collection of the table. Zero-indexed. Read-only.
                [Values <IMicrosoftGraphJson>]: Json
              [ShowBandedColumns <Boolean?>]: Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.
              [ShowBandedRows <Boolean?>]: Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.
              [ShowFilterButton <Boolean?>]: Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.
              [ShowHeaders <Boolean?>]: Indicates whether the header row is visible or not. This value can be set to show or remove the header row.
              [ShowTotals <Boolean?>]: Indicates whether the total row is visible or not. This value can be set to show or remove the total row.
              [Sort <IMicrosoftGraphWorkbookTableSort>]: workbookTableSort
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Fields <IMicrosoftGraphWorkbookSortField[]>]: Represents the current conditions used to last sort the table. Read-only.
                  [Ascending <Boolean?>]: Represents whether the sorting is done in an ascending fashion.
                  [Color <String>]: Represents the color that is the target of the condition if the sorting is on font or cell color.
                  [DataOption <String>]: Represents additional sorting options for this field. The possible values are: Normal, TextAsNumber.
                  [Icon <IMicrosoftGraphWorkbookIcon>]: workbookIcon
                  [Key <Int32?>]: Represents the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row).
                  [SortOn <String>]: Represents the type of sorting of this condition. The possible values are: Value, CellColor, FontColor, Icon.
                [MatchCase <Boolean?>]: Represents whether the casing impacted the last sort of the table. Read-only.
                [Method <String>]: Represents Chinese character ordering method last used to sort the table. The possible values are: PinYin, StrokeCount. Read-only.
              [Style <String>]: Constant value that represents the Table style. The possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified.
              [Worksheet <IMicrosoftGraphWorkbookWorksheet>]: workbookWorksheet
            [Visibility <String>]: The Visibility of the worksheet. The possible values are: Visible, Hidden, VeryHidden.
        [Operations <IMicrosoftGraphWorkbookOperation[]>]: The status of workbook operations. Getting an operation collection is not supported, but you can get the status of a long-running operation if the Location header is returned in the response. Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Error <IMicrosoftGraphWorkbookOperationError>]: workbookOperationError
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Code <String>]: The error code.
            [InnerError <IMicrosoftGraphWorkbookOperationError>]: workbookOperationError
            [Message <String>]: The error message.
          [ResourceLocation <String>]: The resource URI for the result.
          [Status <String>]: workbookOperationStatus
        [Tables <IMicrosoftGraphWorkbookTable[]>]: Represents a collection of tables associated with the workbook. Read-only.
        [Worksheets <IMicrosoftGraphWorkbookWorksheet[]>]: Represents a collection of worksheets associated with the workbook. Read-only.
    [DriveType <String>]: Describes the type of drive represented by this resource. OneDrive personal drives will return personal. OneDrive for Business will return business. SharePoint document libraries will return documentLibrary. Read-only.
    [Following <IMicrosoftGraphDriveItem[]>]: The list of items the user is following. Only in OneDrive for Business.
    [Items <IMicrosoftGraphDriveItem[]>]: All items contained in the drive. Read-only. Nullable.
    [List <IMicrosoftGraphList>]: list
      [(Any) <Object>]: This indicates any property can be added to this object.
      [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [CreatedByUser <IMicrosoftGraphUser>]: user
      [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
      [Description <String>]: Provides a user-visible description of the item. Optional.
      [ETag <String>]: ETag for the item. Read-only.
      [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [LastModifiedByUser <IMicrosoftGraphUser>]: user
      [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
      [Name <String>]: The name of the item. Read-write.
      [ParentReference <IMicrosoftGraphItemReference>]: itemReference
      [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Columns <IMicrosoftGraphColumnDefinition[]>]: The collection of field definitions for this list.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Boolean <IMicrosoftGraphBooleanColumn>]: booleanColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
        [Calculated <IMicrosoftGraphCalculatedColumn>]: calculatedColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Format <String>]: For dateTime output types, the format of the value. Possible values are: dateOnly or dateTime.
          [Formula <String>]: The formula used to compute the value for this column.
          [OutputType <String>]: The output type used to format values in this column. Possible values are: boolean, currency, dateTime, number, or text.
        [Choice <IMicrosoftGraphChoiceColumn>]: choiceColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AllowTextEntry <Boolean?>]: If true, allows custom values that aren't in the configured choices.
          [Choices <String[]>]: The list of values available for this column.
          [DisplayAs <String>]: How the choices are to be presented in the UX. Must be one of checkBoxes, dropDownMenu, or radioButtons
        [ColumnGroup <String>]: For site columns, the name of the group this column belongs to. Helps organize related columns.
        [ContentApprovalStatus <IMicrosoftGraphContentApprovalStatusColumn>]: contentApprovalStatusColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
        [Currency <IMicrosoftGraphCurrencyColumn>]: currencyColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Locale <String>]: Specifies the locale from which to infer the currency symbol.
        [DateTime <IMicrosoftGraphDateTimeColumn>]: dateTimeColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DisplayAs <String>]: How the value should be presented in the UX. Must be one of default, friendly, or standard. See below for more details. If unspecified, treated as default.
          [Format <String>]: Indicates whether the value should be presented as a date only or a date and time. Must be one of dateOnly or dateTime
        [DefaultValue <IMicrosoftGraphDefaultColumnValue>]: defaultColumnValue
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Formula <String>]: The formula used to compute the default value for the column.
          [Value <String>]: The direct value to use as the default value for the column.
        [Description <String>]: The user-facing description of the column.
        [DisplayName <String>]: The user-facing name of the column.
        [EnforceUniqueValues <Boolean?>]: If true, no two list items may have the same value for this column.
        [Geolocation <IMicrosoftGraphGeolocationColumn>]: geolocationColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
        [Hidden <Boolean?>]: Specifies whether the column is displayed in the user interface.
        [HyperlinkOrPicture <IMicrosoftGraphHyperlinkOrPictureColumn>]: hyperlinkOrPictureColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [IsPicture <Boolean?>]: Specifies whether the display format used for URL columns is an image or a hyperlink.
        [Indexed <Boolean?>]: Specifies whether the column values can be used for sorting and searching.
        [IsDeletable <Boolean?>]: Indicates whether this column can be deleted.
        [IsReorderable <Boolean?>]: Indicates whether values in the column can be reordered. Read-only.
        [IsSealed <Boolean?>]: Specifies whether the column can be changed.
        [Lookup <IMicrosoftGraphLookupColumn>]: lookupColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AllowMultipleValues <Boolean?>]: Indicates whether multiple values can be selected from the source.
          [AllowUnlimitedLength <Boolean?>]: Indicates whether values in the column should be able to exceed the standard limit of 255 characters.
          [ColumnName <String>]: The name of the lookup source column.
          [ListId <String>]: The unique identifier of the lookup source list.
          [PrimaryLookupColumnId <String>]: If specified, this column is a secondary lookup, pulling an additional field from the list item looked up by the primary lookup. Use the list item looked up by the primary as the source for the column named here.
        [Name <String>]: The API-facing name of the column as it appears in the [fields][] on a [listItem][]. For the user-facing name, see displayName.
        [Number <IMicrosoftGraphNumberColumn>]: numberColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DecimalPlaces <String>]: How many decimal places to display. See below for information about the possible values.
          [DisplayAs <String>]: How the value should be presented in the UX. Must be one of number or percentage. If unspecified, treated as number.
          [Maximum <Double?>]: The maximum permitted value.
          [Minimum <Double?>]: The minimum permitted value.
        [PersonOrGroup <IMicrosoftGraphPersonOrGroupColumn>]: personOrGroupColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AllowMultipleSelection <Boolean?>]: Indicates whether multiple values can be selected from the source.
          [ChooseFromType <String>]: Whether to allow selection of people only, or people and groups. Must be one of peopleAndGroups or peopleOnly.
          [DisplayAs <String>]: How to display the information about the person or group chosen. See below.
        [PropagateChanges <Boolean?>]: If 'true', changes to this column will be propagated to lists that implement the column.
        [ReadOnly <Boolean?>]: Specifies whether the column values can be modified.
        [Required <Boolean?>]: Specifies whether the column value isn't optional.
        [SourceColumn <IMicrosoftGraphColumnDefinition>]: columnDefinition
        [SourceContentType <IMicrosoftGraphContentTypeInfo>]: contentTypeInfo
        [Term <IMicrosoftGraphTermColumn>]: termColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AllowMultipleValues <Boolean?>]: Specifies whether the column will allow more than one value.
          [ParentTerm <IMicrosoftGraphTermStoreTerm>]: term
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Children <IMicrosoftGraphTermStoreTerm[]>]: Children of current term.
            [CreatedDateTime <DateTime?>]: Date and time of term creation. Read-only.
            [Descriptions <IMicrosoftGraphTermStoreLocalizedDescription[]>]: Description about term that is dependent on the languageTag.
              [Description <String>]: The description in the localized language.
              [LanguageTag <String>]: The language tag for the label.
            [Labels <IMicrosoftGraphTermStoreLocalizedLabel[]>]: Label metadata for a term.
              [IsDefault <Boolean?>]: Indicates whether the label is the default label.
              [LanguageTag <String>]: The language tag for the label.
              [Name <String>]: The name of the label.
            [LastModifiedDateTime <DateTime?>]: Last date and time of term modification. Read-only.
            [Properties <IMicrosoftGraphKeyValue[]>]: Collection of properties on the term.
              [Key <String>]: Key for the key-value pair.
              [Value <String>]: Value for the key-value pair.
            [Relations <IMicrosoftGraphTermStoreRelation[]>]: To indicate which terms are related to the current term as either pinned or reused.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [FromTerm <IMicrosoftGraphTermStoreTerm>]: term
              [Relationship <String>]: relationType
              [Set <IMicrosoftGraphTermStoreSet>]: set
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Children <IMicrosoftGraphTermStoreTerm[]>]: Children terms of set in term [store].
                [CreatedDateTime <DateTime?>]: Date and time of set creation. Read-only.
                [Description <String>]: Description that gives details on the term usage.
                [LocalizedNames <IMicrosoftGraphTermStoreLocalizedName[]>]: Name of the set for each languageTag.
                  [LanguageTag <String>]: The language tag for the label.
                  [Name <String>]: The name in the localized language.
                [ParentGroup <IMicrosoftGraphTermStoreGroup>]: group
                  [(Any) <Object>]: This indicates any property can be added to this object.
                  [Id <String>]: The unique idenfier for an entity. Read-only.
                  [CreatedDateTime <DateTime?>]: Date and time of the group creation. Read-only.
                  [Description <String>]: Description that gives details on the term usage.
                  [DisplayName <String>]: Name of the group.
                  [ParentSiteId <String>]: ID of the parent site of this group.
                  [Scope <String>]: termGroupScope
                  [Sets <IMicrosoftGraphTermStoreSet[]>]: All sets under the group in a term [store].
                [Properties <IMicrosoftGraphKeyValue[]>]: Custom properties for the set.
                [Relations <IMicrosoftGraphTermStoreRelation[]>]: Indicates which terms have been pinned or reused directly under the set.
                [Terms <IMicrosoftGraphTermStoreTerm[]>]: All the terms under the set.
              [ToTerm <IMicrosoftGraphTermStoreTerm>]: term
            [Set <IMicrosoftGraphTermStoreSet>]: set
          [ShowFullyQualifiedName <Boolean?>]: Specifies whether to display the entire term path or only the term label.
          [TermSet <IMicrosoftGraphTermStoreSet>]: set
        [Text <IMicrosoftGraphTextColumn>]: textColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AllowMultipleLines <Boolean?>]: Whether to allow multiple lines of text.
          [AppendChangesToExistingText <Boolean?>]: Whether updates to this column should replace existing text, or append to it.
          [LinesForEditing <Int32?>]: The size of the text box.
          [MaxLength <Int32?>]: The maximum number of characters for the value.
          [TextType <String>]: The type of text being stored. Must be one of plain or richText
        [Thumbnail <IMicrosoftGraphThumbnailColumn>]: thumbnailColumn
          [(Any) <Object>]: This indicates any property can be added to this object.
        [Type <String>]: columnTypes
        [Validation <IMicrosoftGraphColumnValidation>]: columnValidation
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DefaultLanguage <String>]: Default BCP 47 language tag for the description.
          [Descriptions <IMicrosoftGraphDisplayNameLocalization[]>]: Localized messages that explain what is needed for this column's value to be considered valid. User will be prompted with this message if validation fails.
            [DisplayName <String>]: If present, the value of this field contains the displayName string that has been set for the language present in the languageTag field.
            [LanguageTag <String>]: Provides the language culture-code and friendly name of the language that the displayName field has been provided in.
          [Formula <String>]: The formula to validate column value. For examples, see Examples of common formulas in lists.
      [ContentTypes <IMicrosoftGraphContentType[]>]: The collection of content types present in this list.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AssociatedHubsUrls <String[]>]: List of canonical URLs for hub sites with which this content type is associated to. This will contain all hub sites where this content type is queued to be enforced or is already enforced. Enforcing a content type means that the content type will be applied to the lists in the enforced sites.
        [Base <IMicrosoftGraphContentType>]: contentType
        [BaseTypes <IMicrosoftGraphContentType[]>]: The collection of content types that are ancestors of this content type.
        [ColumnLinks <IMicrosoftGraphColumnLink[]>]: The collection of columns that are required by this content type.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Name <String>]: The name of the column  in this content type.
        [ColumnPositions <IMicrosoftGraphColumnDefinition[]>]: Column order information in a content type.
        [Columns <IMicrosoftGraphColumnDefinition[]>]: The collection of column definitions for this contentType.
        [Description <String>]: The descriptive text for the item.
        [DocumentSet <IMicrosoftGraphDocumentSet>]: documentSet
          [(Any) <Object>]: This indicates any property can be added to this object.
          [AllowedContentTypes <IMicrosoftGraphContentTypeInfo[]>]: Content types allowed in document set.
          [DefaultContents <IMicrosoftGraphDocumentSetContent[]>]: Default contents of document set.
            [ContentType <IMicrosoftGraphContentTypeInfo>]: contentTypeInfo
            [FileName <String>]: Name of the file in resource folder that should be added as a default content or a template in the document set.
            [FolderName <String>]: Folder name in which the file will be placed when a new document set is created in the library.
          [PropagateWelcomePageChanges <Boolean?>]: Specifies whether to push welcome page changes to inherited content types.
          [SharedColumns <IMicrosoftGraphColumnDefinition[]>]: 
          [ShouldPrefixNameToFile <Boolean?>]: Indicates whether to add the name of the document set to each file name.
          [WelcomePageColumns <IMicrosoftGraphColumnDefinition[]>]: 
          [WelcomePageUrl <String>]: Welcome page absolute URL.
        [DocumentTemplate <IMicrosoftGraphDocumentSetContent>]: documentSetContent
        [Group <String>]: The name of the group this content type belongs to. Helps organize related content types.
        [Hidden <Boolean?>]: Indicates whether the content type is hidden in the list's 'New' menu.
        [InheritedFrom <IMicrosoftGraphItemReference>]: itemReference
        [IsBuiltIn <Boolean?>]: Specifies if a content type is a built-in content type.
        [Name <String>]: The name of the content type.
        [Order <IMicrosoftGraphContentTypeOrder>]: contentTypeOrder
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Default <Boolean?>]: Indicates whether this is the default content type
          [Position <Int32?>]: Specifies the position in which the content type appears in the selection UI.
        [ParentId <String>]: The unique identifier of the content type.
        [PropagateChanges <Boolean?>]: If true, any changes made to the content type will be pushed to inherited content types and lists that implement the content type.
        [ReadOnly <Boolean?>]: If true, the content type can't be modified unless this value is first set to false.
        [Sealed <Boolean?>]: If true, the content type can't be modified by users or through push-down operations. Only site collection administrators can seal or unseal content types.
      [DisplayName <String>]: The displayable title of the list.
      [Drive <IMicrosoftGraphDrive>]: drive
      [Items <IMicrosoftGraphListItem[]>]: All items contained in the list.
      [List <IMicrosoftGraphListInfo>]: listInfo
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ContentTypesEnabled <Boolean?>]: If true, indicates that content types are enabled for this list.
        [Hidden <Boolean?>]: If true, indicates that the list is not normally visible in the SharePoint user experience.
        [Template <String>]: An enumerated value that represents the base list template used in creating the list. Possible values include documentLibrary, genericList, task, survey, announcements, contacts, and more.
      [Operations <IMicrosoftGraphRichLongRunningOperation[]>]: The collection of long-running operations on the list.
        [CreatedDateTime <DateTime?>]: The start time of the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        [LastActionDateTime <DateTime?>]: The time of the last action in the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        [ResourceLocation <String>]: URI of the resource that the operation is performed on.
        [Status <String>]: longRunningOperationStatus
        [StatusDetail <String>]: Details about the status of the operation.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Error <IMicrosoftGraphPublicError>]: publicError
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Code <String>]: Represents the error code.
          [Details <IMicrosoftGraphPublicErrorDetail[]>]: Details of the error.
            [Code <String>]: The error code.
            [Message <String>]: The error message.
            [Target <String>]: The target of the error.
          [InnerError <IMicrosoftGraphPublicInnerError>]: publicInnerError
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Code <String>]: The error code.
            [Details <IMicrosoftGraphPublicErrorDetail[]>]: A collection of error details.
            [Message <String>]: The error message.
            [Target <String>]: The target of the error.
          [Message <String>]: A non-localized message for the developer.
          [Target <String>]: The target of the error.
        [PercentageComplete <Int32?>]: A value between 0 and 100 that indicates the progress of the operation.
        [ResourceId <String>]: The unique identifier for the result.
        [Type <String>]: The type of the operation.
      [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
      [Subscriptions <IMicrosoftGraphSubscription[]>]: The set of subscriptions on the list.
      [System <IMicrosoftGraphSystemFacet>]: systemFacet
        [(Any) <Object>]: This indicates any property can be added to this object.
    [Owner <IMicrosoftGraphIdentitySet>]: identitySet
    [Quota <IMicrosoftGraphQuota>]: quota
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Deleted <Int64?>]: Total space consumed by files in the recycle bin, in bytes. Read-only.
      [Remaining <Int64?>]: Total space remaining before reaching the quota limit, in bytes. Read-only.
      [State <String>]: Enumeration value that indicates the state of the storage space. Read-only.
      [StoragePlanInformation <IMicrosoftGraphStoragePlanInformation>]: storagePlanInformation
        [(Any) <Object>]: This indicates any property can be added to this object.
        [UpgradeAvailable <Boolean?>]: Indicates whether there are higher storage quota plans available. Read-only.
      [Total <Int64?>]: Total allowed storage space, in bytes. Read-only.
      [Used <Int64?>]: Total space used, in bytes. Read-only.
    [Root <IMicrosoftGraphDriveItem>]: driveItem
    [SharePointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
    [Special <IMicrosoftGraphDriveItem[]>]: Collection of common folders available in OneDrive. Read-only. Nullable.
    [System <IMicrosoftGraphSystemFacet>]: systemFacet
  [Drives <IMicrosoftGraphDrive[]>]: A collection of drives available for this user. Read-only.
  [EmployeeExperience <IMicrosoftGraphEmployeeExperienceUser>]: employeeExperienceUser
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [LearningCourseActivities <IMicrosoftGraphLearningCourseActivity[]>]: 
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CompletedDateTime <DateTime?>]: Date and time when the assignment was completed. Optional.
      [CompletionPercentage <Int32?>]: The percentage completion value of the course activity. Optional.
      [ExternalcourseActivityId <String>]: A course activity ID generated by the provider. Optional.
      [LearnerUserId <String>]: The user ID of the learner to whom the activity is assigned. Required.
      [LearningContentId <String>]: The ID of the learning content created in Viva Learning. Required.
      [LearningProviderId <String>]: The registration ID of the provider. Required.
      [Status <String>]: courseStatus
  [EmployeeHireDate <DateTime?>]: The date and time when the user was hired or will start work in case of a future hire. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in).
  [EmployeeId <String>]: The employee identifier assigned to the user by the organization. The maximum length is 16 characters. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
  [EmployeeLeaveDateTime <DateTime?>]: The date and time when the user left or will leave the organization. To read this property, the calling app must be assigned the User-LifeCycleInfo.Read.All permission. To write this property, the calling app must be assigned the User.Read.All and User-LifeCycleInfo.ReadWrite.All permissions. To read this property in delegated scenarios, the admin needs one of the following Azure AD roles: Lifecycle Workflows Administrator, Global Reader, or Global Administrator. To write this property in delegated scenarios, the admin needs the Global Administrator role. Supports $filter (eq, ne, not , ge, le, in). For more information, see Configure the employeeLeaveDateTime property for a user.
  [EmployeeOrgData <IMicrosoftGraphEmployeeOrgData>]: employeeOrgData
    [(Any) <Object>]: This indicates any property can be added to this object.
    [CostCenter <String>]: The cost center associated with the user. Returned only on $select. Supports $filter.
    [Division <String>]: The name of the division in which the user works. Returned only on $select. Supports $filter.
  [EmployeeType <String>]: Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith).
  [Events <IMicrosoftGraphEvent[]>]: The user's events. Default is to show Events under the Default Calendar. Read-only. Nullable.
  [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the user. Read-only. Supports $expand. Nullable.
  [ExternalUserState <String>]: For an external user invited to the tenant using the invitation API, this property represents the invited user's invitation status. For invited users, the state can be PendingAcceptance or Accepted, or null for all other users. Returned only on $select. Supports $filter (eq, ne, not , in).
  [ExternalUserStateChangeDateTime <DateTime?>]: Shows the timestamp for the latest change to the externalUserState property. Returned only on $select. Supports $filter (eq, ne, not , in).
  [FaxNumber <String>]: The fax number of the user. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
  [FollowedSites <IMicrosoftGraphSite[]>]: 
    [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
    [CreatedByUser <IMicrosoftGraphUser>]: user
    [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
    [Description <String>]: Provides a user-visible description of the item. Optional.
    [ETag <String>]: ETag for the item. Read-only.
    [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
    [LastModifiedByUser <IMicrosoftGraphUser>]: user
    [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
    [Name <String>]: The name of the item. Read-write.
    [ParentReference <IMicrosoftGraphItemReference>]: itemReference
    [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Analytics <IMicrosoftGraphItemAnalytics>]: itemAnalytics
    [Columns <IMicrosoftGraphColumnDefinition[]>]: The collection of column definitions reusable across lists under this site.
    [ContentTypes <IMicrosoftGraphContentType[]>]: The collection of content types defined for this site.
    [DisplayName <String>]: The full title for the site. Read-only.
    [Drive <IMicrosoftGraphDrive>]: drive
    [Drives <IMicrosoftGraphDrive[]>]: The collection of drives (document libraries) under this site.
    [Error <IMicrosoftGraphPublicError>]: publicError
    [ExternalColumns <IMicrosoftGraphColumnDefinition[]>]: 
    [Items <IMicrosoftGraphBaseItem[]>]: Used to address any item contained in this site. This collection can't be enumerated.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [CreatedByUser <IMicrosoftGraphUser>]: user
      [CreatedDateTime <DateTime?>]: Date and time of item creation. Read-only.
      [Description <String>]: Provides a user-visible description of the item. Optional.
      [ETag <String>]: ETag for the item. Read-only.
      [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [LastModifiedByUser <IMicrosoftGraphUser>]: user
      [LastModifiedDateTime <DateTime?>]: Date and time the item was last modified. Read-only.
      [Name <String>]: The name of the item. Read-write.
      [ParentReference <IMicrosoftGraphItemReference>]: itemReference
      [WebUrl <String>]: URL that displays the resource in the browser. Read-only.
    [Lists <IMicrosoftGraphList[]>]: The collection of lists under this site.
    [Onenote <IMicrosoftGraphOnenote>]: onenote
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Notebooks <IMicrosoftGraphNotebook[]>]: The collection of OneNote notebooks that are owned by the user or group. Read-only. Nullable.
        [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [DisplayName <String>]: The name of the notebook.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [LastModifiedDateTime <DateTime?>]: The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        [Self <String>]: The endpoint where you can get details about the page. Read-only.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [IsDefault <Boolean?>]: Indicates whether this is the user's default notebook. Read-only.
        [IsShared <Boolean?>]: Indicates whether the notebook is shared. If true, the contents of the notebook can be seen by people other than the owner. Read-only.
        [Links <IMicrosoftGraphNotebookLinks>]: notebookLinks
          [(Any) <Object>]: This indicates any property can be added to this object.
          [OneNoteClientUrl <IMicrosoftGraphExternalLink>]: externalLink
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Href <String>]: The URL of the link.
          [OneNoteWebUrl <IMicrosoftGraphExternalLink>]: externalLink
        [SectionGroups <IMicrosoftGraphSectionGroup[]>]: The section groups in the notebook. Read-only. Nullable.
          [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [DisplayName <String>]: The name of the notebook.
          [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [LastModifiedDateTime <DateTime?>]: The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
          [Self <String>]: The endpoint where you can get details about the page. Read-only.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [ParentNotebook <IMicrosoftGraphNotebook>]: notebook
          [ParentSectionGroup <IMicrosoftGraphSectionGroup>]: sectionGroup
          [SectionGroups <IMicrosoftGraphSectionGroup[]>]: The section groups in the section. Read-only. Nullable.
          [SectionGroupsUrl <String>]: The URL for the sectionGroups navigation property, which returns all the section groups in the section group. Read-only.
          [Sections <IMicrosoftGraphOnenoteSection[]>]: The sections in the section group. Read-only. Nullable.
            [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [DisplayName <String>]: The name of the notebook.
            [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
            [LastModifiedDateTime <DateTime?>]: The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
            [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
            [Self <String>]: The endpoint where you can get details about the page. Read-only.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [IsDefault <Boolean?>]: Indicates whether this is the user's default section. Read-only.
            [Links <IMicrosoftGraphSectionLinks>]: sectionLinks
              [(Any) <Object>]: This indicates any property can be added to this object.
              [OneNoteClientUrl <IMicrosoftGraphExternalLink>]: externalLink
              [OneNoteWebUrl <IMicrosoftGraphExternalLink>]: externalLink
            [Pages <IMicrosoftGraphOnenotePage[]>]: The collection of pages in the section.  Read-only. Nullable.
              [CreatedDateTime <DateTime?>]: The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
              [Self <String>]: The endpoint where you can get details about the page. Read-only.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [Content <Byte[]>]: The page's HTML content.
              [ContentUrl <String>]: The URL for the page's HTML content.  Read-only.
              [CreatedByAppId <String>]: The unique identifier of the application that created the page. Read-only.
              [LastModifiedDateTime <DateTime?>]: The date and time when the page was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
              [Level <Int32?>]: The indentation level of the page. Read-only.
              [Links <IMicrosoftGraphPageLinks>]: pageLinks
                [(Any) <Object>]: This indicates any property can be added to this object.
                [OneNoteClientUrl <IMicrosoftGraphExternalLink>]: externalLink
                [OneNoteWebUrl <IMicrosoftGraphExternalLink>]: externalLink
              [Order <Int32?>]: The order of the page within its parent section. Read-only.
              [ParentNotebook <IMicrosoftGraphNotebook>]: notebook
              [ParentSection <IMicrosoftGraphOnenoteSection>]: onenoteSection
              [Title <String>]: The title of the page.
              [UserTags <String[]>]: 
            [PagesUrl <String>]: The pages endpoint where you can get details for all the pages in the section. Read-only.
            [ParentNotebook <IMicrosoftGraphNotebook>]: notebook
            [ParentSectionGroup <IMicrosoftGraphSectionGroup>]: sectionGroup
          [SectionsUrl <String>]: The URL for the sections navigation property, which returns all the sections in the section group. Read-only.
        [SectionGroupsUrl <String>]: The URL for the sectionGroups navigation property, which returns all the section groups in the notebook. Read-only.
        [Sections <IMicrosoftGraphOnenoteSection[]>]: The sections in the notebook. Read-only. Nullable.
        [SectionsUrl <String>]: The URL for the sections navigation property, which returns all the sections in the notebook. Read-only.
        [UserRole <String>]: onenoteUserRole
      [Operations <IMicrosoftGraphOnenoteOperation[]>]: The status of OneNote operations. Getting an operations collection is not supported, but you can get the status of long-running operations if the Operation-Location header is returned in the response. Read-only. Nullable.
        [CreatedDateTime <DateTime?>]: The start time of the operation.
        [LastActionDateTime <DateTime?>]: The time of the last action of the operation.
        [Status <String>]: operationStatus
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Error <IMicrosoftGraphOnenoteOperationError>]: onenoteOperationError
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Code <String>]: The error code.
          [Message <String>]: The error message.
        [PercentComplete <String>]: The operation percent complete if the operation is still in running status.
        [ResourceId <String>]: The resource id.
        [ResourceLocation <String>]: The resource URI for the object. For example, the resource URI for a copied page or section.
      [Pages <IMicrosoftGraphOnenotePage[]>]: The pages in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
      [Resources <IMicrosoftGraphOnenoteResource[]>]: The image and other file resources in OneNote pages. Getting a resources collection is not supported, but you can get the binary content of a specific resource. Read-only. Nullable.
        [Self <String>]: The endpoint where you can get details about the page. Read-only.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Content <Byte[]>]: The content stream
        [ContentUrl <String>]: The URL for downloading the content
      [SectionGroups <IMicrosoftGraphSectionGroup[]>]: The section groups in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
      [Sections <IMicrosoftGraphOnenoteSection[]>]: The sections in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable.
    [Operations <IMicrosoftGraphRichLongRunningOperation[]>]: The collection of long-running operations on the site.
    [Permissions <IMicrosoftGraphPermission[]>]: The permissions associated with the site. Nullable.
    [Root <IMicrosoftGraphRoot>]: root
    [SharepointIds <IMicrosoftGraphSharepointIds>]: sharepointIds
    [SiteCollection <IMicrosoftGraphSiteCollection>]: siteCollection
      [(Any) <Object>]: This indicates any property can be added to this object.
      [DataLocationCode <String>]: The geographic region code for where this site collection resides. Read-only.
      [Hostname <String>]: The hostname for the site collection. Read-only.
      [Root <IMicrosoftGraphRoot>]: root
    [Sites <IMicrosoftGraphSite[]>]: The collection of the sub-sites under this site.
    [TermStore <IMicrosoftGraphTermStore>]: store
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DefaultLanguageTag <String>]: Default language of the term store.
      [Groups <IMicrosoftGraphTermStoreGroup[]>]: Collection of all groups available in the term store.
      [LanguageTags <String[]>]: List of languages for the term store.
      [Sets <IMicrosoftGraphTermStoreSet[]>]: Collection of all sets available in the term store. This relationship can only be used to load a specific term set.
    [TermStores <IMicrosoftGraphTermStore[]>]: The collection of termStores under this site.
  [GivenName <String>]: The given name (first name) of the user. Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
  [HireDate <DateTime?>]: The hire date of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned only on $select.  Note: This property is specific to SharePoint Online. We recommend using the native employeeHireDate property to set and update hire date values using Microsoft Graph APIs.
  [Identities <IMicrosoftGraphObjectIdentity[]>]: Represents the identities that can be used to sign in to this user account. An identity can be provided by Microsoft (also known as a local account), by organizations, or by social identity providers such as Facebook, Google, and Microsoft, and tied to a user account. May contain multiple items with the same signInType value. Returned only on $select. Supports $filter (eq) including on null values, only where the signInType is not userPrincipalName.
    [Issuer <String>]: Specifies the issuer of the identity, for example facebook.com.For local accounts (where signInType is not federated), this property is the local B2C tenant default domain name, for example contoso.onmicrosoft.com.For external users from other Azure AD organization, this will be the domain of the federated organization, for example contoso.com.Supports $filter. 512 character limit.
    [IssuerAssignedId <String>]: Specifies the unique identifier assigned to the user by the issuer. The combination of issuer and issuerAssignedId must be unique within the organization. Represents the sign-in name for the user, when signInType is set to emailAddress or userName (also known as local accounts).When signInType is set to: emailAddress, (or a custom string that starts with emailAddress like emailAddress1) issuerAssignedId must be a valid email addressuserName, issuerAssignedId must begin with alphabetical character or number, and can only contain alphanumeric characters and the following symbols: - or Supports $filter. 64 character limit.
    [SignInType <String>]: Specifies the user sign-in types in your directory, such as emailAddress, userName, federated, or userPrincipalName. federated represents a unique identifier for a user from an issuer, that can be in any format chosen by the issuer. Setting or updating a userPrincipalName identity will update the value of the userPrincipalName property on the user object. The validations performed on the userPrincipalName property on the user object, for example, verified domains and acceptable characters, will be performed when setting or updating a userPrincipalName identity. Additional validation is enforced on issuerAssignedId when the sign-in type is set to emailAddress or userName. This property can also be set to any custom string.
  [ImAddresses <String[]>]: The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only. Returned only on $select. Supports $filter (eq, not, ge, le, startsWith).
  [InferenceClassification <IMicrosoftGraphInferenceClassification>]: inferenceClassification
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Overrides <IMicrosoftGraphInferenceClassificationOverride[]>]: A set of overrides for a user to always classify messages from specific senders in certain ways: focused, or other. Read-only. Nullable.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [ClassifyAs <String>]: inferenceClassificationType
      [SenderEmailAddress <IMicrosoftGraphEmailAddress>]: emailAddress
  [Insights <IMicrosoftGraphOfficeGraphInsights>]: officeGraphInsights
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Shared <IMicrosoftGraphSharedInsight[]>]: Calculated relationship identifying documents shared with or by the user. This includes URLs, file attachments, and reference attachments to OneDrive for Business and SharePoint files found in Outlook messages and meetings. This also includes URLs and reference attachments to Teams conversations. Ordered by recency of share.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [LastShared <IMicrosoftGraphSharingDetail>]: sharingDetail
        [(Any) <Object>]: This indicates any property can be added to this object.
        [SharedBy <IMicrosoftGraphInsightIdentity>]: insightIdentity
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Address <String>]: The email address of the user who shared the item.
          [DisplayName <String>]: The display name of the user who shared the item.
          [Id <String>]: The id of the user who shared the item.
        [SharedDateTime <DateTime?>]: The date and time the file was last shared. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        [SharingReference <IMicrosoftGraphResourceReference>]: resourceReference
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Id <String>]: The item's unique identifier.
          [Type <String>]: A string value that can be used to classify the item, such as 'microsoft.graph.driveItem'
          [WebUrl <String>]: A URL leading to the referenced item.
        [SharingSubject <String>]: The subject with which the document was shared.
        [SharingType <String>]: Determines the way the document was shared, can be by a 'Link', 'Attachment', 'Group', 'Site'.
      [LastSharedMethod <IMicrosoftGraphEntity>]: entity
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
      [Resource <IMicrosoftGraphEntity>]: entity
      [ResourceReference <IMicrosoftGraphResourceReference>]: resourceReference
      [ResourceVisualization <IMicrosoftGraphResourceVisualization>]: resourceVisualization
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ContainerDisplayName <String>]: A string describing where the item is stored. For example, the name of a SharePoint site or the user name identifying the owner of the OneDrive storing the item.
        [ContainerType <String>]: Can be used for filtering by the type of container in which the file is stored. Such as Site or OneDriveBusiness.
        [ContainerWebUrl <String>]: A path leading to the folder in which the item is stored.
        [MediaType <String>]: The item's media type. Can be used for filtering for a specific type of file based on supported IANA Media Mime Types. Note that not all Media Mime Types are supported.
        [PreviewImageUrl <String>]: A URL leading to the preview image for the item.
        [PreviewText <String>]: A preview text for the item.
        [Title <String>]: The item's title text.
        [Type <String>]: The item's media type. Can be used for filtering for a specific file based on a specific type. See below for supported types.
      [SharingHistory <IMicrosoftGraphSharingDetail[]>]: 
    [Trending <IMicrosoftGraphTrending[]>]: Calculated relationship identifying documents trending around a user. Trending documents are calculated based on activity of the user's closest network of people and include files stored in OneDrive for Business and SharePoint. Trending insights help the user to discover potentially useful content that the user has access to, but has never viewed before.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [LastModifiedDateTime <DateTime?>]: 
      [Resource <IMicrosoftGraphEntity>]: entity
      [ResourceReference <IMicrosoftGraphResourceReference>]: resourceReference
      [ResourceVisualization <IMicrosoftGraphResourceVisualization>]: resourceVisualization
      [Weight <Double?>]: Value indicating how much the document is currently trending. The larger the number, the more the document is currently trending around the user (the more relevant it is). Returned documents are sorted by this value.
    [Used <IMicrosoftGraphUsedInsight[]>]: Calculated relationship identifying the latest documents viewed or modified by a user, including OneDrive for Business and SharePoint documents, ranked by recency of use.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [LastUsed <IMicrosoftGraphUsageDetails>]: usageDetails
        [(Any) <Object>]: This indicates any property can be added to this object.
        [LastAccessedDateTime <DateTime?>]: The date and time the resource was last accessed by the user. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        [LastModifiedDateTime <DateTime?>]: The date and time the resource was last modified by the user. The timestamp represents date and time information using ISO 8601 format and is always in UTC time.For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
      [Resource <IMicrosoftGraphEntity>]: entity
      [ResourceReference <IMicrosoftGraphResourceReference>]: resourceReference
      [ResourceVisualization <IMicrosoftGraphResourceVisualization>]: resourceVisualization
  [Interests <String[]>]: A list for the user to describe their interests. Returned only on $select.
  [IsResourceAccount <Boolean?>]: Do not use – reserved for future use.
  [JobTitle <String>]: The user's job title. Maximum length is 128 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values).
  [JoinedTeams <IMicrosoftGraphTeam[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AllChannels <IMicrosoftGraphChannel[]>]: List of channels either hosted in or shared with the team (incoming channels).
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedDateTime <DateTime?>]: Read only. Timestamp at which the channel was created.
      [Description <String>]: Optional textual description for the channel.
      [DisplayName <String>]: Channel name as it will appear to the user in Microsoft Teams. The maximum length is 50 characters.
      [Email <String>]: The email address for sending messages to the channel. Read-only.
      [FilesFolder <IMicrosoftGraphDriveItem>]: driveItem
      [IsFavoriteByDefault <Boolean?>]: Indicates whether the channel should automatically be marked 'favorite' for all members of the team. Can only be set programmatically with Create team. Default: false.
      [Members <IMicrosoftGraphConversationMember[]>]: A collection of membership records associated with the channel.
      [MembershipType <String>]: channelMembershipType
      [Messages <IMicrosoftGraphChatMessage[]>]: A collection of all the messages in the channel. A navigation property. Nullable.
      [SharedWithTeams <IMicrosoftGraphSharedWithChannelTeamInfo[]>]: A collection of teams with which a channel is shared.
        [DisplayName <String>]: The name of the team.
        [Team <IMicrosoftGraphTeam>]: team
        [TenantId <String>]: The ID of the Azure Active Directory tenant.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AllowedMembers <IMicrosoftGraphConversationMember[]>]: A collection of team members who have access to the shared channel.
        [IsHostTeam <Boolean?>]: Indicates whether the team is the host of the channel.
      [Tabs <IMicrosoftGraphTeamsTab[]>]: A collection of all the tabs in the channel. A navigation property.
      [TenantId <String>]: The ID of the Azure Active Directory tenant.
      [WebUrl <String>]: A hyperlink that will go to the channel in Microsoft Teams. This is the URL that you get when you right-click a channel in Microsoft Teams and select Get link to channel. This URL should be treated as an opaque blob, and not parsed. Read-only.
    [Channels <IMicrosoftGraphChannel[]>]: The collection of channels and messages associated with the team.
    [Classification <String>]: An optional label. Typically describes the data or business sensitivity of the team. Must match one of a pre-configured set in the tenant's directory.
    [CreatedDateTime <DateTime?>]: Timestamp at which the team was created.
    [Description <String>]: An optional description for the team. Maximum length: 1024 characters.
    [DisplayName <String>]: The name of the team.
    [FunSettings <IMicrosoftGraphTeamFunSettings>]: teamFunSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [AllowCustomMemes <Boolean?>]: If set to true, enables users to include custom memes.
      [AllowGiphy <Boolean?>]: If set to true, enables Giphy use.
      [AllowStickersAndMemes <Boolean?>]: If set to true, enables users to include stickers and memes.
      [GiphyContentRating <String>]: giphyRatingType
    [Group <IMicrosoftGraphGroup>]: group
      [(Any) <Object>]: This indicates any property can be added to this object.
      [DeletedDateTime <DateTime?>]: Date and time when this object was deleted. Always null when the object hasn't been deleted.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AcceptedSenders <IMicrosoftGraphDirectoryObject[]>]: The list of users or groups that are allowed to create post's or calendar events in this group. If this list is non-empty then only users or groups listed here are allowed to post.
      [AllowExternalSenders <Boolean?>]: Indicates if people external to the organization can send messages to the group. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
      [AppRoleAssignments <IMicrosoftGraphAppRoleAssignment[]>]: Represents the app roles a group has been granted for an application. Supports $expand.
      [AssignedLabels <IMicrosoftGraphAssignedLabel[]>]: The list of sensitivity label pairs (label ID, label name) associated with a Microsoft 365 group. Returned only on $select.
        [DisplayName <String>]: The display name of the label. Read-only.
        [LabelId <String>]: The unique identifier of the label.
      [AssignedLicenses <IMicrosoftGraphAssignedLicense[]>]: The licenses that are assigned to the group. Returned only on $select. Supports $filter (eq).Read-only.
      [AutoSubscribeNewMembers <Boolean?>]: Indicates if new members added to the group will be auto-subscribed to receive email notifications. You can set this property in a PATCH request for the group; do not set it in the initial POST request that creates the group. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
      [Calendar <IMicrosoftGraphCalendar>]: calendar
      [CalendarView <IMicrosoftGraphEvent[]>]: The calendar view for the calendar. Read-only.
      [Classification <String>]: Describes a classification for the group (such as low, medium or high business impact). Valid values for this property are defined by creating a ClassificationList setting value, based on the template definition.Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith).
      [Conversations <IMicrosoftGraphConversation[]>]: The group's conversations.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [HasAttachments <Boolean?>]: Indicates whether any of the posts within this Conversation has at least one attachment. Supports $filter (eq, ne) and $search.
        [LastDeliveredDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [Preview <String>]: A short summary from the body of the latest post in this conversation. Supports $filter (eq, ne, le, ge).
        [Threads <IMicrosoftGraphConversationThread[]>]: A collection of all the conversation threads in the conversation. A navigation property. Read-only. Nullable.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [CcRecipients <IMicrosoftGraphRecipient[]>]: The Cc: recipients for the thread. Returned only on $select.
          [HasAttachments <Boolean?>]: Indicates whether any of the posts within this thread has at least one attachment. Returned by default.
          [IsLocked <Boolean?>]: Indicates if the thread is locked. Returned by default.
          [LastDeliveredDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.Returned by default.
          [Posts <IMicrosoftGraphPost[]>]: 
            [Categories <String[]>]: The categories associated with the item
            [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
            [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
            [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Attachments <IMicrosoftGraphAttachment[]>]: Read-only. Nullable. Supports $expand.
            [Body <IMicrosoftGraphItemBody>]: itemBody
            [ConversationId <String>]: Unique ID of the conversation. Read-only.
            [ConversationThreadId <String>]: Unique ID of the conversation thread. Read-only.
            [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the post. Read-only. Nullable. Supports $expand.
            [From <IMicrosoftGraphRecipient>]: recipient
            [HasAttachments <Boolean?>]: Indicates whether the post has at least one attachment. This is a default property.
            [InReplyTo <IMicrosoftGraphPost>]: post
            [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the post. Read-only. Nullable.
            [NewParticipants <IMicrosoftGraphRecipient[]>]: Conversation participants that were added to the thread as part of this post.
            [ReceivedDateTime <DateTime?>]: Specifies when the post was received. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
            [Sender <IMicrosoftGraphRecipient>]: recipient
            [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the post. Read-only. Nullable.
          [Preview <String>]: A short summary from the body of the latest post in this conversation. Returned by default.
          [ToRecipients <IMicrosoftGraphRecipient[]>]: The To: recipients for the thread. Returned only on $select.
          [Topic <String>]: The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated. Returned by default.
          [UniqueSenders <String[]>]: All the users that sent a message to this thread. Returned by default.
        [Topic <String>]: The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated.
        [UniqueSenders <String[]>]: All the users that sent a message to this Conversation.
      [CreatedDateTime <DateTime?>]: Timestamp of when the group was created. The value cannot be modified and is automatically populated when the group is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Read-only.
      [CreatedOnBehalfOf <IMicrosoftGraphDirectoryObject>]: directoryObject
      [Description <String>]: An optional description for the group. Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith) and $search.
      [DisplayName <String>]: The display name for the group. This property is required when a group is created and cannot be cleared during updates. Maximum length is 256 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values), $search, and $orderBy.
      [Drive <IMicrosoftGraphDrive>]: drive
      [Drives <IMicrosoftGraphDrive[]>]: The group's drives. Read-only.
      [Events <IMicrosoftGraphEvent[]>]: The group's calendar events.
      [ExpirationDateTime <DateTime?>]: Timestamp of when the group is set to expire. Is null for security groups but for Microsoft 365 groups, it represents when the group is set to expire as defined in the groupLifecyclePolicy. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.
      [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the group. Read-only. Nullable.
      [GroupLifecyclePolicies <IMicrosoftGraphGroupLifecyclePolicy[]>]: The collection of lifecycle policies for this group. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AlternateNotificationEmails <String>]: List of email address to send notifications for groups without owners. Multiple email address can be defined by separating email address with a semicolon.
        [GroupLifetimeInDays <Int32?>]: Number of days before a group expires and needs to be renewed. Once renewed, the group expiration is extended by the number of days defined.
        [ManagedGroupTypes <String>]: The group type for which the expiration policy applies. Possible values are All, Selected or None.
      [GroupTypes <String[]>]: Specifies the group type and its membership. If the collection contains Unified, the group is a Microsoft 365 group; otherwise, it's either a security group or distribution group. For details, see groups overview.If the collection includes DynamicMembership, the group has dynamic membership; otherwise, membership is static. Returned by default. Supports $filter (eq, not).
      [HasMembersWithLicenseErrors <Boolean?>]: Indicates whether there are members in this group that have license errors from its group-based license assignment. This property is never returned on a GET operation. You can use it as a $filter argument to get groups that have members with license errors (that is, filter for this property being true). See an example. Supports $filter (eq).
      [HideFromAddressLists <Boolean?>]: True if the group is not displayed in certain parts of the Outlook UI: the Address Book, address lists for selecting message recipients, and the Browse Groups dialog for searching groups; otherwise, false. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
      [HideFromOutlookClients <Boolean?>]: True if the group is not displayed in Outlook clients, such as Outlook for Windows and Outlook on the web; otherwise, false. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
      [IsArchived <Boolean?>]: When a group is associated with a team this property determines whether the team is in read-only mode.To read this property, use the /group/{groupId}/team endpoint or the Get team API. To update this property, use the archiveTeam and unarchiveTeam APIs.
      [IsAssignableToRole <Boolean?>]: Indicates whether this group can be assigned to an Azure Active Directory role or not. Optional. This property can only be set while creating the group and is immutable. If set to true, the securityEnabled property must also be set to true, visibility must be Hidden, and the group cannot be a dynamic group (that is, groupTypes cannot contain DynamicMembership). Only callers in Global Administrator and Privileged Role Administrator roles can set this property. The caller must also be assigned the RoleManagement.ReadWrite.Directory permission to set this property or update the membership of such groups. For more, see Using a group to manage Azure AD role assignmentsUsing this feature requires a Azure AD Premium P1 license. Returned by default. Supports $filter (eq, ne, not).
      [IsSubscribedByMail <Boolean?>]: Indicates whether the signed-in user is subscribed to receive email conversations. Default value is true. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
      [LicenseProcessingState <IMicrosoftGraphLicenseProcessingState>]: licenseProcessingState
        [(Any) <Object>]: This indicates any property can be added to this object.
        [State <String>]: 
      [Mail <String>]: The SMTP address for the group, for example, 'serviceadmins@contoso.onmicrosoft.com'. Returned by default. Read-only. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
      [MailEnabled <Boolean?>]: Specifies whether the group is mail-enabled. Required. Returned by default. Supports $filter (eq, ne, not).
      [MailNickname <String>]: The mail alias for the group, unique for Microsoft 365 groups in the organization. Maximum length is 64 characters. This property can contain only characters in the ASCII character set 0 - 127 except the following: @ () / [] ' ; : <> , SPACE. Required. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
      [MemberOf <IMicrosoftGraphDirectoryObject[]>]: Groups that this group is a member of. HTTP Methods: GET (supported for all groups). Read-only. Nullable. Supports $expand.
      [Members <IMicrosoftGraphDirectoryObject[]>]: The members of this group, who can be users, devices, other groups, or service principals. Supports the List members, Add member, and Remove member operations. Nullable. Supports $expand including nested $select. For example, /groups?$filter=startsWith(displayName,'Role')&$select=id,displayName&$expand=members($select=id,userPrincipalName,displayName).
      [MembersWithLicenseErrors <IMicrosoftGraphDirectoryObject[]>]: A list of group members with license errors from this group-based license assignment. Read-only.
      [MembershipRule <String>]: The rule that determines members for this group if the group is a dynamic group (groupTypes contains DynamicMembership). For more information about the syntax of the membership rule, see Membership Rules syntax. Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith).
      [MembershipRuleProcessingState <String>]: Indicates whether the dynamic membership processing is on or paused. Possible values are On or Paused. Returned by default. Supports $filter (eq, ne, not, in).
      [OnPremisesDomainName <String>]: 
      [OnPremisesLastSyncDateTime <DateTime?>]: Indicates the last time at which the group was synced with the on-premises directory.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Read-only. Supports $filter (eq, ne, not, ge, le, in).
      [OnPremisesNetBiosName <String>]: 
      [OnPremisesProvisioningErrors <IMicrosoftGraphOnPremisesProvisioningError[]>]: Errors when using Microsoft synchronization product during provisioning. Returned by default. Supports $filter (eq, not).
        [Category <String>]: Category of the provisioning error. Note: Currently, there is only one possible value. Possible value: PropertyConflict - indicates a property value is not unique. Other objects contain the same value for the property.
        [OccurredDateTime <DateTime?>]: The date and time at which the error occurred.
        [PropertyCausingError <String>]: Name of the directory property causing the error. Current possible values: UserPrincipalName or ProxyAddress
        [Value <String>]: Value of the property causing the error.
      [OnPremisesSamAccountName <String>]: Contains the on-premises SAM account name synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect.Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith). Read-only.
      [OnPremisesSecurityIdentifier <String>]: Contains the on-premises security identifier (SID) for the group that was synchronized from on-premises to the cloud. Returned by default. Supports $filter (eq including on null values). Read-only.
      [OnPremisesSyncEnabled <Boolean?>]: true if this group is synced from an on-premises directory; false if this group was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Returned by default. Read-only. Supports $filter (eq, ne, not, in, and eq on null values).
      [Onenote <IMicrosoftGraphOnenote>]: onenote
      [Owners <IMicrosoftGraphDirectoryObject[]>]: The owners of the group. Limited to 100 owners. Nullable. If this property is not specified when creating a Microsoft 365 group, the calling user is automatically assigned as the group owner.  Supports $filter (/$count eq 0, /$count ne 0, /$count eq 1, /$count ne 1). Supports $expand including nested $select. For example, /groups?$filter=startsWith(displayName,'Role')&$select=id,displayName&$expand=owners($select=id,userPrincipalName,displayName).
      [PermissionGrants <IMicrosoftGraphResourceSpecificPermissionGrant[]>]: The permission that has been granted for a group to a specific application. Supports $expand.
      [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
      [Photos <IMicrosoftGraphProfilePhoto[]>]: The profile photos owned by the group. Read-only. Nullable.
      [Planner <IMicrosoftGraphPlannerGroup>]: plannerGroup
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Plans <IMicrosoftGraphPlannerPlan[]>]: Read-only. Nullable. Returns the plannerPlans owned by the group.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Buckets <IMicrosoftGraphPlannerBucket[]>]: Read-only. Nullable. Collection of buckets in the plan.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Name <String>]: Name of the bucket.
            [OrderHint <String>]: Hint used to order items of this type in a list view. For details about the supported format, see Using order hints in Planner.
            [PlanId <String>]: Plan ID to which the bucket belongs.
            [Tasks <IMicrosoftGraphPlannerTask[]>]: Read-only. Nullable. The collection of tasks in the bucket.
              [Id <String>]: The unique idenfier for an entity. Read-only.
              [ActiveChecklistItemCount <Int32?>]: Number of checklist items with value set to false, representing incomplete items.
              [AppliedCategories <IMicrosoftGraphPlannerAppliedCategories>]: plannerAppliedCategories
                [(Any) <Object>]: This indicates any property can be added to this object.
              [AssignedToTaskBoardFormat <IMicrosoftGraphPlannerAssignedToTaskBoardTaskFormat>]: plannerAssignedToTaskBoardTaskFormat
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [OrderHintsByAssignee <IMicrosoftGraphPlannerOrderHintsByAssignee>]: plannerOrderHintsByAssignee
                  [(Any) <Object>]: This indicates any property can be added to this object.
                [UnassignedOrderHint <String>]: Hint value used to order the task on the AssignedTo view of the Task Board when the task is not assigned to anyone, or if the orderHintsByAssignee dictionary does not provide an order hint for the user the task is assigned to. The format is defined as outlined here.
              [AssigneePriority <String>]: Hint used to order items of this type in a list view. The format is defined as outlined here.
              [Assignments <IMicrosoftGraphPlannerAssignments>]: plannerAssignments
                [(Any) <Object>]: This indicates any property can be added to this object.
              [BucketId <String>]: Bucket ID to which the task belongs. The bucket needs to be in the plan that the task is in. It is 28 characters long and case-sensitive. Format validation is done on the service.
              [BucketTaskBoardFormat <IMicrosoftGraphPlannerBucketTaskBoardTaskFormat>]: plannerBucketTaskBoardTaskFormat
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [OrderHint <String>]: Hint used to order tasks in the bucket view of the task board. For details about the supported format, see Using order hints in Planner.
              [ChecklistItemCount <Int32?>]: Number of checklist items that are present on the task.
              [CompletedBy <IMicrosoftGraphIdentitySet>]: identitySet
              [CompletedDateTime <DateTime?>]: Read-only. Date and time at which the 'percentComplete' of the task is set to '100'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
              [ConversationThreadId <String>]: Thread ID of the conversation on the task. This is the ID of the conversation thread object created in the group.
              [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
              [CreatedDateTime <DateTime?>]: Read-only. Date and time at which the task is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
              [Details <IMicrosoftGraphPlannerTaskDetails>]: plannerTaskDetails
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [Checklist <IMicrosoftGraphPlannerChecklistItems>]: plannerChecklistItems
                  [(Any) <Object>]: This indicates any property can be added to this object.
                [Description <String>]: Description of the task.
                [PreviewType <String>]: plannerPreviewType
                [References <IMicrosoftGraphPlannerExternalReferences>]: plannerExternalReferences
                  [(Any) <Object>]: This indicates any property can be added to this object.
              [DueDateTime <DateTime?>]: Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
              [HasDescription <Boolean?>]: Read-only. Value is true if the details object of the task has a non-empty description and false otherwise.
              [OrderHint <String>]: Hint used to order items of this type in a list view. The format is defined as outlined here.
              [PercentComplete <Int32?>]: Percentage of task completion. When set to 100, the task is considered completed.
              [PlanId <String>]: Plan ID to which the task belongs.
              [PreviewType <String>]: plannerPreviewType
              [Priority <Int32?>]: Priority of the task. The valid range of values is between 0 and 10, with the increasing value being lower priority (0 has the highest priority and 10 has the lowest priority).  Currently, Planner interprets values 0 and 1 as 'urgent', 2, 3 and 4 as 'important', 5, 6, and 7 as 'medium', and 8, 9, and 10 as 'low'.  Additionally, Planner sets the value 1 for 'urgent', 3 for 'important', 5 for 'medium', and 9 for 'low'.
              [ProgressTaskBoardFormat <IMicrosoftGraphPlannerProgressTaskBoardTaskFormat>]: plannerProgressTaskBoardTaskFormat
                [(Any) <Object>]: This indicates any property can be added to this object.
                [Id <String>]: The unique idenfier for an entity. Read-only.
                [OrderHint <String>]: Hint value used to order the task on the progress view of the task board. For details about the supported format, see Using order hints in Planner.
              [ReferenceCount <Int32?>]: Number of external references that exist on the task.
              [StartDateTime <DateTime?>]: Date and time at which the task starts. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
              [Title <String>]: Title of the task.
          [Container <IMicrosoftGraphPlannerPlanContainer>]: plannerPlanContainer
            [(Any) <Object>]: This indicates any property can be added to this object.
            [ContainerId <String>]: The identifier of the resource that contains the plan. Optional.
            [Type <String>]: plannerContainerType
            [Url <String>]: The full canonical URL of the container. Optional.
          [CreatedBy <IMicrosoftGraphIdentitySet>]: identitySet
          [CreatedDateTime <DateTime?>]: Read-only. Date and time at which the plan is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
          [Details <IMicrosoftGraphPlannerPlanDetails>]: plannerPlanDetails
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [CategoryDescriptions <IMicrosoftGraphPlannerCategoryDescriptions>]: plannerCategoryDescriptions
              [(Any) <Object>]: This indicates any property can be added to this object.
              [Category1 <String>]: The label associated with Category 1
              [Category10 <String>]: The label associated with Category 10
              [Category11 <String>]: The label associated with Category 11
              [Category12 <String>]: The label associated with Category 12
              [Category13 <String>]: The label associated with Category 13
              [Category14 <String>]: The label associated with Category 14
              [Category15 <String>]: The label associated with Category 15
              [Category16 <String>]: The label associated with Category 16
              [Category17 <String>]: The label associated with Category 17
              [Category18 <String>]: The label associated with Category 18
              [Category19 <String>]: The label associated with Category 19
              [Category2 <String>]: The label associated with Category 2
              [Category20 <String>]: The label associated with Category 20
              [Category21 <String>]: The label associated with Category 21
              [Category22 <String>]: The label associated with Category 22
              [Category23 <String>]: The label associated with Category 23
              [Category24 <String>]: The label associated with Category 24
              [Category25 <String>]: The label associated with Category 25
              [Category3 <String>]: The label associated with Category 3
              [Category4 <String>]: The label associated with Category 4
              [Category5 <String>]: The label associated with Category 5
              [Category6 <String>]: The label associated with Category 6
              [Category7 <String>]: The label associated with Category 7
              [Category8 <String>]: The label associated with Category 8
              [Category9 <String>]: The label associated with Category 9
            [SharedWith <IMicrosoftGraphPlannerUserIds>]: plannerUserIds
              [(Any) <Object>]: This indicates any property can be added to this object.
          [Owner <String>]: 
          [Tasks <IMicrosoftGraphPlannerTask[]>]: Read-only. Nullable. Collection of tasks in the plan.
          [Title <String>]: Required. Title of the plan.
      [PreferredDataLocation <String>]: The preferred data location for the Microsoft 365 group. By default, the group inherits the group creator's preferred data location. To set this property, the calling user must be assigned one of the following Azure AD roles:  Global Administrator  User Account Administrator Directory Writer  Exchange Administrator  SharePoint Administrator  For more information about this property, see OneDrive Online Multi-Geo. Nullable. Returned by default.
      [PreferredLanguage <String>]: The preferred language for a Microsoft 365 group. Should follow ISO 639-1 Code; for example en-US. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
      [ProxyAddresses <String[]>]: Email addresses for the group that direct to the same group mailbox. For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. The any operator is required to filter expressions on multi-valued properties. Returned by default. Read-only. Not nullable. Supports $filter (eq, not, ge, le, startsWith, endsWith, /$count eq 0, /$count ne 0).
      [RejectedSenders <IMicrosoftGraphDirectoryObject[]>]: The list of users or groups that are not allowed to create posts or calendar events in this group. Nullable
      [RenewedDateTime <DateTime?>]: Timestamp of when the group was last renewed. This cannot be modified directly and is only updated via the renew service action. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.
      [SecurityEnabled <Boolean?>]: Specifies whether the group is a security group. Required. Returned by default. Supports $filter (eq, ne, not, in).
      [SecurityIdentifier <String>]: Security identifier of the group, used in Windows scenarios. Returned by default.
      [Settings <IMicrosoftGraphGroupSetting[]>]: Settings that can govern this group's behavior, like whether members can invite guest users to the group. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DisplayName <String>]: Display name of this group of settings, which comes from the associated template.
        [TemplateId <String>]: Unique identifier for the tenant-level groupSettingTemplates object that's been customized for this group-level settings object. Read-only.
        [Values <IMicrosoftGraphSettingValue[]>]: Collection of name-value pairs corresponding to the name and defaultValue properties in the referenced groupSettingTemplates object.
          [Name <String>]: Name of the setting (as defined by the groupSettingTemplate).
          [Value <String>]: Value of the setting.
      [Sites <IMicrosoftGraphSite[]>]: The list of SharePoint sites in this group. Access the default site with /sites/root.
      [Team <IMicrosoftGraphTeam>]: team
      [Theme <String>]: Specifies a Microsoft 365 group's color theme. Possible values are Teal, Purple, Green, Blue, Pink, Orange or Red. Returned by default.
      [Threads <IMicrosoftGraphConversationThread[]>]: The group's conversation threads. Nullable.
      [TransitiveMemberOf <IMicrosoftGraphDirectoryObject[]>]: The groups that a group is a member of, either directly and through nested membership. Nullable.
      [TransitiveMembers <IMicrosoftGraphDirectoryObject[]>]: The direct and transitive members of a group. Nullable.
      [UnseenCount <Int32?>]: Count of conversations that have received new posts since the signed-in user last visited the group. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
      [Visibility <String>]: Specifies the group join policy and group content visibility for groups. Possible values are: Private, Public, or HiddenMembership. HiddenMembership can be set only for Microsoft 365 groups, when the groups are created. It can't be updated later. Other values of visibility can be updated after group creation. If visibility value is not specified during group creation on Microsoft Graph, a security group is created as Private by default and Microsoft 365 group is Public. Groups assignable to roles are always Private. See group visibility options to learn more. Returned by default. Nullable.
    [GuestSettings <IMicrosoftGraphTeamGuestSettings>]: teamGuestSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [AllowCreateUpdateChannels <Boolean?>]: If set to true, guests can add and update channels.
      [AllowDeleteChannels <Boolean?>]: If set to true, guests can delete channels.
    [IncomingChannels <IMicrosoftGraphChannel[]>]: List of channels shared with the team.
    [InstalledApps <IMicrosoftGraphTeamsAppInstallation[]>]: The apps installed in this team.
    [InternalId <String>]: A unique ID for the team that has been used in a few places such as the audit log/Office 365 Management Activity API.
    [IsArchived <Boolean?>]: Whether this team is in read-only mode.
    [MemberSettings <IMicrosoftGraphTeamMemberSettings>]: teamMemberSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [AllowAddRemoveApps <Boolean?>]: If set to true, members can add and remove apps.
      [AllowCreatePrivateChannels <Boolean?>]: If set to true, members can add and update private channels.
      [AllowCreateUpdateChannels <Boolean?>]: If set to true, members can add and update channels.
      [AllowCreateUpdateRemoveConnectors <Boolean?>]: If set to true, members can add, update, and remove connectors.
      [AllowCreateUpdateRemoveTabs <Boolean?>]: If set to true, members can add, update, and remove tabs.
      [AllowDeleteChannels <Boolean?>]: If set to true, members can delete channels.
    [Members <IMicrosoftGraphConversationMember[]>]: Members and owners of the team.
    [MessagingSettings <IMicrosoftGraphTeamMessagingSettings>]: teamMessagingSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [AllowChannelMentions <Boolean?>]: If set to true, @channel mentions are allowed.
      [AllowOwnerDeleteMessages <Boolean?>]: If set to true, owners can delete any message.
      [AllowTeamMentions <Boolean?>]: If set to true, @team mentions are allowed.
      [AllowUserDeleteMessages <Boolean?>]: If set to true, users can delete their messages.
      [AllowUserEditMessages <Boolean?>]: If set to true, users can edit their messages.
    [Operations <IMicrosoftGraphTeamsAsyncOperation[]>]: The async operations that ran or are running on this team.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AttemptsCount <Int32?>]: Number of times the operation was attempted before being marked successful or failed.
      [CreatedDateTime <DateTime?>]: Time when the operation was created.
      [Error <IMicrosoftGraphOperationError>]: operationError
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Code <String>]: Operation error code.
        [Message <String>]: Operation error message.
      [LastActionDateTime <DateTime?>]: Time when the async operation was last updated.
      [OperationType <String>]: teamsAsyncOperationType
      [Status <String>]: teamsAsyncOperationStatus
      [TargetResourceId <String>]: The ID of the object that's created or modified as result of this async operation, typically a team.
      [TargetResourceLocation <String>]: The location of the object that's created or modified as result of this async operation. This URL should be treated as an opaque value and not parsed into its component paths.
    [PermissionGrants <IMicrosoftGraphResourceSpecificPermissionGrant[]>]: 
    [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
    [PrimaryChannel <IMicrosoftGraphChannel>]: channel
    [Schedule <IMicrosoftGraphSchedule>]: schedule
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Enabled <Boolean?>]: Indicates whether the schedule is enabled for the team. Required.
      [OfferShiftRequests <IMicrosoftGraphOfferShiftRequest[]>]: The offer requests for shifts in the schedule.
        [AssignedTo <String>]: scheduleChangeRequestActor
        [ManagerActionMessage <String>]: 
        [SenderMessage <String>]: 
        [State <String>]: scheduleChangeState
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [RecipientActionMessage <String>]: Custom message sent by recipient of the offer shift request.
        [RecipientUserId <String>]: User ID of the recipient of the offer shift request.
        [SenderShiftId <String>]: User ID of the sender of the offer shift request.
      [OfferShiftRequestsEnabled <Boolean?>]: Indicates whether offer shift requests are enabled for the schedule.
      [OpenShiftChangeRequests <IMicrosoftGraphOpenShiftChangeRequest[]>]: The open shift requests in the schedule.
        [AssignedTo <String>]: scheduleChangeRequestActor
        [ManagerActionMessage <String>]: 
        [SenderMessage <String>]: 
        [State <String>]: scheduleChangeState
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [OpenShiftId <String>]: ID for the open shift.
      [OpenShifts <IMicrosoftGraphOpenShift[]>]: The set of open shifts in a scheduling group in the schedule.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DraftOpenShift <IMicrosoftGraphOpenShiftItem>]: openShiftItem
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Activities <IMicrosoftGraphShiftActivity[]>]: An incremental part of a shift which can cover details of when and where an employee is during their shift. For example, an assignment or a scheduled break or lunch. Required.
            [Code <String>]: Customer defined code for the shiftActivity. Required.
            [DisplayName <String>]: The name of the shiftActivity. Required.
            [EndDateTime <DateTime?>]: The end date and time for the shiftActivity. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
            [IsPaid <Boolean?>]: Indicates whether the microsoft.graph.user should be paid for the activity during their shift. Required.
            [StartDateTime <DateTime?>]: The start date and time for the shiftActivity. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
            [Theme <String>]: scheduleEntityTheme
          [DisplayName <String>]: The shift label of the shiftItem.
          [Notes <String>]: The shift notes for the shiftItem.
          [EndDateTime <DateTime?>]: 
          [StartDateTime <DateTime?>]: 
          [Theme <String>]: scheduleEntityTheme
          [OpenSlotCount <Int32?>]: Count of the number of slots for the given open shift.
        [SchedulingGroupId <String>]: ID for the scheduling group that the open shift belongs to.
        [SharedOpenShift <IMicrosoftGraphOpenShiftItem>]: openShiftItem
      [OpenShiftsEnabled <Boolean?>]: Indicates whether open shifts are enabled for the schedule.
      [ProvisionStatus <String>]: operationStatus
      [SchedulingGroups <IMicrosoftGraphSchedulingGroup[]>]: The logical grouping of users in the schedule (usually by role).
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DisplayName <String>]: The display name for the schedulingGroup. Required.
        [UserIds <String[]>]: The list of user IDs that are a member of the schedulingGroup. Required.
      [Shifts <IMicrosoftGraphShift[]>]: The shifts in the schedule.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DraftShift <IMicrosoftGraphShiftItem>]: shiftItem
          [(Any) <Object>]: This indicates any property can be added to this object.
          [EndDateTime <DateTime?>]: 
          [StartDateTime <DateTime?>]: 
          [Theme <String>]: scheduleEntityTheme
          [Activities <IMicrosoftGraphShiftActivity[]>]: An incremental part of a shift which can cover details of when and where an employee is during their shift. For example, an assignment or a scheduled break or lunch. Required.
          [DisplayName <String>]: The shift label of the shiftItem.
          [Notes <String>]: The shift notes for the shiftItem.
        [SchedulingGroupId <String>]: ID of the scheduling group the shift is part of. Required.
        [SharedShift <IMicrosoftGraphShiftItem>]: shiftItem
        [UserId <String>]: ID of the user assigned to the shift. Required.
      [SwapShiftsChangeRequests <IMicrosoftGraphSwapShiftsChangeRequest[]>]: The swap requests for shifts in the schedule.
        [RecipientActionMessage <String>]: Custom message sent by recipient of the offer shift request.
        [RecipientUserId <String>]: User ID of the recipient of the offer shift request.
        [SenderShiftId <String>]: User ID of the sender of the offer shift request.
        [AssignedTo <String>]: scheduleChangeRequestActor
        [ManagerActionMessage <String>]: 
        [SenderMessage <String>]: 
        [State <String>]: scheduleChangeState
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [RecipientShiftId <String>]: ShiftId for the recipient user with whom the request is to swap.
      [SwapShiftsRequestsEnabled <Boolean?>]: Indicates whether swap shifts requests are enabled for the schedule.
      [TimeClockEnabled <Boolean?>]: Indicates whether time clock is enabled for the schedule.
      [TimeOffReasons <IMicrosoftGraphTimeOffReason[]>]: The set of reasons for a time off in the schedule.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DisplayName <String>]: The name of the timeOffReason. Required.
        [IconType <String>]: timeOffReasonIconType
        [IsActive <Boolean?>]: Indicates whether the timeOffReason can be used when creating new entities or updating existing ones. Required.
      [TimeOffRequests <IMicrosoftGraphTimeOffRequest[]>]: The time off requests in the schedule.
        [AssignedTo <String>]: scheduleChangeRequestActor
        [ManagerActionMessage <String>]: 
        [SenderMessage <String>]: 
        [State <String>]: scheduleChangeState
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [EndDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [StartDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        [TimeOffReasonId <String>]: The reason for the time off.
      [TimeOffRequestsEnabled <Boolean?>]: Indicates whether time off requests are enabled for the schedule.
      [TimeZone <String>]: Indicates the time zone of the schedule team using tz database format. Required.
      [TimesOff <IMicrosoftGraphTimeOff[]>]: The instances of times off in the schedule.
        [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DraftTimeOff <IMicrosoftGraphTimeOffItem>]: timeOffItem
          [(Any) <Object>]: This indicates any property can be added to this object.
          [EndDateTime <DateTime?>]: 
          [StartDateTime <DateTime?>]: 
          [Theme <String>]: scheduleEntityTheme
          [TimeOffReasonId <String>]: ID of the timeOffReason for this timeOffItem. Required.
        [SharedTimeOff <IMicrosoftGraphTimeOffItem>]: timeOffItem
        [UserId <String>]: ID of the user assigned to the timeOff. Required.
      [WorkforceIntegrationIds <String[]>]: 
    [Specialization <String>]: teamSpecialization
    [Summary <IMicrosoftGraphTeamSummary>]: teamSummary
      [(Any) <Object>]: This indicates any property can be added to this object.
      [GuestsCount <Int32?>]: Count of guests in a team.
      [MembersCount <Int32?>]: Count of members in a team.
      [OwnersCount <Int32?>]: Count of owners in a team.
    [Tags <IMicrosoftGraphTeamworkTag[]>]: The tags associated with the team.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Description <String>]: The description of the tag as it will appear to the user in Microsoft Teams. A teamworkTag can't have more than 200 teamworkTagMembers.
      [DisplayName <String>]: The name of the tag as it will appear to the user in Microsoft Teams.
      [MemberCount <Int32?>]: The number of users assigned to the tag.
      [Members <IMicrosoftGraphTeamworkTagMember[]>]: Users assigned to the tag.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [DisplayName <String>]: The member's display name.
        [TenantId <String>]: The ID of the tenant that the tag member is a part of.
        [UserId <String>]: The user ID of the member.
      [TagType <String>]: teamworkTagType
      [TeamId <String>]: ID of the team in which the tag is defined.
    [Template <IMicrosoftGraphTeamsTemplate>]: teamsTemplate
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
    [TenantId <String>]: The ID of the Azure Active Directory tenant.
    [Visibility <String>]: teamVisibilityType
    [WebUrl <String>]: A hyperlink that will go to the team in the Microsoft Teams client. This is the URL that you get when you right-click a team in the Microsoft Teams client and select Get link to team. This URL should be treated as an opaque blob, and not parsed.
  [LastPasswordChangeDateTime <DateTime?>]: The time when this Azure AD user last changed their password or when their password was created, whichever date the latest action was performed. The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned only on $select.
  [LegalAgeGroupClassification <String>]: Used by enterprise applications to determine the legal age group of the user. This property is read-only and calculated based on ageGroup and consentProvidedForMinor properties. Allowed values: null, MinorWithOutParentalConsent, MinorWithParentalConsent, MinorNoParentalConsentRequired, NotAdult and Adult. Refer to the legal age group property definitions for further information. Returned only on $select.
  [LicenseAssignmentStates <IMicrosoftGraphLicenseAssignmentState[]>]: State of license assignments for this user. Also indicates licenses that are directly-assigned and those that the user has inherited through group memberships. Read-only. Returned only on $select.
    [AssignedByGroup <String>]: 
    [DisabledPlans <String[]>]: 
    [Error <String>]: 
    [LastUpdatedDateTime <DateTime?>]: 
    [SkuId <String>]: 
    [State <String>]: 
  [LicenseDetails <IMicrosoftGraphLicenseDetails[]>]: A collection of this user's license details. Read-only.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ServicePlans <IMicrosoftGraphServicePlanInfo[]>]: Information about the service plans assigned with the license. Read-only, Not nullable
      [AppliesTo <String>]: The object the service plan can be assigned to. The possible values are:User - service plan can be assigned to individual users.Company - service plan can be assigned to the entire tenant.
      [ProvisioningStatus <String>]: The provisioning status of the service plan. The possible values are:Success - Service is fully provisioned.Disabled - Service has been disabled.ErrorStatus - The service plan has not been provisioned and is in an error state.PendingInput - Service is not yet provisioned; awaiting service confirmation.PendingActivation - Service is provisioned but requires explicit activation by administrator (for example, Intune_O365 service plan)PendingProvisioning - Microsoft has added a new service to the product SKU and it has not been activated in the tenant, yet.
      [ServicePlanId <String>]: The unique identifier of the service plan.
      [ServicePlanName <String>]: The name of the service plan.
    [SkuId <String>]: Unique identifier (GUID) for the service SKU. Equal to the skuId property on the related SubscribedSku object. Read-only
    [SkuPartNumber <String>]: Unique SKU display name. Equal to the skuPartNumber on the related SubscribedSku object; for example: 'AAD_Premium'. Read-only
  [Mail <String>]: The SMTP address for the user, for example, jeff@contoso.onmicrosoft.com. Changes to this property will also update the user's proxyAddresses collection to include the value as an SMTP address. This property cannot contain accent characters.  NOTE: We do not recommend updating this property for Azure AD B2C user profiles. Use the otherMails property instead. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, endsWith, and eq on null values).
  [MailFolders <IMicrosoftGraphMailFolder[]>]: The user's mail folders. Read-only. Nullable.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ChildFolderCount <Int32?>]: The number of immediate child mailFolders in the current mailFolder.
    [ChildFolders <IMicrosoftGraphMailFolder[]>]: The collection of child folders in the mailFolder.
    [DisplayName <String>]: The mailFolder's display name.
    [IsHidden <Boolean?>]: Indicates whether the mailFolder is hidden. This property can be set only when creating the folder. Find more information in Hidden mail folders.
    [MessageRules <IMicrosoftGraphMessageRule[]>]: The collection of rules that apply to the user's Inbox folder.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Actions <IMicrosoftGraphMessageRuleActions>]: messageRuleActions
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AssignCategories <String[]>]: A list of categories to be assigned to a message.
        [CopyToFolder <String>]: The ID of a folder that a message is to be copied to.
        [Delete <Boolean?>]: Indicates whether a message should be moved to the Deleted Items folder.
        [ForwardAsAttachmentTo <IMicrosoftGraphRecipient[]>]: The email addresses of the recipients to which a message should be forwarded as an attachment.
        [ForwardTo <IMicrosoftGraphRecipient[]>]: The email addresses of the recipients to which a message should be forwarded.
        [MarkAsRead <Boolean?>]: Indicates whether a message should be marked as read.
        [MarkImportance <String>]: importance
        [MoveToFolder <String>]: The ID of the folder that a message will be moved to.
        [PermanentDelete <Boolean?>]: Indicates whether a message should be permanently deleted and not saved to the Deleted Items folder.
        [RedirectTo <IMicrosoftGraphRecipient[]>]: The email addresses to which a message should be redirected.
        [StopProcessingRules <Boolean?>]: Indicates whether subsequent rules should be evaluated.
      [Conditions <IMicrosoftGraphMessageRulePredicates>]: messageRulePredicates
        [(Any) <Object>]: This indicates any property can be added to this object.
        [BodyContains <String[]>]: Represents the strings that should appear in the body of an incoming message in order for the condition or exception to apply.
        [BodyOrSubjectContains <String[]>]: Represents the strings that should appear in the body or subject of an incoming message in order for the condition or exception to apply.
        [Categories <String[]>]: Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply.
        [FromAddresses <IMicrosoftGraphRecipient[]>]: Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply.
        [HasAttachments <Boolean?>]: Indicates whether an incoming message must have attachments in order for the condition or exception to apply.
        [HeaderContains <String[]>]: Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply.
        [Importance <String>]: importance
        [IsApprovalRequest <Boolean?>]: Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.
        [IsAutomaticForward <Boolean?>]: Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.
        [IsAutomaticReply <Boolean?>]: Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.
        [IsEncrypted <Boolean?>]: Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.
        [IsMeetingRequest <Boolean?>]: Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.
        [IsMeetingResponse <Boolean?>]: Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.
        [IsNonDeliveryReport <Boolean?>]: Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.
        [IsPermissionControlled <Boolean?>]: Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception to apply.
        [IsReadReceipt <Boolean?>]: Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.
        [IsSigned <Boolean?>]: Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.
        [IsVoicemail <Boolean?>]: Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.
        [MessageActionFlag <String>]: messageActionFlag
        [NotSentToMe <Boolean?>]: Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or exception to apply.
        [RecipientContains <String[]>]: Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order for the condition or exception to apply.
        [SenderContains <String[]>]: Represents the strings that appear in the from property of an incoming message in order for the condition or exception to apply.
        [Sensitivity <String>]: sensitivity
        [SentCcMe <Boolean?>]: Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the condition or exception to apply.
        [SentOnlyToMe <Boolean?>]: Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition or exception to apply.
        [SentToAddresses <IMicrosoftGraphRecipient[]>]: Represents the email addresses that an incoming message must have been sent to in order for the condition or exception to apply.
        [SentToMe <Boolean?>]: Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the condition or exception to apply.
        [SentToOrCcMe <Boolean?>]: Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message in order for the condition or exception to apply.
        [SubjectContains <String[]>]: Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply.
        [WithinSizeRange <IMicrosoftGraphSizeRange>]: sizeRange
          [(Any) <Object>]: This indicates any property can be added to this object.
          [MaximumSize <Int32?>]: The maximum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.
          [MinimumSize <Int32?>]: The minimum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.
      [DisplayName <String>]: The display name of the rule.
      [Exceptions <IMicrosoftGraphMessageRulePredicates>]: messageRulePredicates
      [HasError <Boolean?>]: Indicates whether the rule is in an error condition. Read-only.
      [IsEnabled <Boolean?>]: Indicates whether the rule is enabled to be applied to messages.
      [IsReadOnly <Boolean?>]: Indicates if the rule is read-only and cannot be modified or deleted by the rules REST API.
      [Sequence <Int32?>]: Indicates the order in which the rule is executed, among other rules.
    [Messages <IMicrosoftGraphMessage[]>]: The collection of messages in the mailFolder.
      [Categories <String[]>]: The categories associated with the item
      [ChangeKey <String>]: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.
      [CreatedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Attachments <IMicrosoftGraphAttachment[]>]: The fileAttachment and itemAttachment attachments for the message.
      [BccRecipients <IMicrosoftGraphRecipient[]>]: The Bcc: recipients for the message.
      [Body <IMicrosoftGraphItemBody>]: itemBody
      [BodyPreview <String>]: The first 255 characters of the message body. It is in text format.
      [CcRecipients <IMicrosoftGraphRecipient[]>]: The Cc: recipients for the message.
      [ConversationId <String>]: The ID of the conversation the email belongs to.
      [ConversationIndex <Byte[]>]: Indicates the position of the message within the conversation.
      [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the message. Nullable.
      [Flag <IMicrosoftGraphFollowupFlag>]: followupFlag
        [(Any) <Object>]: This indicates any property can be added to this object.
        [CompletedDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [DueDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [FlagStatus <String>]: followupFlagStatus
        [StartDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
      [From <IMicrosoftGraphRecipient>]: recipient
      [HasAttachments <Boolean?>]: Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>.
      [Importance <String>]: importance
      [InferenceClassification <String>]: inferenceClassificationType
      [InternetMessageHeaders <IMicrosoftGraphInternetMessageHeader[]>]: 
        [Name <String>]: Represents the key in a key-value pair.
        [Value <String>]: The value in a key-value pair.
      [InternetMessageId <String>]: 
      [IsDeliveryReceiptRequested <Boolean?>]: 
      [IsDraft <Boolean?>]: 
      [IsRead <Boolean?>]: 
      [IsReadReceiptRequested <Boolean?>]: 
      [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the message. Nullable.
      [ParentFolderId <String>]: 
      [ReceivedDateTime <DateTime?>]: 
      [ReplyTo <IMicrosoftGraphRecipient[]>]: 
      [Sender <IMicrosoftGraphRecipient>]: recipient
      [SentDateTime <DateTime?>]: 
      [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the message. Nullable.
      [Subject <String>]: 
      [ToRecipients <IMicrosoftGraphRecipient[]>]: 
      [UniqueBody <IMicrosoftGraphItemBody>]: itemBody
      [WebLink <String>]: 
    [MultiValueExtendedProperties <IMicrosoftGraphMultiValueLegacyExtendedProperty[]>]: The collection of multi-value extended properties defined for the mailFolder. Read-only. Nullable.
    [ParentFolderId <String>]: The unique identifier for the mailFolder's parent mailFolder.
    [SingleValueExtendedProperties <IMicrosoftGraphSingleValueLegacyExtendedProperty[]>]: The collection of single-value extended properties defined for the mailFolder. Read-only. Nullable.
    [TotalItemCount <Int32?>]: The number of items in the mailFolder.
    [UnreadItemCount <Int32?>]: The number of items in the mailFolder marked as unread.
  [MailNickname <String>]: The mail alias for the user. This property must be specified when a user is created. Maximum length is 64 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [MailboxSettings <IMicrosoftGraphMailboxSettings>]: mailboxSettings
    [(Any) <Object>]: This indicates any property can be added to this object.
    [ArchiveFolder <String>]: Folder ID of an archive folder for the user.
    [AutomaticRepliesSetting <IMicrosoftGraphAutomaticRepliesSetting>]: automaticRepliesSetting
      [(Any) <Object>]: This indicates any property can be added to this object.
      [ExternalAudience <String>]: externalAudienceScope
      [ExternalReplyMessage <String>]: The automatic reply to send to the specified external audience, if Status is AlwaysEnabled or Scheduled.
      [InternalReplyMessage <String>]: The automatic reply to send to the audience internal to the signed-in user's organization, if Status is AlwaysEnabled or Scheduled.
      [ScheduledEndDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
      [ScheduledStartDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
      [Status <String>]: automaticRepliesStatus
    [DateFormat <String>]: The date format for the user's mailbox.
    [DelegateMeetingMessageDeliveryOptions <String>]: delegateMeetingMessageDeliveryOptions
    [Language <IMicrosoftGraphLocaleInfo>]: localeInfo
      [(Any) <Object>]: This indicates any property can be added to this object.
      [DisplayName <String>]: A name representing the user's locale in natural language, for example, 'English (United States)'.
      [Locale <String>]: A locale representation for the user, which includes the user's preferred language and country/region. For example, 'en-us'. The language component follows 2-letter codes as defined in ISO 639-1, and the country component follows 2-letter codes as defined in ISO 3166-1 alpha-2.
    [TimeFormat <String>]: The time format for the user's mailbox.
    [TimeZone <String>]: The default time zone for the user's mailbox.
    [UserPurpose <String>]: userPurpose
    [WorkingHours <IMicrosoftGraphWorkingHours>]: workingHours
      [(Any) <Object>]: This indicates any property can be added to this object.
      [DaysOfWeek <String[]>]: The days of the week on which the user works.
      [EndTime <String>]: The time of the day that the user stops working.
      [StartTime <String>]: The time of the day that the user starts working.
      [TimeZone <IMicrosoftGraphTimeZoneBase>]: timeZoneBase
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Name <String>]: The name of a time zone. It can be a standard time zone name such as 'Hawaii-Aleutian Standard Time', or 'Customized Time Zone' for a custom time zone.
  [ManagedAppRegistrations <IMicrosoftGraphManagedAppRegistration[]>]: Zero or more managed app registrations that belong to the user.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [ApplicationVersion <String>]: App version
    [AppliedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policys already applied on the registered app when it last synchronized with managment service.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [CreatedDateTime <DateTime?>]: The date and time the policy was created.
      [Description <String>]: The policy's description.
      [DisplayName <String>]: Policy display name.
      [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
      [Version <String>]: Version of the entity.
    [CreatedDateTime <DateTime?>]: Date and time of creation
    [DeviceName <String>]: Host device name
    [DeviceTag <String>]: App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.
    [DeviceType <String>]: Host device type
    [FlaggedReasons <ManagedAppFlaggedReason[]>]: Zero or more reasons an app registration is flagged. E.g. app running on rooted device
    [IntendedPolicies <IMicrosoftGraphManagedAppPolicy[]>]: Zero or more policies admin intended for the app as of now.
    [LastSyncDateTime <DateTime?>]: Date and time of last the app synced with management service.
    [ManagementSdkVersion <String>]: App management SDK version
    [Operations <IMicrosoftGraphManagedAppOperation[]>]: Zero or more long running operations triggered on the app registration.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DisplayName <String>]: The operation name.
      [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
      [State <String>]: The current state of the operation
      [Version <String>]: Version of the entity.
    [PlatformVersion <String>]: Operating System version
    [UserId <String>]: The user Id to who this app registration belongs.
    [Version <String>]: Version of the entity.
  [ManagedDevices <IMicrosoftGraphManagedDevice[]>]: The managed devices associated with the user.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ComplianceState <ComplianceState?>]: Compliance state.
    [ConfigurationManagerClientEnabledFeatures <IMicrosoftGraphConfigurationManagerClientEnabledFeatures>]: configuration Manager client enabled features
      [(Any) <Object>]: This indicates any property can be added to this object.
      [CompliancePolicy <Boolean?>]: Whether compliance policy is managed by Intune
      [DeviceConfiguration <Boolean?>]: Whether device configuration is managed by Intune
      [Inventory <Boolean?>]: Whether inventory is managed by Intune
      [ModernApps <Boolean?>]: Whether modern application is managed by Intune
      [ResourceAccess <Boolean?>]: Whether resource access is managed by Intune
      [WindowsUpdateForBusiness <Boolean?>]: Whether Windows Update for Business is managed by Intune
    [DeviceCategory <IMicrosoftGraphDeviceCategory>]: Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Description <String>]: Optional description for the device category.
      [DisplayName <String>]: Display name for the device category.
    [DeviceCompliancePolicyStates <IMicrosoftGraphDeviceCompliancePolicyState[]>]: Device compliance policy states for this device.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DisplayName <String>]: The name of the policy for this policyBase
      [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
      [SettingCount <Int32?>]: Count of how many setting a policy holds
      [SettingStates <IMicrosoftGraphDeviceCompliancePolicySettingState[]>]: 
        [CurrentValue <String>]: Current value of setting on device
        [ErrorCode <Int64?>]: Error code for the setting
        [ErrorDescription <String>]: Error description
        [InstanceDisplayName <String>]: Name of setting instance that is being reported.
        [Setting <String>]: The setting that is being reported
        [SettingName <String>]: Localized/user friendly setting name that is being reported
        [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
          [DisplayName <String>]: Not yet documented
          [Id <String>]: Not yet documented
          [SourceType <String>]: settingSourceType
        [State <String>]: complianceStatus
        [UserEmail <String>]: UserEmail
        [UserId <String>]: UserId
        [UserName <String>]: UserName
        [UserPrincipalName <String>]: UserPrincipalName.
      [State <String>]: complianceStatus
      [Version <Int32?>]: The version of the policy
    [DeviceConfigurationStates <IMicrosoftGraphDeviceConfigurationState[]>]: Device configuration states for this device.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DisplayName <String>]: The name of the policy for this policyBase
      [PlatformType <PolicyPlatformType?>]: Supported platform types for policies.
      [SettingCount <Int32?>]: Count of how many setting a policy holds
      [SettingStates <IMicrosoftGraphDeviceConfigurationSettingState[]>]: 
        [CurrentValue <String>]: Current value of setting on device
        [ErrorCode <Int64?>]: Error code for the setting
        [ErrorDescription <String>]: Error description
        [InstanceDisplayName <String>]: Name of setting instance that is being reported.
        [Setting <String>]: The setting that is being reported
        [SettingName <String>]: Localized/user friendly setting name that is being reported
        [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
        [State <String>]: complianceStatus
        [UserEmail <String>]: UserEmail
        [UserId <String>]: UserId
        [UserName <String>]: UserName
        [UserPrincipalName <String>]: UserPrincipalName.
      [State <String>]: complianceStatus
      [Version <Int32?>]: The version of the policy
    [DeviceEnrollmentType <DeviceEnrollmentType?>]: Possible ways of adding a mobile device to management.
    [DeviceHealthAttestationState <IMicrosoftGraphDeviceHealthAttestationState>]: deviceHealthAttestationState
      [(Any) <Object>]: This indicates any property can be added to this object.
      [AttestationIdentityKey <String>]: TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.
      [BitLockerStatus <String>]: On or Off of BitLocker Drive Encryption
      [BootAppSecurityVersion <String>]: The security version number of the Boot Application
      [BootDebugging <String>]: When bootDebugging is enabled, the device is used in development and testing
      [BootManagerSecurityVersion <String>]: The security version number of the Boot Application
      [BootManagerVersion <String>]: The version of the Boot Manager
      [BootRevisionListInfo <String>]: The Boot Revision List that was loaded during initial boot on the attested device
      [CodeIntegrity <String>]: When code integrity is enabled, code execution is restricted to integrity verified code
      [CodeIntegrityCheckVersion <String>]: The version of the Boot Manager
      [CodeIntegrityPolicy <String>]: The Code Integrity policy that is controlling the security of the boot environment
      [ContentNamespaceUrl <String>]: The DHA report version. (Namespace version)
      [ContentVersion <String>]: The HealthAttestation state schema version
      [DataExcutionPolicy <String>]: DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
      [DeviceHealthAttestationStatus <String>]: The DHA report version. (Namespace version)
      [EarlyLaunchAntiMalwareDriverProtection <String>]: ELAM provides protection for the computers in your network when they start up
      [HealthAttestationSupportedStatus <String>]: This attribute indicates if DHA is supported for the device
      [HealthStatusMismatchInfo <String>]: This attribute appears if DHA-Service detects an integrity issue
      [IssuedDateTime <DateTime?>]: The DateTime when device was evaluated or issued to MDM
      [LastUpdateDateTime <String>]: The Timestamp of the last update.
      [OperatingSystemKernelDebugging <String>]: When operatingSystemKernelDebugging is enabled, the device is used in development and testing
      [OperatingSystemRevListInfo <String>]: The Operating System Revision List that was loaded during initial boot on the attested device
      [Pcr0 <String>]: The measurement that is captured in PCR[0]
      [PcrHashAlgorithm <String>]: Informational attribute that identifies the HASH algorithm that was used by TPM
      [ResetCount <Int64?>]: The number of times a PC device has hibernated or resumed
      [RestartCount <Int64?>]: The number of times a PC device has rebooted
      [SafeMode <String>]: Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
      [SecureBoot <String>]: When Secure Boot is enabled, the core components must have the correct cryptographic signatures
      [SecureBootConfigurationPolicyFingerPrint <String>]: Fingerprint of the Custom Secure Boot Configuration Policy
      [TestSigning <String>]: When test signing is allowed, the device does not enforce signature validation during boot
      [TpmVersion <String>]: The security version number of the Boot Application
      [VirtualSecureMode <String>]: VSM is a container that protects high value assets from a compromised kernel
      [WindowsPe <String>]: Operating system running with limited services that is used to prepare a computer for Windows
    [DeviceRegistrationState <DeviceRegistrationState?>]: Device registration status.
    [ExchangeAccessState <DeviceManagementExchangeAccessState?>]: Device Exchange Access State.
    [ExchangeAccessStateReason <DeviceManagementExchangeAccessStateReason?>]: Device Exchange Access State Reason.
    [LogCollectionRequests <IMicrosoftGraphDeviceLogCollectionResponse[]>]: List of log collection requests
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [EnrolledByUser <String>]: The User Principal Name (UPN) of the user that enrolled the device.
      [ExpirationDateTimeUtc <DateTime?>]: The DateTime of the expiration of the logs.
      [InitiatedByUserPrincipalName <String>]: The UPN for who initiated the request.
      [ManagedDeviceId <String>]: Indicates Intune device unique identifier.
      [ReceivedDateTimeUtc <DateTime?>]: The DateTime the request was received.
      [RequestedDateTimeUtc <DateTime?>]: The DateTime of the request.
      [SizeInKb <Double?>]: The size of the logs in KB. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
      [Status <AppLogUploadState?>]: AppLogUploadStatus
    [ManagedDeviceName <String>]: Automatically generated name to identify a device. Can be overwritten to a user friendly name.
    [ManagedDeviceOwnerType <ManagedDeviceOwnerType?>]: Owner type of device.
    [ManagementAgent <ManagementAgentType?>]: managementAgentType
    [Notes <String>]: Notes on the device created by IT Admin. Default is null. To retrieve actual values GET call needs to be made, with device id and included in select parameter. Supports: $select. $Search is not supported.
    [PartnerReportedThreatState <ManagedDevicePartnerReportedHealthState?>]: Available health states for the Device Health API
    [Users <IMicrosoftGraphUser[]>]: The primary users associated with the managed device.
    [WindowsProtectionState <IMicrosoftGraphWindowsProtectionState>]: Device protection status entity.
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AntiMalwareVersion <String>]: Current anti malware version
      [DetectedMalwareState <IMicrosoftGraphWindowsDeviceMalwareState[]>]: Device malware list
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AdditionalInformationUrl <String>]: Information URL to learn more about the malware
        [Category <WindowsMalwareCategory?>]: Malware category id
        [DetectionCount <Int32?>]: Number of times the malware is detected
        [DisplayName <String>]: Malware name
        [ExecutionState <WindowsMalwareExecutionState?>]: Malware execution status
        [InitialDetectionDateTime <DateTime?>]: Initial detection datetime of the malware
        [LastStateChangeDateTime <DateTime?>]: The last time this particular threat was changed
        [Severity <WindowsMalwareSeverity?>]: Malware severity
        [State <WindowsMalwareState?>]: Malware current status
        [ThreatState <WindowsMalwareThreatState?>]: Malware threat status
      [DeviceState <WindowsDeviceHealthState?>]: Computer endpoint protection state
      [EngineVersion <String>]: Current endpoint protection engine's version
      [FullScanOverdue <Boolean?>]: When TRUE indicates full scan is overdue, when FALSE indicates full scan is not overdue. Defaults to setting on client device.
      [FullScanRequired <Boolean?>]: When TRUE indicates full scan is required, when FALSE indicates full scan is not required. Defaults to setting on client device.
      [IsVirtualMachine <Boolean?>]: When TRUE indicates the device is a virtual machine, when FALSE indicates the device is not a virtual machine. Defaults to setting on client device.
      [LastFullScanDateTime <DateTime?>]: Last quick scan datetime
      [LastFullScanSignatureVersion <String>]: Last full scan signature version
      [LastQuickScanDateTime <DateTime?>]: Last quick scan datetime
      [LastQuickScanSignatureVersion <String>]: Last quick scan signature version
      [LastReportedDateTime <DateTime?>]: Last device health status reported time
      [MalwareProtectionEnabled <Boolean?>]: When TRUE indicates anti malware is enabled when FALSE indicates anti malware is not enabled.
      [NetworkInspectionSystemEnabled <Boolean?>]: When TRUE indicates network inspection system enabled, when FALSE indicates network inspection system is not enabled. Defaults to setting on client device.
      [ProductStatus <WindowsDefenderProductStatus?>]: Product Status of Windows Defender
      [QuickScanOverdue <Boolean?>]: When TRUE indicates quick scan is overdue, when FALSE indicates quick scan is not overdue. Defaults to setting on client device.
      [RealTimeProtectionEnabled <Boolean?>]: When TRUE indicates real time protection is enabled, when FALSE indicates real time protection is not enabled. Defaults to setting on client device.
      [RebootRequired <Boolean?>]: When TRUE indicates reboot is required, when FALSE indicates when TRUE indicates reboot is not required. Defaults to setting on client device.
      [SignatureUpdateOverdue <Boolean?>]: When TRUE indicates signature is out of date, when FALSE indicates signature is not out of date. Defaults to setting on client device.
      [SignatureVersion <String>]: Current malware definitions version
      [TamperProtectionEnabled <Boolean?>]: When TRUE indicates the Windows Defender tamper protection feature is enabled, when FALSE indicates the Windows Defender tamper protection feature is not enabled. Defaults to setting on client device.
  [Manager <IMicrosoftGraphDirectoryObject>]: directoryObject
  [MemberOf <IMicrosoftGraphDirectoryObject[]>]: The groups and directory roles that the user is a member of. Read-only. Nullable. Supports $expand.
  [Messages <IMicrosoftGraphMessage[]>]: The messages in a mailbox or folder. Read-only. Nullable.
  [MobilePhone <String>]: The primary cellular telephone number for the user. Read-only for users synced from on-premises directory. Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values) and $search.
  [MySite <String>]: The URL for the user's personal site. Returned only on $select.
  [Oauth2PermissionGrants <IMicrosoftGraphOAuth2PermissionGrant[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ClientId <String>]: The object id (not appId) of the client service principal for the application which is authorized to act on behalf of a signed-in user when accessing an API. Required. Supports $filter (eq only).
    [ConsentType <String>]: Indicates if authorization is granted for the client application to impersonate all users or only a specific user. AllPrincipals indicates authorization to impersonate all users. Principal indicates authorization to impersonate a specific user. Consent on behalf of all users can be granted by an administrator. Non-admin users may be authorized to consent on behalf of themselves in some cases, for some delegated permissions. Required. Supports $filter (eq only).
    [PrincipalId <String>]: The id of the user on behalf of whom the client is authorized to access the resource, when consentType is Principal. If consentType is AllPrincipals this value is null. Required when consentType is Principal. Supports $filter (eq only).
    [ResourceId <String>]: The id of the resource service principal to which access is authorized. This identifies the API which the client is authorized to attempt to call on behalf of a signed-in user. Supports $filter (eq only).
    [Scope <String>]: A space-separated list of the claim values for delegated permissions which should be included in access tokens for the resource application (the API). For example, openid User.Read GroupMember.Read.All. Each claim value should match the value field of one of the delegated permissions defined by the API, listed in the oauth2PermissionScopes property of the resource service principal. Must not exceed 3850 characters in length.
  [OfficeLocation <String>]: The office location in the user's place of business. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [OnPremisesDistinguishedName <String>]: Contains the on-premises Active Directory distinguished name or DN. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select.
  [OnPremisesDomainName <String>]: Contains the on-premises domainFQDN, also called dnsDomainName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select.
  [OnPremisesExtensionAttributes <IMicrosoftGraphOnPremisesExtensionAttributes>]: onPremisesExtensionAttributes
    [(Any) <Object>]: This indicates any property can be added to this object.
    [ExtensionAttribute1 <String>]: First customizable extension attribute.
    [ExtensionAttribute10 <String>]: Tenth customizable extension attribute.
    [ExtensionAttribute11 <String>]: Eleventh customizable extension attribute.
    [ExtensionAttribute12 <String>]: Twelfth customizable extension attribute.
    [ExtensionAttribute13 <String>]: Thirteenth customizable extension attribute.
    [ExtensionAttribute14 <String>]: Fourteenth customizable extension attribute.
    [ExtensionAttribute15 <String>]: Fifteenth customizable extension attribute.
    [ExtensionAttribute2 <String>]: Second customizable extension attribute.
    [ExtensionAttribute3 <String>]: Third customizable extension attribute.
    [ExtensionAttribute4 <String>]: Fourth customizable extension attribute.
    [ExtensionAttribute5 <String>]: Fifth customizable extension attribute.
    [ExtensionAttribute6 <String>]: Sixth customizable extension attribute.
    [ExtensionAttribute7 <String>]: Seventh customizable extension attribute.
    [ExtensionAttribute8 <String>]: Eighth customizable extension attribute.
    [ExtensionAttribute9 <String>]: Ninth customizable extension attribute.
  [OnPremisesImmutableId <String>]: This property is used to associate an on-premises Active Directory user account to their Azure AD user object. This property must be specified when creating a new user account in the Graph if you are using a federated domain for the user's userPrincipalName (UPN) property. NOTE: The $ and _ characters cannot be used when specifying this property. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in)..
  [OnPremisesLastSyncDateTime <DateTime?>]: Indicates the last time at which the object was synced with the on-premises directory; for example: 2013-02-16T03:04:54Z. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in).
  [OnPremisesProvisioningErrors <IMicrosoftGraphOnPremisesProvisioningError[]>]: Errors when using Microsoft synchronization product during provisioning. Returned only on $select. Supports $filter (eq, not, ge, le).
  [OnPremisesSamAccountName <String>]: Contains the on-premises samAccountName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith).
  [OnPremisesSecurityIdentifier <String>]: Contains the on-premises security identifier (SID) for the user that was synchronized from on-premises to the cloud. Read-only. Returned only on $select.  Supports $filter (eq including on null values).
  [OnPremisesSyncEnabled <Boolean?>]: true if this user object is currently being synced from an on-premises Active Directory (AD); otherwise the user isn't being synced and can be managed in Azure Active Directory (Azure AD). Read-only. Returned only on $select. Supports $filter (eq, ne, not, in, and eq on null values).
  [OnPremisesUserPrincipalName <String>]: Contains the on-premises userPrincipalName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith).
  [Onenote <IMicrosoftGraphOnenote>]: onenote
  [OnlineMeetings <IMicrosoftGraphOnlineMeeting[]>]: Information about a meeting, including the URL used to join a meeting, the attendees' list, and the description.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AllowAttendeeToEnableCamera <Boolean?>]: Indicates whether attendees can turn on their camera.
    [AllowAttendeeToEnableMic <Boolean?>]: Indicates whether attendees can turn on their microphone.
    [AllowMeetingChat <String>]: meetingChatMode
    [AllowParticipantsToChangeName <Boolean?>]: 
    [AllowTeamworkReactions <Boolean?>]: Indicates whether Teams reactions are enabled for the meeting.
    [AllowedPresenters <String>]: onlineMeetingPresenters
    [AttendanceReports <IMicrosoftGraphMeetingAttendanceReport[]>]: The attendance reports of an online meeting. Read-only.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AttendanceRecords <IMicrosoftGraphAttendanceRecord[]>]: List of attendance records of an attendance report. Read-only.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AttendanceIntervals <IMicrosoftGraphAttendanceInterval[]>]: List of time periods between joining and leaving a meeting.
          [DurationInSeconds <Int32?>]: Duration of the meeting interval in seconds; that is, the difference between joinDateTime and leaveDateTime.
          [JoinDateTime <DateTime?>]: The time the attendee joined in UTC.
          [LeaveDateTime <DateTime?>]: The time the attendee left in UTC.
        [EmailAddress <String>]: Email address of the user associated with this attendance record.
        [Identity <IMicrosoftGraphIdentity>]: identity
        [Role <String>]: Role of the attendee. Possible values are: None, Attendee, Presenter, and Organizer.
        [TotalAttendanceInSeconds <Int32?>]: Total duration of the attendances in seconds.
      [MeetingEndDateTime <DateTime?>]: UTC time when the meeting ended. Read-only.
      [MeetingStartDateTime <DateTime?>]: UTC time when the meeting started. Read-only.
      [TotalParticipantCount <Int32?>]: Total number of participants. Read-only.
    [AttendeeReport <Byte[]>]: The content stream of the attendee report of a Microsoft Teams live event. Read-only.
    [AudioConferencing <IMicrosoftGraphAudioConferencing>]: audioConferencing
      [(Any) <Object>]: This indicates any property can be added to this object.
      [ConferenceId <String>]: The conference id of the online meeting.
      [DialinUrl <String>]: A URL to the externally-accessible web page that contains dial-in information.
      [TollFreeNumber <String>]: 
      [TollFreeNumbers <String[]>]: List of toll-free numbers that are displayed in the meeting invite.
      [TollNumber <String>]: 
      [TollNumbers <String[]>]: List of toll numbers that are displayed in the meeting invite.
    [BroadcastSettings <IMicrosoftGraphBroadcastMeetingSettings>]: broadcastMeetingSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [AllowedAudience <String>]: broadcastMeetingAudience
      [Captions <IMicrosoftGraphBroadcastMeetingCaptionSettings>]: broadcastMeetingCaptionSettings
        [(Any) <Object>]: This indicates any property can be added to this object.
        [IsCaptionEnabled <Boolean?>]: Indicates whether captions are enabled for this Teams live event.
        [SpokenLanguage <String>]: The spoken language.
        [TranslationLanguages <String[]>]: The translation languages (choose up to 6).
      [IsAttendeeReportEnabled <Boolean?>]: Indicates whether attendee report is enabled for this Teams live event. Default value is false.
      [IsQuestionAndAnswerEnabled <Boolean?>]: Indicates whether Q&A is enabled for this Teams live event. Default value is false.
      [IsRecordingEnabled <Boolean?>]: Indicates whether recording is enabled for this Teams live event. Default value is false.
      [IsVideoOnDemandEnabled <Boolean?>]: Indicates whether video on demand is enabled for this Teams live event. Default value is false.
    [ChatInfo <IMicrosoftGraphChatInfo>]: chatInfo
      [(Any) <Object>]: This indicates any property can be added to this object.
      [MessageId <String>]: The unique identifier of a message in a Microsoft Teams channel.
      [ReplyChainMessageId <String>]: The ID of the reply message.
      [ThreadId <String>]: The unique identifier for a thread in Microsoft Teams.
    [CreationDateTime <DateTime?>]: The meeting creation time in UTC. Read-only.
    [EndDateTime <DateTime?>]: The meeting end time in UTC.
    [ExternalId <String>]: 
    [IsBroadcast <Boolean?>]: Indicates if this is a Teams live event.
    [IsEntryExitAnnounced <Boolean?>]: Indicates whether to announce when callers join or leave.
    [JoinInformation <IMicrosoftGraphItemBody>]: itemBody
    [JoinMeetingIdSettings <IMicrosoftGraphJoinMeetingIdSettings>]: joinMeetingIdSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [IsPasscodeRequired <Boolean?>]: Indicates whether a passcode is required to join a meeting when using joinMeetingId. Optional.
      [JoinMeetingId <String>]: The meeting ID to be used to join a meeting. Optional. Read-only.
      [Passcode <String>]: The passcode to join a meeting.  Optional. Read-only.
    [JoinWebUrl <String>]: The join URL of the online meeting. Read-only.
    [LobbyBypassSettings <IMicrosoftGraphLobbyBypassSettings>]: lobbyBypassSettings
      [(Any) <Object>]: This indicates any property can be added to this object.
      [IsDialInBypassEnabled <Boolean?>]: Specifies whether or not to always let dial-in callers bypass the lobby. Optional.
      [Scope <String>]: lobbyBypassScope
    [Participants <IMicrosoftGraphMeetingParticipants>]: meetingParticipants
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Attendees <IMicrosoftGraphMeetingParticipantInfo[]>]: 
        [Identity <IMicrosoftGraphIdentitySet>]: identitySet
        [Role <String>]: onlineMeetingRole
        [Upn <String>]: User principal name of the participant.
      [Organizer <IMicrosoftGraphMeetingParticipantInfo>]: meetingParticipantInfo
    [RecordAutomatically <Boolean?>]: Indicates whether to record the meeting automatically.
    [StartDateTime <DateTime?>]: The meeting start time in UTC.
    [Subject <String>]: The subject of the online meeting.
    [VideoTeleconferenceId <String>]: The video teleconferencing ID. Read-only.
    [WatermarkProtection <IMicrosoftGraphWatermarkProtectionValues>]: watermarkProtectionValues
      [(Any) <Object>]: This indicates any property can be added to this object.
      [IsEnabledForContentSharing <Boolean?>]: Indicates whether to apply a watermark to any shared content.
      [IsEnabledForVideo <Boolean?>]: Indicates whether to apply a watermark to everyone's video feed.
  [OtherMails <String[]>]: A list of additional email addresses for the user; for example: ['bob@contoso.com', 'Robert@fabrikam.com']. NOTE: This property cannot contain accent characters. Returned only on $select. Supports $filter (eq, not, ge, le, in, startsWith, endsWith, /$count eq 0, /$count ne 0).
  [Outlook <IMicrosoftGraphOutlookUser>]: outlookUser
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [MasterCategories <IMicrosoftGraphOutlookCategory[]>]: A list of categories defined for the user.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Color <String>]: categoryColor
      [DisplayName <String>]: A unique name that identifies a category in the user's mailbox. After a category is created, the name cannot be changed. Read-only.
  [OwnedDevices <IMicrosoftGraphDirectoryObject[]>]: Devices that are owned by the user. Read-only. Nullable. Supports $expand and $filter (/$count eq 0, /$count ne 0, /$count eq 1, /$count ne 1).
  [OwnedObjects <IMicrosoftGraphDirectoryObject[]>]: Directory objects that are owned by the user. Read-only. Nullable. Supports $expand.
  [PasswordPolicies <String>]: Specifies password policies for the user. This value is an enumeration with one possible value being DisableStrongPassword, which allows weaker passwords than the default policy to be specified. DisablePasswordExpiration can also be specified. The two may be specified together; for example: DisablePasswordExpiration, DisableStrongPassword. Returned only on $select. For more information on the default password policies, see Azure AD pasword policies. Supports $filter (ne, not, and eq on null values).
  [PasswordProfile <IMicrosoftGraphPasswordProfile>]: passwordProfile
    [(Any) <Object>]: This indicates any property can be added to this object.
    [ForceChangePasswordNextSignIn <Boolean?>]: true if the user must change her password on the next login; otherwise false.
    [ForceChangePasswordNextSignInWithMfa <Boolean?>]: If true, at next sign-in, the user must perform a multi-factor authentication (MFA) before being forced to change their password. The behavior is identical to forceChangePasswordNextSignIn except that the user is required to first perform a multi-factor authentication before password change. After a password change, this property will be automatically reset to false. If not set, default is false.
    [Password <String>]: The password for the user. This property is required when a user is created. It can be updated, but the user will be required to change the password on the next login. The password must satisfy minimum requirements as specified by the user’s passwordPolicies property. By default, a strong password is required.
  [PastProjects <String[]>]: A list for the user to enumerate their past projects. Returned only on $select.
  [People <IMicrosoftGraphPerson[]>]: People that are relevant to the user. Read-only. Nullable.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Birthday <String>]: The person's birthday.
    [CompanyName <String>]: The name of the person's company.
    [Department <String>]: The person's department.
    [DisplayName <String>]: The person's display name.
    [GivenName <String>]: The person's given name.
    [ImAddress <String>]: The instant message voice over IP (VOIP) session initiation protocol (SIP) address for the user. Read-only.
    [IsFavorite <Boolean?>]: True if the user has flagged this person as a favorite.
    [JobTitle <String>]: The person's job title.
    [OfficeLocation <String>]: The location of the person's office.
    [PersonNotes <String>]: Free-form notes that the user has taken about this person.
    [PersonType <IMicrosoftGraphPersonType>]: personType
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Class <String>]: The type of data source, such as Person.
      [Subclass <String>]: The secondary type of data source, such as OrganizationUser.
    [Phones <IMicrosoftGraphPhone[]>]: The person's phone numbers.
    [PostalAddresses <IMicrosoftGraphLocation[]>]: The person's addresses.
    [Profession <String>]: The person's profession.
    [ScoredEmailAddresses <IMicrosoftGraphScoredEmailAddress[]>]: The person's email addresses.
      [Address <String>]: The email address.
      [ItemId <String>]: 
      [RelevanceScore <Double?>]: The relevance score of the email address. A relevance score is used as a sort key, in relation to the other returned results. A higher relevance score value corresponds to a more relevant result. Relevance is determined by the user’s communication and collaboration patterns and business relationships.
      [SelectionLikelihood <String>]: selectionLikelihoodInfo
    [Surname <String>]: The person's surname.
    [UserPrincipalName <String>]: The user principal name (UPN) of the person. The UPN is an Internet-style login name for the person based on the Internet standard RFC 822. By convention, this should map to the person's email name. The general format is alias@domain.
    [Websites <IMicrosoftGraphWebsite[]>]: The person's websites.
      [Address <String>]: The URL of the website.
      [DisplayName <String>]: The display name of the web site.
      [Type <String>]: websiteType
    [YomiCompany <String>]: The phonetic Japanese name of the person's company.
  [Photo <IMicrosoftGraphProfilePhoto>]: profilePhoto
  [Photos <IMicrosoftGraphProfilePhoto[]>]: 
  [Planner <IMicrosoftGraphPlannerUser>]: plannerUser
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Plans <IMicrosoftGraphPlannerPlan[]>]: Read-only. Nullable. Returns the plannerTasks assigned to the user.
    [Tasks <IMicrosoftGraphPlannerTask[]>]: Read-only. Nullable. Returns the plannerPlans shared with the user.
  [PostalCode <String>]: The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code. Maximum length is 40 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [PreferredDataLocation <String>]: The preferred data location for the user. For more information, see OneDrive Online Multi-Geo.
  [PreferredLanguage <String>]: The preferred language for the user. Should follow ISO 639-1 Code; for example en-US. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values)
  [PreferredName <String>]: The preferred name for the user. Not Supported. This attribute returns an empty string.Returned only on $select.
  [Presence <IMicrosoftGraphPresence>]: presence
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Activity <String>]: The supplemental information to a user's availability. Possible values are Available, Away, BeRightBack, Busy, DoNotDisturb, InACall, InAConferenceCall, Inactive, InAMeeting, Offline, OffWork, OutOfOffice, PresenceUnknown, Presenting, UrgentInterruptionsOnly.
    [Availability <String>]: The base presence information for a user. Possible values are Available, AvailableIdle,  Away, BeRightBack, Busy, BusyIdle, DoNotDisturb, Offline, PresenceUnknown
  [Print <IMicrosoftGraphUserPrint>]: userPrint
    [(Any) <Object>]: This indicates any property can be added to this object.
    [RecentPrinterShares <IMicrosoftGraphPrinterShare[]>]: 
      [Capabilities <IMicrosoftGraphPrinterCapabilities>]: printerCapabilities
        [(Any) <Object>]: This indicates any property can be added to this object.
        [BottomMargins <Int32[]>]: A list of supported bottom margins(in microns) for the printer.
        [Collation <Boolean?>]: True if the printer supports collating when printing muliple copies of a multi-page document; false otherwise.
        [ColorModes <String[]>]: The color modes supported by the printer. Valid values are described in the following table.
        [ContentTypes <String[]>]: A list of supported content (MIME) types that the printer supports. It is not guaranteed that the Universal Print service supports printing all of these MIME types.
        [CopiesPerJob <IMicrosoftGraphIntegerRange>]: integerRange
          [(Any) <Object>]: This indicates any property can be added to this object.
          [End <Int64?>]: The inclusive upper bound of the integer range.
          [Start <Int64?>]: The inclusive lower bound of the integer range.
        [Dpis <Int32[]>]: The list of print resolutions in DPI that are supported by the printer.
        [DuplexModes <String[]>]: The list of duplex modes that are supported by the printer. Valid values are described in the following table.
        [FeedOrientations <String[]>]: The list of feed orientations that are supported by the printer.
        [Finishings <String[]>]: Finishing processes the printer supports for a printed document.
        [InputBins <String[]>]: Supported input bins for the printer.
        [IsColorPrintingSupported <Boolean?>]: True if color printing is supported by the printer; false otherwise. Read-only.
        [IsPageRangeSupported <Boolean?>]: True if the printer supports printing by page ranges; false otherwise.
        [LeftMargins <Int32[]>]: A list of supported left margins(in microns) for the printer.
        [MediaColors <String[]>]: The media (i.e., paper) colors supported by the printer.
        [MediaSizes <String[]>]: The media sizes supported by the printer. Supports standard size names for ISO and ANSI media sizes. Valid values are in the following table.
        [MediaTypes <String[]>]: The media types supported by the printer.
        [MultipageLayouts <String[]>]: The presentation directions supported by the printer. Supported values are described in the following table.
        [Orientations <String[]>]: The print orientations supported by the printer. Valid values are described in the following table.
        [OutputBins <String[]>]: The printer's supported output bins (trays).
        [PagesPerSheet <Int32[]>]: Supported number of Input Pages to impose upon a single Impression.
        [Qualities <String[]>]: The print qualities supported by the printer.
        [RightMargins <Int32[]>]: A list of supported right margins(in microns) for the printer.
        [Scalings <String[]>]: Supported print scalings.
        [SupportsFitPdfToPage <Boolean?>]: True if the printer supports scaling PDF pages to match the print media size; false otherwise.
        [TopMargins <Int32[]>]: A list of supported top margins(in microns) for the printer.
      [Defaults <IMicrosoftGraphPrinterDefaults>]: printerDefaults
        [(Any) <Object>]: This indicates any property can be added to this object.
        [ColorMode <String>]: printColorMode
        [ContentType <String>]: The default content (MIME) type to use when processing documents.
        [CopiesPerJob <Int32?>]: The default number of copies printed per job.
        [Dpi <Int32?>]: The default resolution in DPI to use when printing the job.
        [DuplexMode <String>]: printDuplexMode
        [Finishings <String[]>]: The default set of finishings to apply to print jobs. Valid values are described in the following table.
        [FitPdfToPage <Boolean?>]: The default fitPdfToPage setting. True to fit each page of a PDF document to a physical sheet of media; false to let the printer decide how to lay out impressions.
        [InputBin <String>]: 
        [MediaColor <String>]: The default media (such as paper) color to print the document on.
        [MediaSize <String>]: The default media size to use. Supports standard size names for ISO and ANSI media sizes. Valid values are listed in the printerCapabilities topic.
        [MediaType <String>]: The default media (such as paper) type to print the document on.
        [MultipageLayout <String>]: printMultipageLayout
        [Orientation <String>]: printOrientation
        [OutputBin <String>]: The default output bin to place completed prints into. See the printer's capabilities for a list of supported output bins.
        [PagesPerSheet <Int32?>]: The default number of document pages to print on each sheet.
        [Quality <String>]: printQuality
        [Scaling <String>]: printScaling
      [DisplayName <String>]: The name of the printer/printerShare.
      [IsAcceptingJobs <Boolean?>]: Whether the printer/printerShare is currently accepting new print jobs.
      [Jobs <IMicrosoftGraphPrintJob[]>]: The list of jobs that are queued for printing by the printer/printerShare.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Configuration <IMicrosoftGraphPrintJobConfiguration>]: printJobConfiguration
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Collate <Boolean?>]: Whether the printer should collate pages wehen printing multiple copies of a multi-page document.
          [ColorMode <String>]: printColorMode
          [Copies <Int32?>]: The number of copies that should be printed. Read-only.
          [Dpi <Int32?>]: The resolution to use when printing the job, expressed in dots per inch (DPI). Read-only.
          [DuplexMode <String>]: printDuplexMode
          [FeedOrientation <String>]: printerFeedOrientation
          [Finishings <String[]>]: Finishing processes to use when printing.
          [FitPdfToPage <Boolean?>]: 
          [InputBin <String>]: The input bin (tray) to use when printing. See the printer's capabilities for a list of supported input bins.
          [Margin <IMicrosoftGraphPrintMargin>]: printMargin
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Bottom <Int32?>]: The margin in microns from the bottom edge.
            [Left <Int32?>]: The margin in microns from the left edge.
            [Right <Int32?>]: The margin in microns from the right edge.
            [Top <Int32?>]: The margin in microns from the top edge.
          [MediaSize <String>]: The media size to use when printing. Supports standard size names for ISO and ANSI media sizes.
          [MediaType <String>]: 
          [MultipageLayout <String>]: printMultipageLayout
          [Orientation <String>]: printOrientation
          [OutputBin <String>]: 
          [PageRanges <IMicrosoftGraphIntegerRange[]>]: 
          [PagesPerSheet <Int32?>]: 
          [Quality <String>]: printQuality
          [Scaling <String>]: printScaling
        [CreatedBy <IMicrosoftGraphUserIdentity>]: userIdentity
          [(Any) <Object>]: This indicates any property can be added to this object.
          [DisplayName <String>]: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
          [Id <String>]: Unique identifier for the identity.
          [IPAddress <String>]: Indicates the client IP address used by user performing the activity (audit log only).
          [UserPrincipalName <String>]: The userPrincipalName attribute of the user.
        [CreatedDateTime <DateTime?>]: The DateTimeOffset when the job was created. Read-only.
        [Documents <IMicrosoftGraphPrintDocument[]>]: 
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [ContentType <String>]: The document's content (MIME) type. Read-only.
          [DisplayName <String>]: The document's name. Read-only.
          [Size <Int64?>]: The document's size in bytes. Read-only.
        [IsFetchable <Boolean?>]: If true, document can be fetched by printer.
        [RedirectedFrom <String>]: Contains the source job URL, if the job has been redirected from another printer.
        [RedirectedTo <String>]: Contains the destination job URL, if the job has been redirected to another printer.
        [Status <IMicrosoftGraphPrintJobStatus>]: printJobStatus
          [(Any) <Object>]: This indicates any property can be added to this object.
          [Description <String>]: A human-readable description of the print job's current processing state. Read-only.
          [Details <String[]>]: Additional details for print job state. Valid values are described in the following table. Read-only.
          [IsAcquiredByPrinter <Boolean?>]: True if the job was acknowledged by a printer; false otherwise. Read-only.
          [State <String>]: printJobProcessingState
        [Tasks <IMicrosoftGraphPrintTask[]>]: A list of printTasks that were triggered by this print job.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Definition <IMicrosoftGraphPrintTaskDefinition>]: printTaskDefinition
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [CreatedBy <IMicrosoftGraphAppIdentity>]: appIdentity
              [(Any) <Object>]: This indicates any property can be added to this object.
              [AppId <String>]: Refers to the Unique GUID representing Application Id in the Azure Active Directory.
              [DisplayName <String>]: Refers to the Application Name displayed in the Azure Portal.
              [ServicePrincipalId <String>]: Refers to the Unique GUID indicating Service Principal Id in Azure Active Directory for the corresponding App.
              [ServicePrincipalName <String>]: Refers to the Service Principal Name is the Application name in the tenant.
            [DisplayName <String>]: The name of the printTaskDefinition.
            [Tasks <IMicrosoftGraphPrintTask[]>]: A list of tasks that have been created based on this definition. The list includes currently running tasks and recently completed tasks. Read-only.
          [ParentUrl <String>]: The URL for the print entity that triggered this task. For example, https://graph.microsoft.com/v1.0/print/printers/{printerId}/jobs/{jobId}. Read-only.
          [Status <IMicrosoftGraphPrintTaskStatus>]: printTaskStatus
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Description <String>]: A human-readable description of the current processing state of the printTask.
            [State <String>]: printTaskProcessingState
          [Trigger <IMicrosoftGraphPrintTaskTrigger>]: printTaskTrigger
            [(Any) <Object>]: This indicates any property can be added to this object.
            [Id <String>]: The unique idenfier for an entity. Read-only.
            [Definition <IMicrosoftGraphPrintTaskDefinition>]: printTaskDefinition
            [Event <String>]: printEvent
      [Location <IMicrosoftGraphPrinterLocation>]: printerLocation
        [(Any) <Object>]: This indicates any property can be added to this object.
        [AltitudeInMeters <Int32?>]: The altitude, in meters, that the printer is located at.
        [Building <String>]: The building that the printer is located in.
        [City <String>]: The city that the printer is located in.
        [CountryOrRegion <String>]: The country or region that the printer is located in.
        [Floor <String>]: The floor that the printer is located on. Only numerical values are supported right now.
        [FloorDescription <String>]: The description of the floor that the printer is located on.
        [Latitude <Double?>]: The latitude that the printer is located at.
        [Longitude <Double?>]: The longitude that the printer is located at.
        [Organization <String[]>]: The organizational hierarchy that the printer belongs to. The elements should be in hierarchical order.
        [PostalCode <String>]: The postal code that the printer is located in.
        [RoomDescription <String>]: The description of the room that the printer is located in.
        [RoomName <String>]: The room that the printer is located in. Only numerical values are supported right now.
        [Site <String>]: The site that the printer is located in.
        [StateOrProvince <String>]: The state or province that the printer is located in.
        [StreetAddress <String>]: The street address where the printer is located.
        [Subdivision <String[]>]: The subdivision that the printer is located in. The elements should be in hierarchical order.
        [Subunit <String[]>]: 
      [Manufacturer <String>]: The manufacturer of the printer/printerShare.
      [Model <String>]: The model name of the printer/printerShare.
      [Status <IMicrosoftGraphPrinterStatus>]: printerStatus
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Description <String>]: A human-readable description of the printer's current processing state. Read-only.
        [Details <String[]>]: The list of details describing why the printer is in the current state. Valid values are described in the following table. Read-only.
        [State <String>]: printerProcessingState
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [AllowAllUsers <Boolean?>]: If true, all users and groups will be granted access to this printer share. This supersedes the allow lists defined by the allowedUsers and allowedGroups navigation properties.
      [AllowedGroups <IMicrosoftGraphGroup[]>]: The groups whose users have access to print using the printer.
      [AllowedUsers <IMicrosoftGraphUser[]>]: The users who have access to print using the printer.
      [CreatedDateTime <DateTime?>]: The DateTimeOffset when the printer share was created. Read-only.
      [Printer <IMicrosoftGraphPrinter>]: printer
        [(Any) <Object>]: This indicates any property can be added to this object.
        [Capabilities <IMicrosoftGraphPrinterCapabilities>]: printerCapabilities
        [Defaults <IMicrosoftGraphPrinterDefaults>]: printerDefaults
        [DisplayName <String>]: The name of the printer/printerShare.
        [IsAcceptingJobs <Boolean?>]: Whether the printer/printerShare is currently accepting new print jobs.
        [Jobs <IMicrosoftGraphPrintJob[]>]: The list of jobs that are queued for printing by the printer/printerShare.
        [Location <IMicrosoftGraphPrinterLocation>]: printerLocation
        [Manufacturer <String>]: The manufacturer of the printer/printerShare.
        [Model <String>]: The model name of the printer/printerShare.
        [Status <IMicrosoftGraphPrinterStatus>]: printerStatus
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [Connectors <IMicrosoftGraphPrintConnector[]>]: The connectors that are associated with the printer.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [AppVersion <String>]: The connector's version.
          [DisplayName <String>]: The name of the connector.
          [FullyQualifiedDomainName <String>]: The connector machine's hostname.
          [Location <IMicrosoftGraphPrinterLocation>]: printerLocation
          [OperatingSystem <String>]: The connector machine's operating system version.
          [RegisteredDateTime <DateTime?>]: The DateTimeOffset when the connector was registered.
        [HasPhysicalDevice <Boolean?>]: True if the printer has a physical device for printing. Read-only.
        [IsShared <Boolean?>]: True if the printer is shared; false otherwise. Read-only.
        [LastSeenDateTime <DateTime?>]: The most recent dateTimeOffset when a printer interacted with Universal Print. Read-only.
        [RegisteredDateTime <DateTime?>]: The DateTimeOffset when the printer was registered. Read-only.
        [Shares <IMicrosoftGraphPrinterShare[]>]: The list of printerShares that are associated with the printer. Currently, only one printerShare can be associated with the printer. Read-only. Nullable.
        [TaskTriggers <IMicrosoftGraphPrintTaskTrigger[]>]: A list of task triggers that are associated with the printer.
      [ViewPoint <IMicrosoftGraphPrinterShareViewpoint>]: printerShareViewpoint
        [(Any) <Object>]: This indicates any property can be added to this object.
        [LastUsedDateTime <DateTime?>]: Date and time when the printer was last used by the signed-in user. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
  [ProvisionedPlans <IMicrosoftGraphProvisionedPlan[]>]: The plans that are provisioned for the user. Read-only. Not nullable. Returned only on $select. Supports $filter (eq, not, ge, le).
    [CapabilityStatus <String>]: For example, 'Enabled'.
    [ProvisioningStatus <String>]: For example, 'Success'.
    [Service <String>]: The name of the service; for example, 'AccessControlS2S'
  [ProxyAddresses <String[]>]: For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. Changes to the mail property will also update this collection to include the value as an SMTP address. For more information, see mail and proxyAddresses properties. The proxy address prefixed with SMTP (capitalized) is the primary proxy address while those prefixed with smtp are the secondary proxy addresses. For Azure AD B2C accounts, this property has a limit of ten unique addresses. Read-only in Microsoft Graph; you can update this property only through the Microsoft 365 admin center. Not nullable. Returned only on $select. Supports $filter (eq, not, ge, le, startsWith, endsWith, /$count eq 0, /$count ne 0).
  [RegisteredDevices <IMicrosoftGraphDirectoryObject[]>]: Devices that are registered for the user. Read-only. Nullable. Supports $expand.
  [Responsibilities <String[]>]: A list for the user to enumerate their responsibilities. Returned only on $select.
  [Schools <String[]>]: A list for the user to enumerate the schools they have attended. Returned only on $select.
  [ScopedRoleMemberOf <IMicrosoftGraphScopedRoleMembership[]>]: 
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AdministrativeUnitId <String>]: Unique identifier for the administrative unit that the directory role is scoped to
    [RoleId <String>]: Unique identifier for the directory role that the member is in.
    [RoleMemberInfo <IMicrosoftGraphIdentity>]: identity
  [SecurityIdentifier <String>]: Security identifier (SID) of the user, used in Windows scenarios. Read-only. Returned by default. Supports $select and $filter (eq, not, ge, le, startsWith).
  [Settings <IMicrosoftGraphUserSettings>]: userSettings
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [ContributionToContentDiscoveryAsOrganizationDisabled <Boolean?>]: Reflects the organization level setting controlling delegate access to the trending API. When set to true, the organization doesn't have access to Office Delve. The relevancy of the content displayed in Microsoft 365, for example in Suggested sites in SharePoint Home and the Discover view in OneDrive for Business is affected for the whole organization. This setting is read-only and can only be changed by administrators in the SharePoint admin center.
    [ContributionToContentDiscoveryDisabled <Boolean?>]: When set to true, the delegate access to the user's trending API is disabled. When set to true, documents in the user's Office Delve are disabled. When set to true, the relevancy of the content displayed in Microsoft 365, for example in Suggested sites in SharePoint Home and the Discover view in OneDrive for Business is affected. Users can control this setting in Office Delve.
    [ShiftPreferences <IMicrosoftGraphShiftPreferences>]: shiftPreferences
      [(Any) <Object>]: This indicates any property can be added to this object.
      [LastModifiedBy <IMicrosoftGraphIdentitySet>]: identitySet
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Availability <IMicrosoftGraphShiftAvailability[]>]: Availability of the user to be scheduled for work and its recurrence pattern.
        [Recurrence <IMicrosoftGraphPatternedRecurrence>]: patternedRecurrence
        [TimeSlots <IMicrosoftGraphTimeRange[]>]: The time slot(s) preferred by the user.
          [EndTime <String>]: End time for the time range.
          [StartTime <String>]: Start time for the time range.
        [TimeZone <String>]: Specifies the time zone for the indicated time.
  [ShowInAddressList <Boolean?>]: Do not use in Microsoft Graph. Manage this property through the Microsoft 365 admin center instead. Represents whether the user should be included in the Outlook global address list. See Known issue.
  [SignInActivity <IMicrosoftGraphSignInActivity>]: signInActivity
    [(Any) <Object>]: This indicates any property can be added to this object.
    [LastNonInteractiveSignInDateTime <DateTime?>]: The last non-interactive sign-in date for a specific user. You can use this field to calculate the last time a client attempted to sign into the directory on behalf of a user. Because some users may use clients to access tenant resources rather than signing into your tenant directly, you can use the non-interactive sign-in date to along with lastSignInDateTime to identify inactive users. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is: '2014-01-01T00:00:00Z'. Azure AD maintains non-interactive sign-ins going back to May 2020. For more information about using the value of this property, see Manage inactive user accounts in Azure AD.
    [LastNonInteractiveSignInRequestId <String>]: Request identifier of the last non-interactive sign-in performed by this user.
    [LastSignInDateTime <DateTime?>]: The last interactive sign-in date and time for a specific user. You can use this field to calculate the last time a user attempted to sign into the directory with an interactive authentication method. This field can be used to build reports, such as inactive users. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is: '2014-01-01T00:00:00Z'. Azure AD maintains interactive sign-ins going back to April 2020. For more information about using the value of this property, see Manage inactive user accounts in Azure AD.
    [LastSignInRequestId <String>]: Request identifier of the last interactive sign-in performed by this user.
  [SignInSessionsValidFromDateTime <DateTime?>]: Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications will get an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft Graph).  If this happens, the application will need to acquire a new refresh token by making a request to the authorize endpoint. Read-only. Use revokeSignInSessions to reset. Returned only on $select.
  [Skills <String[]>]: A list for the user to enumerate their skills. Returned only on $select.
  [State <String>]: The state or province in the user's address. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [StreetAddress <String>]: The street address of the user's place of business. Maximum length is 1024 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [Surname <String>]: The user's surname (family name or last name). Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [Teamwork <IMicrosoftGraphUserTeamwork>]: userTeamwork
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AssociatedTeams <IMicrosoftGraphAssociatedTeamInfo[]>]: The list of associatedTeamInfo objects that a user is associated with.
      [DisplayName <String>]: The name of the team.
      [Team <IMicrosoftGraphTeam>]: team
      [TenantId <String>]: The ID of the Azure Active Directory tenant.
      [Id <String>]: The unique idenfier for an entity. Read-only.
    [InstalledApps <IMicrosoftGraphUserScopeTeamsAppInstallation[]>]: The apps installed in the personal scope of this user.
      [ConsentedPermissionSet <IMicrosoftGraphTeamsAppPermissionSet>]: teamsAppPermissionSet
      [TeamsApp <IMicrosoftGraphTeamsApp>]: teamsApp
      [TeamsAppDefinition <IMicrosoftGraphTeamsAppDefinition>]: teamsAppDefinition
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [Chat <IMicrosoftGraphChat>]: chat
  [Todo <IMicrosoftGraphTodo>]: todo
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [Lists <IMicrosoftGraphTodoTaskList[]>]: The task lists in the users mailbox.
      [Id <String>]: The unique idenfier for an entity. Read-only.
      [DisplayName <String>]: The name of the task list.
      [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the task list. Nullable.
      [IsOwner <Boolean?>]: True if the user is owner of the given task list.
      [IsShared <Boolean?>]: True if the task list is shared with other users
      [Tasks <IMicrosoftGraphTodoTask[]>]: The tasks in this task list. Read-only. Nullable.
        [Id <String>]: The unique idenfier for an entity. Read-only.
        [AttachmentSessions <IMicrosoftGraphAttachmentSession[]>]: 
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [Content <Byte[]>]: The content streams that are uploaded.
          [ExpirationDateTime <DateTime?>]: The date and time in UTC when the upload session will expire. The complete file must be uploaded before this expiration time is reached.
          [NextExpectedRanges <String[]>]: Indicates a single value {start} that represents the location in the file where the next upload should begin.
        [Attachments <IMicrosoftGraphAttachmentBase[]>]: A collection of file attachments for the task.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [ContentType <String>]: The MIME type.
          [LastModifiedDateTime <DateTime?>]: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
          [Name <String>]: The display name of the attachment. This does not need to be the actual file name.
          [Size <Int32?>]: The length of the attachment in bytes.
        [Body <IMicrosoftGraphItemBody>]: itemBody
        [BodyLastModifiedDateTime <DateTime?>]: The date and time when the task body was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
        [Categories <String[]>]: The categories associated with the task. Each category corresponds to the displayName property of an outlookCategory that the user has defined.
        [ChecklistItems <IMicrosoftGraphChecklistItem[]>]: A collection of checklistItems linked to a task.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [CheckedDateTime <DateTime?>]: The date and time when the checklistItem was finished.
          [CreatedDateTime <DateTime?>]: The date and time when the checklistItem was created.
          [DisplayName <String>]: Field indicating the title of checklistItem.
          [IsChecked <Boolean?>]: State indicating whether the item is checked off or not.
        [CompletedDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [CreatedDateTime <DateTime?>]: The date and time when the task was created. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
        [DueDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [Extensions <IMicrosoftGraphExtension[]>]: The collection of open extensions defined for the task. Nullable.
        [HasAttachments <Boolean?>]: Indicates whether the task has attachments.
        [Importance <String>]: importance
        [IsReminderOn <Boolean?>]: Set to true if an alert is set to remind the user of the task.
        [LastModifiedDateTime <DateTime?>]: The date and time when the task was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
        [LinkedResources <IMicrosoftGraphLinkedResource[]>]: A collection of resources linked to the task.
          [Id <String>]: The unique idenfier for an entity. Read-only.
          [ApplicationName <String>]: The app name of the source that sends the linkedResource.
          [DisplayName <String>]: The title of the linkedResource.
          [ExternalId <String>]: ID of the object that is associated with this task on the third-party/partner system.
          [WebUrl <String>]: Deep link to the linkedResource.
        [Recurrence <IMicrosoftGraphPatternedRecurrence>]: patternedRecurrence
        [ReminderDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [StartDateTime <IMicrosoftGraphDateTimeZone>]: dateTimeTimeZone
        [Status <String>]: taskStatus
        [Title <String>]: A brief description of the task.
      [WellknownListName <String>]: wellknownListName
  [TransitiveMemberOf <IMicrosoftGraphDirectoryObject[]>]: The groups, including nested groups, and directory roles that a user is a member of. Nullable.
  [UsageLocation <String>]: A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries.  Examples include: US, JP, and GB. Not nullable. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
  [UserPrincipalName <String>]: The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain must be present in the tenant's collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization.NOTE: This property cannot contain accent characters. Only the following characters are allowed A - Z, a - z, 0 - 9, ' . - _ ! # ^ ~. For the complete list of allowed characters, see username policies. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, endsWith) and $orderBy.
  [UserType <String>]: A string value that can be used to classify user types in your directory, such as Member and Guest. Returned only on $select. Supports $filter (eq, ne, not, in, and eq on null values). NOTE: For more information about the permissions for member and guest users, see What are the default user permissions in Azure Active Directory?

WINDOWSPROTECTIONSTATE <IMicrosoftGraphWindowsProtectionState>: Device protection status entity.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: The unique idenfier for an entity. Read-only.
  [AntiMalwareVersion <String>]: Current anti malware version
  [DetectedMalwareState <IMicrosoftGraphWindowsDeviceMalwareState[]>]: Device malware list
    [Id <String>]: The unique idenfier for an entity. Read-only.
    [AdditionalInformationUrl <String>]: Information URL to learn more about the malware
    [Category <WindowsMalwareCategory?>]: Malware category id
    [DetectionCount <Int32?>]: Number of times the malware is detected
    [DisplayName <String>]: Malware name
    [ExecutionState <WindowsMalwareExecutionState?>]: Malware execution status
    [InitialDetectionDateTime <DateTime?>]: Initial detection datetime of the malware
    [LastStateChangeDateTime <DateTime?>]: The last time this particular threat was changed
    [Severity <WindowsMalwareSeverity?>]: Malware severity
    [State <WindowsMalwareState?>]: Malware current status
    [ThreatState <WindowsMalwareThreatState?>]: Malware threat status
  [DeviceState <WindowsDeviceHealthState?>]: Computer endpoint protection state
  [EngineVersion <String>]: Current endpoint protection engine's version
  [FullScanOverdue <Boolean?>]: When TRUE indicates full scan is overdue, when FALSE indicates full scan is not overdue. Defaults to setting on client device.
  [FullScanRequired <Boolean?>]: When TRUE indicates full scan is required, when FALSE indicates full scan is not required. Defaults to setting on client device.
  [IsVirtualMachine <Boolean?>]: When TRUE indicates the device is a virtual machine, when FALSE indicates the device is not a virtual machine. Defaults to setting on client device.
  [LastFullScanDateTime <DateTime?>]: Last quick scan datetime
  [LastFullScanSignatureVersion <String>]: Last full scan signature version
  [LastQuickScanDateTime <DateTime?>]: Last quick scan datetime
  [LastQuickScanSignatureVersion <String>]: Last quick scan signature version
  [LastReportedDateTime <DateTime?>]: Last device health status reported time
  [MalwareProtectionEnabled <Boolean?>]: When TRUE indicates anti malware is enabled when FALSE indicates anti malware is not enabled.
  [NetworkInspectionSystemEnabled <Boolean?>]: When TRUE indicates network inspection system enabled, when FALSE indicates network inspection system is not enabled. Defaults to setting on client device.
  [ProductStatus <WindowsDefenderProductStatus?>]: Product Status of Windows Defender
  [QuickScanOverdue <Boolean?>]: When TRUE indicates quick scan is overdue, when FALSE indicates quick scan is not overdue. Defaults to setting on client device.
  [RealTimeProtectionEnabled <Boolean?>]: When TRUE indicates real time protection is enabled, when FALSE indicates real time protection is not enabled. Defaults to setting on client device.
  [RebootRequired <Boolean?>]: When TRUE indicates reboot is required, when FALSE indicates when TRUE indicates reboot is not required. Defaults to setting on client device.
  [SignatureUpdateOverdue <Boolean?>]: When TRUE indicates signature is out of date, when FALSE indicates signature is not out of date. Defaults to setting on client device.
  [SignatureVersion <String>]: Current malware definitions version
  [TamperProtectionEnabled <Boolean?>]: When TRUE indicates the Windows Defender tamper protection feature is enabled, when FALSE indicates the Windows Defender tamper protection feature is not enabled. Defaults to setting on client device.
.Link
https://learn.microsoft.com/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgusermanageddevice
#>
function Update-MgUserManagedDevice {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # The unique identifier of user
    ${UserId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice]
    # Devices that are managed or pre-enrolled through Intune
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ComplianceState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ComplianceState]
    # Compliance state.
    ${ComplianceState},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphConfigurationManagerClientEnabledFeatures]
    # configuration Manager client enabled features
    # To construct, see NOTES section for CONFIGURATIONMANAGERCLIENTENABLEDFEATURES properties and create a hash table.
    ${ConfigurationManagerClientEnabledFeatures},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCategory]
    # Device categories provides a way to organize your devices.
    # Using device categories, company administrators can define their own categories that make sense to their company.
    # These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment.
    # You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
    # To construct, see NOTES section for DEVICECATEGORY properties and create a hash table.
    ${DeviceCategory},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState[]]
    # Device compliance policy states for this device.
    # To construct, see NOTES section for DEVICECOMPLIANCEPOLICYSTATES properties and create a hash table.
    ${DeviceCompliancePolicyStates},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState[]]
    # Device configuration states for this device.
    # To construct, see NOTES section for DEVICECONFIGURATIONSTATES properties and create a hash table.
    ${DeviceConfigurationStates},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.DeviceEnrollmentType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.DeviceEnrollmentType]
    # Possible ways of adding a mobile device to management.
    ${DeviceEnrollmentType},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceHealthAttestationState]
    # deviceHealthAttestationState
    # To construct, see NOTES section for DEVICEHEALTHATTESTATIONSTATE properties and create a hash table.
    ${DeviceHealthAttestationState},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.DeviceRegistrationState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.DeviceRegistrationState]
    # Device registration status.
    ${DeviceRegistrationState},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.DeviceManagementExchangeAccessState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.DeviceManagementExchangeAccessState]
    # Device Exchange Access State.
    ${ExchangeAccessState},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.DeviceManagementExchangeAccessStateReason])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.DeviceManagementExchangeAccessStateReason]
    # Device Exchange Access State Reason.
    ${ExchangeAccessStateReason},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique idenfier for an entity.
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceLogCollectionResponse[]]
    # List of log collection requests
    # To construct, see NOTES section for LOGCOLLECTIONREQUESTS properties and create a hash table.
    ${LogCollectionRequests},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Automatically generated name to identify a device.
    # Can be overwritten to a user friendly name.
    ${ManagedDeviceName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedDeviceOwnerType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedDeviceOwnerType]
    # Owner type of device.
    ${ManagedDeviceOwnerType},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagementAgentType])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagementAgentType]
    # managementAgentType
    ${ManagementAgent},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Notes on the device created by IT Admin.
    # Default is null.
    # To retrieve actual values GET call needs to be made, with device id and included in select parameter.
    # Supports: $select.
    # $Search is not supported.
    ${Notes},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Graph.PowerShell.Support.ManagedDevicePartnerReportedHealthState])]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Support.ManagedDevicePartnerReportedHealthState]
    # Available health states for the Device Health API
    ${PartnerReportedThreatState},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUser[]]
    # The primary users associated with the managed device.
    # To construct, see NOTES section for USERS properties and create a hash table.
    ${Users},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsProtectionState]
    # Device protection status entity.
    # To construct, see NOTES section for WINDOWSPROTECTIONSTATE properties and create a hash table.
    ${WindowsProtectionState},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDevice_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDevice_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDevice_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDevice_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Graph.PowerShell.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}

# SIG # Begin signature block
# MIInvwYJKoZIhvcNAQcCoIInsDCCJ6wCAQExDzANBglghkgBZQMEAgEFADB5Bgor
# BgEEAYI3AgEEoGswaTA0BgorBgEEAYI3AgEeMCYCAwEAAAQQH8w7YFlLCE63JNLG
# KX7zUQIBAAIBAAIBAAIBAAIBADAxMA0GCWCGSAFlAwQCAQUABCBCez+FDKQ4GQSq
# IuuAUXqQouCFjC9WDAzRiqNZNxMgKaCCDXYwggX0MIID3KADAgECAhMzAAADTrU8
# esGEb+srAAAAAANOMA0GCSqGSIb3DQEBCwUAMH4xCzAJBgNVBAYTAlVTMRMwEQYD
# VQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNy
# b3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMTH01pY3Jvc29mdCBDb2RlIFNpZ25p
# bmcgUENBIDIwMTEwHhcNMjMwMzE2MTg0MzI5WhcNMjQwMzE0MTg0MzI5WjB0MQsw
# CQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u
# ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMR4wHAYDVQQDExVNaWNy
# b3NvZnQgQ29ycG9yYXRpb24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
# AQDdCKiNI6IBFWuvJUmf6WdOJqZmIwYs5G7AJD5UbcL6tsC+EBPDbr36pFGo1bsU
# p53nRyFYnncoMg8FK0d8jLlw0lgexDDr7gicf2zOBFWqfv/nSLwzJFNP5W03DF/1
# 1oZ12rSFqGlm+O46cRjTDFBpMRCZZGddZlRBjivby0eI1VgTD1TvAdfBYQe82fhm
# WQkYR/lWmAK+vW/1+bO7jHaxXTNCxLIBW07F8PBjUcwFxxyfbe2mHB4h1L4U0Ofa
# +HX/aREQ7SqYZz59sXM2ySOfvYyIjnqSO80NGBaz5DvzIG88J0+BNhOu2jl6Dfcq
# jYQs1H/PMSQIK6E7lXDXSpXzAgMBAAGjggFzMIIBbzAfBgNVHSUEGDAWBgorBgEE
# AYI3TAgBBggrBgEFBQcDAzAdBgNVHQ4EFgQUnMc7Zn/ukKBsBiWkwdNfsN5pdwAw
# RQYDVR0RBD4wPKQ6MDgxHjAcBgNVBAsTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEW
# MBQGA1UEBRMNMjMwMDEyKzUwMDUxNjAfBgNVHSMEGDAWgBRIbmTlUAXTgqoXNzci
# tW2oynUClTBUBgNVHR8ETTBLMEmgR6BFhkNodHRwOi8vd3d3Lm1pY3Jvc29mdC5j
# b20vcGtpb3BzL2NybC9NaWNDb2RTaWdQQ0EyMDExXzIwMTEtMDctMDguY3JsMGEG
# CCsGAQUFBwEBBFUwUzBRBggrBgEFBQcwAoZFaHR0cDovL3d3dy5taWNyb3NvZnQu
# Y29tL3BraW9wcy9jZXJ0cy9NaWNDb2RTaWdQQ0EyMDExXzIwMTEtMDctMDguY3J0
# MAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQELBQADggIBAD21v9pHoLdBSNlFAjmk
# mx4XxOZAPsVxxXbDyQv1+kGDe9XpgBnT1lXnx7JDpFMKBwAyIwdInmvhK9pGBa31
# TyeL3p7R2s0L8SABPPRJHAEk4NHpBXxHjm4TKjezAbSqqbgsy10Y7KApy+9UrKa2
# kGmsuASsk95PVm5vem7OmTs42vm0BJUU+JPQLg8Y/sdj3TtSfLYYZAaJwTAIgi7d
# hzn5hatLo7Dhz+4T+MrFd+6LUa2U3zr97QwzDthx+RP9/RZnur4inzSQsG5DCVIM
# pA1l2NWEA3KAca0tI2l6hQNYsaKL1kefdfHCrPxEry8onJjyGGv9YKoLv6AOO7Oh
# JEmbQlz/xksYG2N/JSOJ+QqYpGTEuYFYVWain7He6jgb41JbpOGKDdE/b+V2q/gX
# UgFe2gdwTpCDsvh8SMRoq1/BNXcr7iTAU38Vgr83iVtPYmFhZOVM0ULp/kKTVoir
# IpP2KCxT4OekOctt8grYnhJ16QMjmMv5o53hjNFXOxigkQWYzUO+6w50g0FAeFa8
# 5ugCCB6lXEk21FFB1FdIHpjSQf+LP/W2OV/HfhC3uTPgKbRtXo83TZYEudooyZ/A
# Vu08sibZ3MkGOJORLERNwKm2G7oqdOv4Qj8Z0JrGgMzj46NFKAxkLSpE5oHQYP1H
# tPx1lPfD7iNSbJsP6LiUHXH1MIIHejCCBWKgAwIBAgIKYQ6Q0gAAAAAAAzANBgkq
# hkiG9w0BAQsFADCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24x
# EDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
# bjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5
# IDIwMTEwHhcNMTEwNzA4MjA1OTA5WhcNMjYwNzA4MjEwOTA5WjB+MQswCQYDVQQG
# EwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwG
# A1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQg
# Q29kZSBTaWduaW5nIFBDQSAyMDExMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC
# CgKCAgEAq/D6chAcLq3YbqqCEE00uvK2WCGfQhsqa+laUKq4BjgaBEm6f8MMHt03
# a8YS2AvwOMKZBrDIOdUBFDFC04kNeWSHfpRgJGyvnkmc6Whe0t+bU7IKLMOv2akr
# rnoJr9eWWcpgGgXpZnboMlImEi/nqwhQz7NEt13YxC4Ddato88tt8zpcoRb0Rrrg
# OGSsbmQ1eKagYw8t00CT+OPeBw3VXHmlSSnnDb6gE3e+lD3v++MrWhAfTVYoonpy
# 4BI6t0le2O3tQ5GD2Xuye4Yb2T6xjF3oiU+EGvKhL1nkkDstrjNYxbc+/jLTswM9
# sbKvkjh+0p2ALPVOVpEhNSXDOW5kf1O6nA+tGSOEy/S6A4aN91/w0FK/jJSHvMAh
# dCVfGCi2zCcoOCWYOUo2z3yxkq4cI6epZuxhH2rhKEmdX4jiJV3TIUs+UsS1Vz8k
# A/DRelsv1SPjcF0PUUZ3s/gA4bysAoJf28AVs70b1FVL5zmhD+kjSbwYuER8ReTB
# w3J64HLnJN+/RpnF78IcV9uDjexNSTCnq47f7Fufr/zdsGbiwZeBe+3W7UvnSSmn
# Eyimp31ngOaKYnhfsi+E11ecXL93KCjx7W3DKI8sj0A3T8HhhUSJxAlMxdSlQy90
# lfdu+HggWCwTXWCVmj5PM4TasIgX3p5O9JawvEagbJjS4NaIjAsCAwEAAaOCAe0w
# ggHpMBAGCSsGAQQBgjcVAQQDAgEAMB0GA1UdDgQWBBRIbmTlUAXTgqoXNzcitW2o
# ynUClTAZBgkrBgEEAYI3FAIEDB4KAFMAdQBiAEMAQTALBgNVHQ8EBAMCAYYwDwYD
# VR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBRyLToCMZBDuRQFTuHqp8cx0SOJNDBa
# BgNVHR8EUzBRME+gTaBLhklodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpL2Ny
# bC9wcm9kdWN0cy9NaWNSb29DZXJBdXQyMDExXzIwMTFfMDNfMjIuY3JsMF4GCCsG
# AQUFBwEBBFIwUDBOBggrBgEFBQcwAoZCaHR0cDovL3d3dy5taWNyb3NvZnQuY29t
# L3BraS9jZXJ0cy9NaWNSb29DZXJBdXQyMDExXzIwMTFfMDNfMjIuY3J0MIGfBgNV
# HSAEgZcwgZQwgZEGCSsGAQQBgjcuAzCBgzA/BggrBgEFBQcCARYzaHR0cDovL3d3
# dy5taWNyb3NvZnQuY29tL3BraW9wcy9kb2NzL3ByaW1hcnljcHMuaHRtMEAGCCsG
# AQUFBwICMDQeMiAdAEwAZQBnAGEAbABfAHAAbwBsAGkAYwB5AF8AcwB0AGEAdABl
# AG0AZQBuAHQALiAdMA0GCSqGSIb3DQEBCwUAA4ICAQBn8oalmOBUeRou09h0ZyKb
# C5YR4WOSmUKWfdJ5DJDBZV8uLD74w3LRbYP+vj/oCso7v0epo/Np22O/IjWll11l
# hJB9i0ZQVdgMknzSGksc8zxCi1LQsP1r4z4HLimb5j0bpdS1HXeUOeLpZMlEPXh6
# I/MTfaaQdION9MsmAkYqwooQu6SpBQyb7Wj6aC6VoCo/KmtYSWMfCWluWpiW5IP0
# wI/zRive/DvQvTXvbiWu5a8n7dDd8w6vmSiXmE0OPQvyCInWH8MyGOLwxS3OW560
# STkKxgrCxq2u5bLZ2xWIUUVYODJxJxp/sfQn+N4sOiBpmLJZiWhub6e3dMNABQam
# ASooPoI/E01mC8CzTfXhj38cbxV9Rad25UAqZaPDXVJihsMdYzaXht/a8/jyFqGa
# J+HNpZfQ7l1jQeNbB5yHPgZ3BtEGsXUfFL5hYbXw3MYbBL7fQccOKO7eZS/sl/ah
# XJbYANahRr1Z85elCUtIEJmAH9AAKcWxm6U/RXceNcbSoqKfenoi+kiVH6v7RyOA
# 9Z74v2u3S5fi63V4GuzqN5l5GEv/1rMjaHXmr/r8i+sLgOppO6/8MO0ETI7f33Vt
# Y5E90Z1WTk+/gFcioXgRMiF670EKsT/7qMykXcGhiJtXcVZOSEXAQsmbdlsKgEhr
# /Xmfwb1tbWrJUnMTDXpQzTGCGZ8wghmbAgEBMIGVMH4xCzAJBgNVBAYTAlVTMRMw
# EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVN
# aWNyb3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMTH01pY3Jvc29mdCBDb2RlIFNp
# Z25pbmcgUENBIDIwMTECEzMAAANOtTx6wYRv6ysAAAAAA04wDQYJYIZIAWUDBAIB
# BQCgga4wGQYJKoZIhvcNAQkDMQwGCisGAQQBgjcCAQQwHAYKKwYBBAGCNwIBCzEO
# MAwGCisGAQQBgjcCARUwLwYJKoZIhvcNAQkEMSIEIJCTInv8U7esoN5l2C8j9wjb
# G68ceox4UxLiMTVWFEFzMEIGCisGAQQBgjcCAQwxNDAyoBSAEgBNAGkAYwByAG8A
# cwBvAGYAdKEagBhodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20wDQYJKoZIhvcNAQEB
# BQAEggEAsZyUEYd8HFCD/kt6INxfcIyXki5VYkddNppJ9Unkdedkfid0bV6tlqJj
# PZ0e6TYSxW9t/GXNWh02l+z3XbGn4PMFi2K77dsBfGfurSkxPz5SlE4ri6+4Dt2o
# Bqp20roFBCQD8JNDnMzlL3H4f3EdmhiTnKSloGWix5xG4V96oc/gljEcKIq+u7nt
# QhFFV1CPg0hk9+YdxmXm/zfbZAvTbeQRdtj7r3X+YLYHZSunTV/oqI5SoOl+DVGn
# l5BDg/kYCR6G+g2XwfJJbcLjkDn8W00Y001dL4cUcZa6T4A+bdLwCcb5GlCy1Ase
# 7lLwfAjPA/h3V8NYBvVkGHteTCL8CqGCFykwghclBgorBgEEAYI3AwMBMYIXFTCC
# FxEGCSqGSIb3DQEHAqCCFwIwghb+AgEDMQ8wDQYJYIZIAWUDBAIBBQAwggFZBgsq
# hkiG9w0BCRABBKCCAUgEggFEMIIBQAIBAQYKKwYBBAGEWQoDATAxMA0GCWCGSAFl
# AwQCAQUABCCmdZ6ymtgiNpcLCalACnIxu/XpjPZKENULPsImdpK0XwIGZMmLvsy9
# GBMyMDIzMDgxMDE5MzM0NC4zMDZaMASAAgH0oIHYpIHVMIHSMQswCQYDVQQGEwJV
# UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UE
# ChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMS0wKwYDVQQLEyRNaWNyb3NvZnQgSXJl
# bGFuZCBPcGVyYXRpb25zIExpbWl0ZWQxJjAkBgNVBAsTHVRoYWxlcyBUU1MgRVNO
# OjhENDEtNEJGNy1CM0I3MSUwIwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBT
# ZXJ2aWNloIIReDCCBycwggUPoAMCAQICEzMAAAGz/iXOKRsbihwAAQAAAbMwDQYJ
# KoZIhvcNAQELBQAwfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24x
# EDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
# bjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTAwHhcNMjIw
# OTIwMjAyMjAzWhcNMjMxMjE0MjAyMjAzWjCB0jELMAkGA1UEBhMCVVMxEzARBgNV
# BAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jv
# c29mdCBDb3Jwb3JhdGlvbjEtMCsGA1UECxMkTWljcm9zb2Z0IElyZWxhbmQgT3Bl
# cmF0aW9ucyBMaW1pdGVkMSYwJAYDVQQLEx1UaGFsZXMgVFNTIEVTTjo4RDQxLTRC
# RjctQjNCNzElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAgU2VydmljZTCC
# AiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBALR8D7rmGICuLLBggrK9je3h
# JSpc9CTwbra/4Kb2eu5DZR6oCgFtCbigMuMcY31QlHr/3kuWhHJ05n4+t377PHon
# dDDbz/dU+q/NfXSKr1pwU2OLylY0sw531VZ1sWAdyD2EQCEzTdLD4KJbC6wmACon
# iJBAqvhDyXxJ0Nuvlk74rdVEvribsDZxzClWEa4v62ENj/HyiCUX3MZGnY/AhDya
# zfpchDWoP6cJgNCSXmHV9XsJgXJ4l+AYAgaqAvN8N+EpN+0TErCgFOfwZV21cg7v
# genOV48gmG/EMf0LvRAeirxPUu+jNB3JSFbW1WU8Z5xsLEoNle35icdET+G3wDNm
# cSXlQYs4t94IWR541+PsUTkq0kmdP4/1O4GD54ZsJ5eUnLaawXOxxT1fgbWb9VRg
# 1Z4aspWpuL5gFwHa8UNMRxsKffor6qrXVVQ1OdJOS1JlevhpZlssSCVDodMc30I3
# fWezny6tNOofpfaPrtwJ0ukXcLD1yT+89u4uQB/rqUK6J7HpkNu0fR5M5xGtOch9
# nyncO9alorxDfiEdb6zeqtCfcbo46u+/rfsslcGSuJFzlwENnU+vQ+JJ6jJRUrB+
# mr51zWUMiWTLDVmhLd66//Da/YBjA0Bi0hcYuO/WctfWk/3x87ALbtqHAbk6i1cJ
# 8a2coieuj+9BASSjuXkBAgMBAAGjggFJMIIBRTAdBgNVHQ4EFgQU0BpdwlFnUgwY
# izhIIf9eBdyfw40wHwYDVR0jBBgwFoAUn6cVXQBeYl2D9OXSZacbUzUZ6XIwXwYD
# VR0fBFgwVjBUoFKgUIZOaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9j
# cmwvTWljcm9zb2Z0JTIwVGltZS1TdGFtcCUyMFBDQSUyMDIwMTAoMSkuY3JsMGwG
# CCsGAQUFBwEBBGAwXjBcBggrBgEFBQcwAoZQaHR0cDovL3d3dy5taWNyb3NvZnQu
# Y29tL3BraW9wcy9jZXJ0cy9NaWNyb3NvZnQlMjBUaW1lLVN0YW1wJTIwUENBJTIw
# MjAxMCgxKS5jcnQwDAYDVR0TAQH/BAIwADAWBgNVHSUBAf8EDDAKBggrBgEFBQcD
# CDAOBgNVHQ8BAf8EBAMCB4AwDQYJKoZIhvcNAQELBQADggIBAFqGuzfOsAm4wAJf
# ERmJgWW0tNLLPk6VYj53+hBmUICsqGgj9oXNNatgCq+jHt03EiTzVhxteKWOLoTM
# x39cCcUJgDOQIH+GjuyjYVVdOCa9Fx6lI690/OBZFlz2DDuLpUBuo//v3e4Kns41
# 2mO3A6mDQkndxeJSsdBSbkKqccB7TC/muFOhzg39mfijGICc1kZziJE/6HdKCF8p
# 9+vs1yGUR5uzkIo+68q/n5kNt33hdaQ234VEh0wPSE+dCgpKRqfxgYsBT/5tXa3e
# 8TXyJlVoG9jwXBrKnSQb4+k19jHVB3wVUflnuANJRI9azWwqYFKDbZWkfQ8tpNoF
# fKKFRHbWomcodP1bVn7kKWUCTA8YG2RlTBtvrs3CqY3mADTJUig4ckN/MG6AIr8Q
# +ACmKBEm4OFpOcZMX0cxasopdgxM9aSdBusaJfZ3Itl3vC5C3RE97uURsVB2pvC+
# CnjFtt/PkY71l9UTHzUCO++M4hSGSzkfu+yBhXMGeBZqLXl9cffgYPcnRFjQT97G
# b/bg4ssLIFuNJNNAJub+IvxhomRrtWuB4SN935oMfvG5cEeZ7eyYpBZ4DbkvN44Z
# vER0EHRakL2xb1rrsj7c8I+auEqYztUpDnuq6BxpBIUAlF3UDJ0SMG5xqW/9hLMW
# naJCvIerEWTFm64jthAi0BDMwnCwMIIHcTCCBVmgAwIBAgITMwAAABXF52ueAptJ
# mQAAAAAAFTANBgkqhkiG9w0BAQsFADCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgT
# Cldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m
# dCBDb3Jwb3JhdGlvbjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3QgQ2VydGlmaWNh
# dGUgQXV0aG9yaXR5IDIwMTAwHhcNMjEwOTMwMTgyMjI1WhcNMzAwOTMwMTgzMjI1
# WjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
# UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQD
# Ex1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDCCAiIwDQYJKoZIhvcNAQEB
# BQADggIPADCCAgoCggIBAOThpkzntHIhC3miy9ckeb0O1YLT/e6cBwfSqWxOdcjK
# NVf2AX9sSuDivbk+F2Az/1xPx2b3lVNxWuJ+Slr+uDZnhUYjDLWNE893MsAQGOhg
# fWpSg0S3po5GawcU88V29YZQ3MFEyHFcUTE3oAo4bo3t1w/YJlN8OWECesSq/XJp
# rx2rrPY2vjUmZNqYO7oaezOtgFt+jBAcnVL+tuhiJdxqD89d9P6OU8/W7IVWTe/d
# vI2k45GPsjksUZzpcGkNyjYtcI4xyDUoveO0hyTD4MmPfrVUj9z6BVWYbWg7mka9
# 7aSueik3rMvrg0XnRm7KMtXAhjBcTyziYrLNueKNiOSWrAFKu75xqRdbZ2De+JKR
# Hh09/SDPc31BmkZ1zcRfNN0Sidb9pSB9fvzZnkXftnIv231fgLrbqn427DZM9itu
# qBJR6L8FA6PRc6ZNN3SUHDSCD/AQ8rdHGO2n6Jl8P0zbr17C89XYcz1DTsEzOUyO
# ArxCaC4Q6oRRRuLRvWoYWmEBc8pnol7XKHYC4jMYctenIPDC+hIK12NvDMk2ZItb
# oKaDIV1fMHSRlJTYuVD5C4lh8zYGNRiER9vcG9H9stQcxWv2XFJRXRLbJbqvUAV6
# bMURHXLvjflSxIUXk8A8FdsaN8cIFRg/eKtFtvUeh17aj54WcmnGrnu3tz5q4i6t
# AgMBAAGjggHdMIIB2TASBgkrBgEEAYI3FQEEBQIDAQABMCMGCSsGAQQBgjcVAgQW
# BBQqp1L+ZMSavoKRPEY1Kc8Q/y8E7jAdBgNVHQ4EFgQUn6cVXQBeYl2D9OXSZacb
# UzUZ6XIwXAYDVR0gBFUwUzBRBgwrBgEEAYI3TIN9AQEwQTA/BggrBgEFBQcCARYz
# aHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9Eb2NzL1JlcG9zaXRvcnku
# aHRtMBMGA1UdJQQMMAoGCCsGAQUFBwMIMBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIA
# QwBBMAsGA1UdDwQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNX2
# VsuP6KJcYmjRPZSQW9fOmhjEMFYGA1UdHwRPME0wS6BJoEeGRWh0dHA6Ly9jcmwu
# bWljcm9zb2Z0LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL01pY1Jvb0NlckF1dF8yMDEw
# LTA2LTIzLmNybDBaBggrBgEFBQcBAQROMEwwSgYIKwYBBQUHMAKGPmh0dHA6Ly93
# d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYt
# MjMuY3J0MA0GCSqGSIb3DQEBCwUAA4ICAQCdVX38Kq3hLB9nATEkW+Geckv8qW/q
# XBS2Pk5HZHixBpOXPTEztTnXwnE2P9pkbHzQdTltuw8x5MKP+2zRoZQYIu7pZmc6
# U03dmLq2HnjYNi6cqYJWAAOwBb6J6Gngugnue99qb74py27YP0h1AdkY3m2CDPVt
# I1TkeFN1JFe53Z/zjj3G82jfZfakVqr3lbYoVSfQJL1AoL8ZthISEV09J+BAljis
# 9/kpicO8F7BUhUKz/AyeixmJ5/ALaoHCgRlCGVJ1ijbCHcNhcy4sa3tuPywJeBTp
# kbKpW99Jo3QMvOyRgNI95ko+ZjtPu4b6MhrZlvSP9pEB9s7GdP32THJvEKt1MMU0
# sHrYUP4KWN1APMdUbZ1jdEgssU5HLcEUBHG/ZPkkvnNtyo4JvbMBV0lUZNlz138e
# W0QBjloZkWsNn6Qo3GcZKCS6OEuabvshVGtqRRFHqfG3rsjoiV5PndLQTHa1V1QJ
# sWkBRH58oWFsc/4Ku+xBZj1p/cvBQUl+fpO+y/g75LcVv7TOPqUxUYS8vwLBgqJ7
# Fx0ViY1w/ue10CgaiQuPNtq6TPmb/wrpNPgkNWcr4A245oyZ1uEi6vAnQj0llOZ0
# dFtq0Z4+7X6gMTN9vMvpe784cETRkPHIqzqKOghif9lwY1NNje6CbaUFEMFxBmoQ
# tB1VM1izoXBm8qGCAtQwggI9AgEBMIIBAKGB2KSB1TCB0jELMAkGA1UEBhMCVVMx
# EzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoT
# FU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEtMCsGA1UECxMkTWljcm9zb2Z0IElyZWxh
# bmQgT3BlcmF0aW9ucyBMaW1pdGVkMSYwJAYDVQQLEx1UaGFsZXMgVFNTIEVTTjo4
# RDQxLTRCRjctQjNCNzElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAgU2Vy
# dmljZaIjCgEBMAcGBSsOAwIaAxUAcYtE6JbdHhKlwkJeKoCV1JIkDmGggYMwgYCk
# fjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
# UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQD
# Ex1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDANBgkqhkiG9w0BAQUFAAIF
# AOh/PYowIhgPMjAyMzA4MTAxODQyMThaGA8yMDIzMDgxMTE4NDIxOFowdDA6Bgor
# BgEEAYRZCgQBMSwwKjAKAgUA6H89igIBADAHAgEAAgIKSjAHAgEAAgISmDAKAgUA
# 6ICPCgIBADA2BgorBgEEAYRZCgQCMSgwJjAMBgorBgEEAYRZCgMCoAowCAIBAAID
# B6EgoQowCAIBAAIDAYagMA0GCSqGSIb3DQEBBQUAA4GBALKlz2yhf83dKbtl2uZT
# cUWACGLVC1ng/ntK4DgNTZ8grGSFbF1Ns8o7NQv5K6bLsgBAy2fdtmf8Pty67E/d
# OMORqfFpg4Fhy+kn8Yta/qdeWSCFAU4ykPhcsyEMS3K3gmqUdA6hlITS1fhg/lwY
# u7qLam8zSNuoLrLwna7c8nxIMYIEDTCCBAkCAQEwgZMwfDELMAkGA1UEBhMCVVMx
# EzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoT
# FU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUt
# U3RhbXAgUENBIDIwMTACEzMAAAGz/iXOKRsbihwAAQAAAbMwDQYJYIZIAWUDBAIB
# BQCgggFKMBoGCSqGSIb3DQEJAzENBgsqhkiG9w0BCRABBDAvBgkqhkiG9w0BCQQx
# IgQgh+oogvBFSZNDoSm8f724N2sAmp9b5sjCH2sXzmlxqFYwgfoGCyqGSIb3DQEJ
# EAIvMYHqMIHnMIHkMIG9BCCGoTPVKhDSB7ZG0zJQZUM2jk/ll1zJGh6KOhn76k+/
# QjCBmDCBgKR+MHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAw
# DgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24x
# JjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEwAhMzAAABs/4l
# zikbG4ocAAEAAAGzMCIEIL8hurTJgzQJUKmBEAtM80ix8uTQqQ4b1z58L5RUhDGb
# MA0GCSqGSIb3DQEBCwUABIICAKe2uKWE6bWSLBLpskKcduFCTji1r1X7jjusu1Nl
# pI9/EKzyWP54imxK4rsOEOudcwA40qUWKBfr/ozifA9Nqn1O3ZpjJENAU19hIu8F
# t2KGPz0L07HGJWa6XOj5yH63JfIrGUCvBHmhgKHV1Yd7/Ex9L+H5U+sOId4O7df+
# rhZ9pjOSFOYQmop5tPLYf77qmZhqKeCeOiOSkP0wvWgqU67WGBnzHBPlK3AuONLX
# 79At7twneM/dVsj1Lwc7lFxbrieGNceNqgcMNxEn1eeu3WAaNftPpr86f0aOWPGj
# 6J9Fs2nBrQ+1gXNHOtpTwGAYRIx5j0jiFXRFgyWnpmG2AW0C+AAHD1nbH+76atHy
# UJRH2kmxN/UMePPOMl0XL000HUsvgEb/FSfaDqeYe1AtPk71eLhcW8E7YWYAdW/c
# 6PSU3Ym7NRJ69WQakp6hNWQPMydy0N+7XdeBGfiUDG0KF/qacYQT3BM2YKMRLFcd
# ohm65CTNaU2ifp5N0NK7nC7DKSPUbalRqosnOCqdO11a0fEec6jQmboXh3yxmoqv
# iuXhZwkznJ8sfi7oquiP3I2ptxexi4qOpVzx5wEaEn6omhNgu8WDipRJv+yzsOOW
# spp4L9Ta2CJT0C5b96Dw/clzXk3EH13ypKk3vawbJW4QghQzuA0we6f9IgVDKvkh
# plV2
# SIG # End signature block
